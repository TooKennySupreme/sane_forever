cscope 15 $HOME/dev/panoscan/sane-backends-1.0.23/frontend               0000390029
	@saned.c

27 #ifde‡
_AIX


28 
	~"../ö˛ude/œŒoˇ.h
"

31 
	~"../ö˛ude/ß√/c⁄fig.h
"

32 
	~"../ö˛ude/œŒoˇ.h
"

33 
	~<sys/ty≥s.h
>

35 #i‡
deföed
(
HAVE_GETADDRINFO
Ë&& deföed (
HAVE_GETNAMEINFO
)

36 
	#SANED_USES_AF_INDEP


	)

37 #ifde‡
HAS_SS_FAMILY


38 
	#SS_FAMILY
(
ss
Ëss.
ss_Ámûy


	)

39 #ñi‡
deföed
(
HAS___SS_FAMILY
)

40 
	#SS_FAMILY
(
ss
Ëss.
__ss_Ámûy


	)

42 #unde‡
SANED_USES_AF_INDEP


43 #unde‡
ENABLE_IPV6


46 #unde‡
ENABLE_IPV6


49 
	~<as£π.h
>

50 
	~<î∫o.h
>

51 
	~<f˙é.h
>

52 
	~<√tdb.h
>

53 
	~<sig«l.h
>

54 
	~<°dio.h
>

55 
	~<°dlib.h
>

56 
	~<°rög.h
>

57 
	~<sy¶og.h
>

58 
	~<time.h
>

59 
	~<uni°d.h
>

60 
	~<limôs.h
>

61 #ifde‡
HAVE_LIBC_H


62 
	~<libc.h
>

65 #ifde‡
HAVE_SYS_SELECT_H


66 
	~<sys/£À˘.h
>

69 
	~<√töë/ö.h
>

71 
	~<°d¨g.h
>

73 
	~<sys/∑øm.h
>

74 
	~<sys/sockë.h
>

76 
	~<sys/time.h
>

77 
	~<sys/ty≥s.h
>

78 
	~<¨∑/öë.h
>

80 
	~<sys/waô.h
>

82 
	~<pwd.h
>

83 
	~<gΩ.h
>

86 #i‡
deföed
(
HAVE_SYS_POLL_H
Ë&& deföed(
HAVE_POLL
)

87 
	~<sys/pﬁl.h
>

93 
	spﬁlfd


95 
	mfd
;

96 
	mevíts
;

97 
	mªvíts
;

100 
	#POLLIN
 0x0001

	)

101 
	#POLLERR
 0x0002

	)

104 
pﬁl
 (
pﬁlfd
 *
ufds
, 
nfds
, 
timeout
);

107 
	$pﬁl
 (
pﬁlfd
 *
ufds
, 
nfds
, 
timeout
)

109 
pﬁlfd
 *
fdp
;

111 
fd_£t
 
rfds
;

112 
fd_£t
 
efds
;

113 
timevÆ
 
tv
;

114 
maxfd
 = 0;

115 
i
;

116 
ªt
;

118 
tv
.
tv_£c
 = 
timeout
 / 1000;

119 
tv
.
tv_u£c
 = (
timeout
 -Åv.
tv_£c
 * 1000) * 1000;

121 
	`FD_ZERO
 (&
rfds
);

122 
	`FD_ZERO
 (&
efds
);

124 
i
 = 0, 
fdp
 = 
ufds
; i < 
nfds
; i++, fdp++)

126 
fdp
->
ªvíts
 = 0;

128 i‡(
fdp
->
evíts
 & 
POLLIN
)

129 
	`FD_SET
 (
fdp
->
fd
, &
rfds
);

131 
	`FD_SET
 (
fdp
->
fd
, &
efds
);

133 
maxfd
 = (
fdp
->
fd
 > maxfd) ? fdp->fd : maxfd;

136 
maxfd
++;

138 
ªt
 = 
	`£À˘
 (
maxfd
, &
rfds
, 
NULL
, &
efds
, &
tv
);

140 i‡(
ªt
 < 0)

141  
ªt
;

143 
i
 = 0, 
fdp
 = 
ufds
; i < 
nfds
; i++, fdp++)

145 i‡(
fdp
->
evíts
 & 
POLLIN
)

146 i‡(
	`FD_ISSET
 (
fdp
->
fd
, &
rfds
))

147 
fdp
->
ªvíts
 |
POLLIN
;

149 i‡(
	`FD_ISSET
 (
fdp
->
fd
, &
efds
))

150 
fdp
->
ªvíts
 |
POLLERR
;

153  
ªt
;

154 
	}
}

157 #ifde‡
WITH_AVAHI


158 
	~<avahi-˛õ¡/˛õ¡.h
>

159 
	~<avahi-˛õ¡/publish.h
>

161 
	~<avahi-comm⁄/Æã∫©ive.h
>

162 
	~<avahi-comm⁄/sim∂e-w©ch.h
>

163 
	~<avahi-comm⁄/mÆloc.h
>

164 
	~<avahi-comm⁄/îr‹.h
>

166 
	#SANED_SERVICE_DNS
 "_ß√-p‹t._t˝"

	)

167 
	#SANED_NAME
 "ß√d"

	)

169 
pid_t
 
	gavahi_pid
 = -1;

171 *
	gavahi_svc_«me
;

173 
AvahiClõ¡
 *
	gavahi_˛õ¡
 = 
NULL
;

174 
AvahiSim∂ePﬁl
 *
	gavahi_pﬁl
 = 
NULL
;

175 
AvahiE¡ryGroup
 *
	gavahi_group
 = 
NULL
;

179 
	~"../ö˛ude/ß√/ß√.h
"

180 
	~"../ö˛ude/ß√/ß√i.h
"

181 
	~"../ö˛ude/ß√/ß√i_√t.h
"

182 
	~"../ö˛ude/ß√/ß√i_codec_bö.h
"

183 
	~"../ö˛ude/ß√/ß√i_c⁄fig.h
"

185 
	~"../ö˛ude/ß√/ß√i_auth.h
"

187 #i‚de‡
EXIT_SUCCESS


188 
	#EXIT_SUCCESS
 0

	)

191 #i‚de‡
IN_LOOPBACK


192 
	#IN_LOOPBACK
(
addr
Ë◊dd∏=0x7f000001L)

	)

195 #ifde‡
ENABLE_IPV6


196 
	#SANE_IN6_IS_ADDR_LOOPBACK
(
a
) \

197 (((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0 \

198 && ((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0 \

199 && ((c⁄° 
uöt32_t
 *Ë(
a
))[2] == 0 \

200 && ((c⁄° 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

202 
	#SANE_IN6_IS_ADDR_V4MAPPED
(
a
) \

203 ((((c⁄° 
uöt32_t
 *Ë(
a
))[0] == 0) \

204 && (((c⁄° 
uöt32_t
 *Ë(
a
))[1] == 0) \

205 && (((c⁄° 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

208 #i‚de‡
MAXHOSTNAMELEN


209 
	#MAXHOSTNAMELEN
 120

	)

212 #i‚de‡
PATH_MAX


213 
	#PATH_MAX
 1024

	)

216 
	sß√d_chûd
 {

217 
pid_t
 
	mpid
;

218 
ß√d_chûd
 *
	m√xt
;

220 
ß√d_chûd
 *
	gchûdªn
;

221 
	gnumchûdªn
;

223 
	#SANED_CONFIG_FILE
 "ß√d.c⁄f"

	)

224 
	#SANED_PID_FILE
 "/v¨/run/ß√d.pid"

	)

226 
	#SANED_SERVICE_NAME
 "ß√-p‹t"

	)

227 
	#SANED_SERVICE_PORT
 6566

	)

228 
	#SANED_SERVICE_PORT_S
 "6566"

	)

232 
u_öt
 
	möu£
:1;

233 
u_öt
 
	msˇ¬ög
:1;

234 
u_öt
 
	mdoˇn˚l
:1;

235 
SANE_H™dÀ
 
	mh™dÀ
;

237 
	tH™dÀ
;

239 
SANE_Në_Pro˚duª_Numbî
 
	gcuºít_ªque°
;

240 c⁄° *
	g¥og_«me
;

241 
	gˇn_auth‹ize
;

242 
Wúe
 
	gwúe
;

243 
	gnum_h™dÀs
;

244 
	gdebug
;

245 
	grun_mode
;

246 
H™dÀ
 *
	gh™dÀ
;

249 
	mw
;

250 
u_ch¨
 
	mch
;

252 
	gbyã_‹dî
;

257 c⁄° *
	gdeÁu…_u£∫ame
 = "saned-user";

258 *
	gªmŸe_ù
;

261 
ö_p‹t_t
 
	gd©a_p‹t_lo
;

262 
ö_p‹t_t
 
	gd©a_p‹t_hi
;

264 #ifde‡
SANED_USES_AF_INDEP


266 
sockaddr_°‹age
 
	mss
;

267 
sockaddr
 
	mß
;

268 
sockaddr_ö
 
	msö
;

269 #ifde‡
ENABLE_IPV6


270 
sockaddr_ö6
 
	msö6
;

272 } 
	gªmŸe_addªss
;

273 
	gªmŸe_addªss_Àn
;

275 
ö_addr
 
	gªmŸe_addªss
;

278 #i‚de‡
_PATH_HEQUIV


279 
	#_PATH_HEQUIV
 "/ëc/ho°s.equiv"

	)

282 c⁄° *
	gc⁄fig_fûe_«mes
[] = {

283 
_PATH_HEQUIV
, 
SANED_CONFIG_FILE


286 
SANE_Boﬁ
 
	glog_to_sy¶og
 = 
SANE_TRUE
;

289 
¥o˚ss_ªque°
 (
Wúe
 * 
w
);

291 
	#SANED_RUN_INETD
 0

	)

292 
	#SANED_RUN_DEBUG
 1

	)

293 
	#SANED_RUN_ALONE
 2

	)

296 
	#DBG_ERR
 1

	)

297 
	#DBG_WARN
 2

	)

298 
	#DBG_MSG
 3

	)

299 
	#DBG_INFO
 4

	)

300 
	#DBG_DBG
 5

	)

302 
	#DBG
 
ß√d_debug_ˇŒ


	)

305 
	$ß√d_debug_ˇŒ
 (
Àvñ
, c⁄° *
fmt
, ...)

307 #i‚de‡
NDEBUG


308 
va_li°
 
≠
;

309 
	`va_°¨t
 (
≠
, 
fmt
);

310 i‡(
debug
 >
Àvñ
)

312 i‡(
log_to_sy¶og
)

315 
	`vsy¶og
 (
LOG_DEBUG
, 
fmt
, 
≠
);

320 
	`Ârötf
 (
°dîr
, "[saned] ");

321 
	`vÂrötf
 (
°dîr
, 
fmt
, 
≠
);

324 
	`va_íd
 (
≠
);

326 
	}
}

330 
	$ª£t_w©chdog
 ()

332 i‡(!
debug
)

333 
	`Æ¨m
 (3600);

334 
	}
}

337 
	$auth_ˇŒback
 (
SANE_Såög_C⁄°
 
ªs
,

338 
SANE_Ch¨
 *
u£∫ame
,

339 
SANE_Ch¨
 *
∑ssw‹d
)

341 
SANE_Në_Pro˚duª_Numbî
 
¥o˙um
;

342 
SANE_Auth‹iz©i⁄_Req
 
ªq
;

343 
SANE_W‹d
 
w‹d
, 
ack
 = 0;

345 
	`mem£t
 (
u£∫ame
, 0, 
SANE_MAX_USERNAME_LEN
);

346 
	`mem£t
 (
∑ssw‹d
, 0, 
SANE_MAX_PASSWORD_LEN
);

348 i‡(!
ˇn_auth‹ize
)

350 
	`DBG
 (
DBG_WARN
,

352 
ªs
);

356 i‡(
wúe
.
°©us
)

358 
	`DBG
(
DBG_ERR
, "auth_ˇŒback: bad sètu†%d\n", 
wúe
.
°©us
);

362 
cuºít_ªque°
)

364 
SANE_NET_OPEN
:

366 
SANE_O≥n_Rïly
 
ª∂y
;

368 
	`mem£t
 (&
ª∂y
, 0,  (reply));

369 
ª∂y
.
ªsour˚_to_auth‹ize
 = (*Ë
ªs
;

370 
	`ß√i_w_ª∂y
 (&
wúe
, (
WúeCodecFunc
Ë
ß√i_w_›í_ª∂y
, &
ª∂y
);

374 
SANE_NET_CONTROL_OPTION
:

376 
SANE_C⁄åﬁ_O±i⁄_Rïly
 
ª∂y
;

378 
	`mem£t
 (&
ª∂y
, 0,  (reply));

379 
ª∂y
.
ªsour˚_to_auth‹ize
 = (*Ë
ªs
;

380 
	`ß√i_w_ª∂y
 (&
wúe
,

381 (
WúeCodecFunc
Ë
ß√i_w_c⁄åﬁ_›ti⁄_ª∂y
, &
ª∂y
);

385 
SANE_NET_START
:

387 
SANE_Sèπ_Rïly
 
ª∂y
;

389 
	`mem£t
 (&
ª∂y
, 0,  (reply));

390 
ª∂y
.
ªsour˚_to_auth‹ize
 = (*Ë
ªs
;

391 
	`ß√i_w_ª∂y
 (&
wúe
, (
WúeCodecFunc
Ë
ß√i_w_°¨t_ª∂y
, &
ª∂y
);

396 
	`DBG
 (
DBG_WARN
,

398 
cuºít_ªque°
, 
ªs
);

402 i‡(
wúe
.
°©us
)

404 
	`DBG
(
DBG_ERR
, "auth_ˇŒback: bad sètu†%d\n", 
wúe
.
°©us
);

408 
	`ª£t_w©chdog
 ();

410 
	`ß√i_w_£t_dú
 (&
wúe
, 
WIRE_DECODE
);

411 
	`ß√i_w_w‹d
 (&
wúe
, &
w‹d
);

413 i‡(
wúe
.
°©us
)

415 
	`DBG
(
DBG_ERR
, "auth_ˇŒback: bad sètu†%d\n", 
wúe
.
°©us
);

419 
¥o˙um
 = 
w‹d
;

420 i‡(
¥o˙um
 !
SANE_NET_AUTHORIZE
)

422 
	`DBG
 (
DBG_WARN
,

424 "”x≥˘ed: %d,Ñesour˚=%s)\n", 
¥o˙um
, 
SANE_NET_AUTHORIZE
,

425 
ªs
);

429 
	`ß√i_w_auth‹iz©i⁄_ªq
 (&
wúe
, &
ªq
);

430 i‡(
wúe
.
°©us
)

432 
	`DBG
(
DBG_ERR
, "auth_ˇŒback: bad sètu†%d\n", 
wúe
.
°©us
);

436 i‡(
ªq
.
u£∫ame
)

437 
	`°r˝y
 (
u£∫ame
, 
ªq
.username);

438 i‡(
ªq
.
∑ssw‹d
)

439 
	`°r˝y
 (
∑ssw‹d
, 
ªq
.password);

440 i‡(!
ªq
.
ªsour˚
 || 
	`°rcmp
 (ªq.ªsour˚, 
ªs
) != 0)

442 
	`DBG
 (
DBG_MSG
,

444 
ªs
, 
ªq
.
ªsour˚
);

446 
	`ß√i_w_‰ì
 (&
wúe
, (
WúeCodecFunc
Ë
ß√i_w_auth‹iz©i⁄_ªq
, &
ªq
);

447 
	`ß√i_w_ª∂y
 (&
wúe
, (
WúeCodecFunc
Ë
ß√i_w_w‹d
, &
ack
);

448 
	}
}

451 
	$quô
 (
signum
)

453 
ru¬ög
 = 0;

454 
i
;

456 i‡(
signum
)

457 
	`DBG
 (
DBG_ERR
, "quô:Ñe˚ived sig«»%d\n", 
signum
);

459 i‡(
ru¬ög
)

461 
	`DBG
 (
DBG_ERR
, "quit:álreadyáctive,Ñeturning\n");

464 
ru¬ög
 = 1;

466 
i
 = 0; i < 
num_h™dÀs
; ++i)

467 i‡(
h™dÀ
[
i
].
öu£
)

468 
	`ß√_˛o£
 (
h™dÀ
[
i
].handle);

470 
	`ß√_exô
 ();

471 
	`ß√i_w_exô
 (&
wúe
);

472 i‡(
h™dÀ
)

473 
	`‰ì
 (
h™dÀ
);

474 
	`DBG
 (
DBG_WARN
, "quit:Éxiting\n");

475 i‡(
log_to_sy¶og
)

476 
	`˛o£log
 ();

477 
	`exô
 (
EXIT_SUCCESS
);

478 
	}
}

480 
SANE_W‹d


481 
	$gë_‰ì_h™dÀ
 ()

483 
	#ALLOC_INCREMENT
 16

	)

484 
h
, 
œ°_h™dÀ_checked
 = -1;

486 i‡(
num_h™dÀs
 > 0)

488 
h
 = 
œ°_h™dÀ_checked
 + 1;

491 i‡(
h
 >
num_h™dÀs
)

492 
h
 = 0;

493 i‡(!
h™dÀ
[
h
].
öu£
)

495 
œ°_h™dÀ_checked
 = 
h
;

496 
	`mem£t
 (
h™dÀ
 + 
h
, 0,  (handle[0]));

497 
h™dÀ
[
h
].
öu£
 = 1;

498  
h
;

500 ++
h
;

502 
h
 !
œ°_h™dÀ_checked
);

506 
œ°_h™dÀ_checked
 = 
num_h™dÀs
 - 1;

507 
num_h™dÀs
 +
ALLOC_INCREMENT
;

508 i‡(
h™dÀ
)

509 
h™dÀ
 = 
	`ªÆloc
 (h™dÀ, 
num_h™dÀs
 *  (handle[0]));

511 
h™dÀ
 = 
	`mÆloc
 (
num_h™dÀs
 *  (handle[0]));

512 i‡(!
h™dÀ
)

514 
	`mem£t
 (
h™dÀ
 + 
œ°_h™dÀ_checked
 + 1, 0,

515 
ALLOC_INCREMENT
 *  (
h™dÀ
[0]));

516  
	`gë_‰ì_h™dÀ
 ();

517 #unde‡
ALLOC_INCREMENT


518 
	}
}

521 
	$˛o£_h™dÀ
 (
h
)

523 i‡(
h
 >0 && 
h™dÀ
[h].
öu£
)

525 
	`ß√_˛o£
 (
h™dÀ
[
h
].handle);

526 
h™dÀ
[
h
].
öu£
 = 0;

528 
	}
}

530 
SANE_W‹d


531 
	$decode_h™dÀ
 (
Wúe
 * 
w
, c⁄° *
›
)

533 
SANE_W‹d
 
h
;

535 
	`ß√i_w_w‹d
 (
w
, &
h
);

536 i‡(
w
->
°©us
 || (Ë
h
 >(Ë
num_h™dÀs
 || !
h™dÀ
[h].
öu£
)

538 
	`DBG
 (
DBG_ERR
,

540 "(h=%d, %s)\n", 
›
, 
h
, 
	`°ªº‹
 (
w
->
°©us
));

543  
h
;

544 
	}
}

549 
	gcidπomask
[9] = { 0x00, 0x80, 0xC0, 0xE0, 0xF0,

552 #ifde‡
SANED_USES_AF_INDEP


553 
SANE_Boﬁ


554 
	$check_v4_ö_ønge
 (
sockaddr_ö
 *
sö
, *
ba£_ù
, *
√tmask
)

556 
cidr
;

557 
i
, 
îr
;

558 *
íd
;

559 
uöt32_t
 
mask
;

560 
sockaddr_ö
 *
ba£
;

561 
addröfo
 
höts
;

562 
addröfo
 *
ªs
;

563 
SANE_Boﬁ
 
ªt
 = 
SANE_FALSE
;

565 
cidr
 = -1;

566 
cidr
 = 
	`°πﬁ
 (
√tmask
, &
íd
, 10);

569 i‡((
cidr
 < 0Ë|| (cid∏> 32Ë|| (
íd
 =
√tmask
))

571 
	`DBG
 (
DBG_ERR
, "check_v4_ö_ønge: invÆid CIDR vÆuê(%sË!\n", 
√tmask
);

572  
SANE_FALSE
;

575 
mask
 = 0;

576 
cidr
 -= 8;

579 
i
 = 3; 
cidr
 >= 0; i--)

581 
mask
 |(0xf‡<< (8 * 
i
));

582 
cidr
 -= 8;

585 i‡(
cidr
 < 0)

586 
mask
 |(
cidπomask
[
cidr
 + 8] << (8 * 
i
));

588 
mask
 = 
	`ht⁄l
 (mask);

591 
	`mem£t
 (&
höts
, 0,  (
addröfo
));

592 
höts
.
ai_Êags
 = 
AI_NUMERICHOST
;

593 
höts
.
ai_Ámûy
 = 
PF_INET
;

595 
îr
 = 
	`gëaddröfo
 (
ba£_ù
, 
NULL
, &
höts
, &
ªs
);

596 i‡(
îr
)

598 
	`DBG
 (
DBG_DBG
, "check_v4_ö_ønge: gëaddröfo(ËÁûed: %s\n", 
	`gai_°ªº‹
 (
îr
));

599  
SANE_FALSE
;

602 
ba£
 = (
sockaddr_ö
 *Ë
ªs
->
ai_addr
;

608 i‡((
ba£
->
sö_addr
.
s_addr
 & 
mask
Ë=(
sö
->sin_addr.s_addr & mask))

609 
ªt
 = 
SANE_TRUE
;

611 
	`‰ìaddröfo
 (
ªs
);

613  
ªt
;

614 
	}
}

617 #ifde‡
ENABLE_IPV6


619 
SANE_Boﬁ


620 
	$check_v6_ö_ønge
 (
sockaddr_ö6
 *
sö6
, *
ba£_ù
, *
√tmask
)

622 
cidr
;

623 
i
, 
îr
;

624 
mask
[16];

625 *
íd
;

626 
sockaddr_ö6
 *
ba£
;

627 
addröfo
 
höts
;

628 
addröfo
 *
ªs
;

629 
SANE_Boﬁ
 
ªt
 = 
SANE_TRUE
;

631 
cidr
 = -1;

632 
cidr
 = 
	`°πﬁ
 (
√tmask
, &
íd
, 10);

635 i‡((
cidr
 < 0Ë|| (cid∏> 128Ë|| (
íd
 =
√tmask
))

637 
	`DBG
 (
DBG_ERR
, "check_v6_ö_ønge: invÆid CIDR vÆuê(%sË!\n", 
√tmask
);

638  
SANE_FALSE
;

641 
	`mem£t
 (
mask
, 0, (16 *  ()));

642 
cidr
 -= 8;

645 
i
 = 0; 
cidr
 >= 0; i++)

647 
mask
[
i
] = 0xff;

648 
cidr
 -= 8;

651 i‡(
cidr
 < 0)

652 
mask
[
i
] = 
cidπomask
[
cidr
 + 8];

655 
	`mem£t
 (&
höts
, 0,  (
addröfo
));

656 
höts
.
ai_Êags
 = 
AI_NUMERICHOST
;

657 
höts
.
ai_Ámûy
 = 
PF_INET6
;

659 
îr
 = 
	`gëaddröfo
 (
ba£_ù
, 
NULL
, &
höts
, &
ªs
);

660 i‡(
îr
)

662 
	`DBG
 (
DBG_DBG
, "check_v6_ö_ønge: gëaddröfo(ËÁûed: %s\n", 
	`gai_°ªº‹
 (
îr
));

663  
SANE_FALSE
;

666 
ba£
 = (
sockaddr_ö6
 *Ë
ªs
->
ai_addr
;

672 
i
 = 0; i < 16; i++)

674 i‡((
ba£
->
sö6_addr
.
s6_addr
[
i
] & 
mask
[i]Ë!(
sö6
->sin6_addr.s6_addr[i] & mask[i]))

676 
ªt
 = 
SANE_FALSE
;

681 
	`‰ìaddröfo
 (
ªs
);

683  
ªt
;

684 
	}
}

687 
SANE_Boﬁ


688 
	$check_v4_ö_ønge
 (
ö_addr
 *
öaddr
, ö_add∏*
ba£
, *
√tmask
)

690 
cidr
;

691 
i
;

692 *
íd
;

693 
uöt32_t
 
mask
;

694 
SANE_Boﬁ
 
ªt
 = 
SANE_FALSE
;

696 
cidr
 = -1;

697 
cidr
 = 
	`°πﬁ
 (
√tmask
, &
íd
, 10);

700 i‡((
cidr
 < 0Ë|| (cid∏> 32Ë|| (
íd
 =
√tmask
))

702 
	`DBG
 (
DBG_ERR
, "check_v4_ö_ønge: invÆid CIDR vÆuê(%sË!\n", 
√tmask
);

703  
SANE_FALSE
;

706 
mask
 = 0;

707 
cidr
 -= 8;

710 
i
 = 3; 
cidr
 >= 0; i--)

712 
mask
 |(0xf‡<< (8 * 
i
));

713 
cidr
 -= 8;

716 i‡(
cidr
 < 0)

717 
mask
 |(
cidπomask
[
cidr
 + 8] << (8 * 
i
));

719 
mask
 = 
	`ht⁄l
 (mask);

725 i‡((
ba£
->
s_addr
 & 
mask
Ë=(
öaddr
->s_addr & mask))

726 
ªt
 = 
SANE_TRUE
;

728  
ªt
;

729 
	}
}

735 #ifde‡
SANED_USES_AF_INDEP


736 
SANE_Sètus


737 
	$check_ho°
 (
fd
)

739 
sockaddr_ö
 *
sö
 = 
NULL
;

740 #ifde‡
ENABLE_IPV6


741 
sockaddr_ö6
 *
sö6
;

743 
addröfo
 
höts
;

744 
addröfo
 *
ªs
;

745 
addröfo
 *
ª•
;

746 
j
, 
ac˚ss_ok
 = 0;

747 
îr
;

748 
ãxt_addr
[64];

749 #ifde‡
ENABLE_IPV6


750 
SANE_Boﬁ
 
IPv4m≠
 = 
SANE_FALSE
;

751 *
ªmŸe_ùv4
 = 
NULL
;

752 *
tmp
;

753 
addröfo
 *
ªmŸe_ùv4_addr
 = 
NULL
;

755 
c⁄fig_löe_buf
[1024];

756 *
c⁄fig_löe
;

757 *
√tmask
;

758 
ho°«me
[
MAXHOSTNAMELEN
];

760 
Àn
;

761 
FILE
 *
Â
;

764 
ªmŸe_addªss_Àn
 =  (
ªmŸe_addªss
.
ss
);

765 i‡(
	`gë≥î«me
 (
fd
, &
ªmŸe_addªss
.
ß
, (
sockÀn_t
 *Ë&
ªmŸe_addªss_Àn
) < 0)

767 
	`DBG
 (
DBG_ERR
, "check_ho°: gë≥î«mêÁûed: %s\n", 
	`°ªº‹
 (
î∫o
));

768 
ªmŸe_ù
 = 
	`°rdup
 ("[error]");

769  
SANE_STATUS_INVAL
;

772 
îr
 = 
	`gë«meöfo
 (&
ªmŸe_addªss
.
ß
, 
ªmŸe_addªss_Àn
,

773 
ho°«me
,  (ho°«me), 
NULL
, 0, 
NI_NUMERICHOST
);

774 i‡(
îr
)

776 
	`DBG
 (
DBG_DBG
, "check_ho°: gë«meöfÿÁûed: %s\n", 
	`gai_°ªº‹
(
îr
));

777 
ªmŸe_ù
 = 
	`°rdup
 ("[error]");

778  
SANE_STATUS_INVAL
;

781 
ªmŸe_ù
 = 
	`°rdup
 (
ho°«me
);

783 #ifde‡
ENABLE_IPV6


784 
sö6
 = &
ªmŸe_addªss
.sin6;

786 i‡(
	`SANE_IN6_IS_ADDR_V4MAPPED
 (
sö6
->
sö6_addr
.
s6_addr
))

788 
	`DBG
 (
DBG_DBG
, "check_host: detectedán IPv4-mappedáddress\n");

789 
ªmŸe_ùv4
 = 
ªmŸe_ù
 + 7;

790 
IPv4m≠
 = 
SANE_TRUE
;

792 
	`mem£t
 (&
höts
, 0,  (
addröfo
));

793 
höts
.
ai_Êags
 = 
AI_NUMERICHOST
;

794 
höts
.
ai_Ámûy
 = 
PF_INET
;

796 
îr
 = 
	`gëaddröfo
 (
ªmŸe_ùv4
, 
NULL
, &
höts
, &
ªs
);

797 i‡(
îr
)

799 
	`DBG
 (
DBG_DBG
, "check_ho°: gëaddröfo(ËÁûed: %s\n", 
	`gai_°ªº‹
 (
îr
));

800 
IPv4m≠
 = 
SANE_FALSE
;

804 
ªmŸe_ùv4_addr
 = 
ªs
;

805 
sö
 = (
sockaddr_ö
 *)
ªs
->
ai_addr
;

810 
	`DBG
 (
DBG_WARN
, "check_ho°:ác˚s†byÑemŸêho°: %s\n", 
ªmŸe_ù
);

815 #ifde‡
ENABLE_IPV6


816 i‡(
IPv4m≠
 =
SANE_TRUE
)

818 i‡(
	`IN_LOOPBACK
 (
	`¡ohl
 (
sö
->
sö_addr
.
s_addr
)))

820 
	`DBG
 (
DBG_MSG
,

822 
	`‰ìaddröfo
 (
ªmŸe_ùv4_addr
);

823  
SANE_STATUS_GOOD
;

825 
	`‰ìaddröfo
 (
ªmŸe_ùv4_addr
);

829 
sö
 = &
ªmŸe_addªss
.sin;

831 
	`SS_FAMILY
(
ªmŸe_addªss
.
ss
))

833 
AF_INET
:

834 i‡(
	`IN_LOOPBACK
 (
	`¡ohl
 (
sö
->
sö_addr
.
s_addr
)))

836 
	`DBG
 (
DBG_MSG
,

838  
SANE_STATUS_GOOD
;

841 #ifde‡
ENABLE_IPV6


842 
AF_INET6
:

843 i‡(
	`SANE_IN6_IS_ADDR_LOOPBACK
 (
sö6
->
sö6_addr
.
s6_addr
))

845 
	`DBG
 (
DBG_MSG
,

847  
SANE_STATUS_GOOD
;

855 
	`DBG
 (
DBG_DBG
, "check_host:Ñemote host isÇot IN_LOOPBACK"

856 #ifde‡
ENABLE_IPV6


863 i‡(
	`gëho°«me
 (
ho°«me
,  (hostname)) < 0)

865 
	`DBG
 (
DBG_ERR
, "check_ho°: gëho°«mêÁûed: %s\n", 
	`°ªº‹
 (
î∫o
));

866  
SANE_STATUS_INVAL
;

868 
	`DBG
 (
DBG_DBG
, "check_ho°:Üoˇ»ho°«me: %s\n", 
ho°«me
);

871 
	`mem£t
 (&
höts
, 0,  (hints));

872 
höts
.
ai_Êags
 = 
AI_CANONNAME
;

873 #ifde‡
ENABLE_IPV6


874 
höts
.
ai_Ámûy
 = 
PF_UNSPEC
;

876 
höts
.
ai_Ámûy
 = 
PF_INET
;

879 
îr
 = 
	`gëaddröfo
 (
ho°«me
, 
NULL
, &
höts
, &
ªs
);

880 i‡(
îr
)

882 
	`DBG
 (
DBG_ERR
, "check_host: getaddrinfo forÜocal hostname failed: %s\n",

883 
	`gai_°ªº‹
 (
îr
));

886 i‡(
îr
 !
EAI_NONAME
)

887  
SANE_STATUS_INVAL
;

891 
ª•
 = 
ªs
;Ñe• !
NULL
;Ñe• =Ñe•->
ai_√xt
)

893 
	`DBG
 (
DBG_DBG
, "check_host:Üocal hostname(s) (from DNS): %s\n",

894 
ª•
->
ai_ˇn⁄«me
);

896 
îr
 = 
	`gë«meöfo
 (
ª•
->
ai_addr
,Ñe•->
ai_addæí
, 
ãxt_addr
,

897  (
ãxt_addr
), 
NULL
, 0, 
NI_NUMERICHOST
);

898 i‡(
îr
)

899 
	`°∫˝y
 (
ãxt_addr
, "[error]", 8);

901 #ifde‡
ENABLE_IPV6


902 i‡((
	`°rˇ£cmp
 (
ãxt_addr
, 
ªmŸe_ù
) == 0) ||

903 ((
IPv4m≠
 =
SANE_TRUE
Ë&& (
	`°rcmp
 (
ãxt_addr
, 
ªmŸe_ùv4
) == 0)))

905 i‡(
	`°rcmp
 (
ãxt_addr
, 
ªmŸe_ù
) == 0)

908 
	`DBG
 (
DBG_MSG
, "check_host:Ñemote host has sameáddrásÜocal:áccess granted\n");

910 
	`‰ìaddröfo
 (
ªs
);

911 
ªs
 = 
NULL
;

913  
SANE_STATUS_GOOD
;

917 
	`‰ìaddröfo
 (
ªs
);

918 
ªs
 = 
NULL
;

920 
	`DBG
 (
DBG_DBG
,

926 
j
 = 0; j < 
	`NELEMS
 (
c⁄fig_fûe_«mes
); ++j)

928 
	`DBG
 (
DBG_DBG
, "check_host: opening config file: %s\n",

929 
c⁄fig_fûe_«mes
[
j
]);

930 i‡(
c⁄fig_fûe_«mes
[
j
][0] == '/')

931 
Â
 = 
	`f›í
 (
c⁄fig_fûe_«mes
[
j
], "r");

933 
Â
 = 
	`ß√i_c⁄fig_›í
 (
c⁄fig_fûe_«mes
[
j
]);

934 i‡(!
Â
)

936 
	`DBG
 (
DBG_MSG
,

938 
c⁄fig_fûe_«mes
[
j
], 
	`°ªº‹
 (
î∫o
));

942 !
ac˚ss_ok
 && 
	`ß√i_c⁄fig_ªad
 (
c⁄fig_löe_buf
,

943  (
c⁄fig_löe_buf
), 
Â
))

945 
c⁄fig_löe
 = 
c⁄fig_löe_buf
;

946 
	`DBG
 (
DBG_DBG
, "check_ho°: c⁄fig fûêlöe: `%s'\n", 
c⁄fig_löe
);

947 i‡(
c⁄fig_löe
[0] == '#')

950 i‡(
	`°rchr
 (
c⁄fig_löe
, '='))

953 
Àn
 = 
	`°æí
 (
c⁄fig_löe
);

954 i‡(!
Àn
)

958 
√tmask
 = 
	`°rchr
 (
c⁄fig_löe
, '/');

959 i‡(
√tmask
 !
NULL
)

961 *
√tmask
 = '\0';

962 
√tmask
++;

963 
	`DBG
 (
DBG_DBG
, "check_host: subnet with base IP = %s, CIDRÇetmask = %s\n",

964 
c⁄fig_löe
, 
√tmask
);

967 #ifde‡
ENABLE_IPV6


969 i‡(*
c⁄fig_löe
 == '[')

971 
c⁄fig_löe
++;

972 
tmp
 = 
	`°rchr
 (
c⁄fig_löe
, ']');

973 i‡(
tmp
 =
NULL
)

975 
	`DBG
 (
DBG_ERR
,

977 
c⁄fig_löe
);

980 *
tmp
 = '\0';

984 i‡(
	`°rcmp
 (
c⁄fig_löe
, "+") == 0)

986 
ac˚ss_ok
 = 1;

987 
	`DBG
 (
DBG_DBG
,

991 i‡(
	`°rˇ£cmp
 (
c⁄fig_löe
, 
ªmŸe_ù
) == 0)

993 
ac˚ss_ok
 = 1;

994 
	`DBG
 (
DBG_DBG
,

995 "check_ho°:ác˚s†gø¡ed from IPáddªs†%s\n", 
ªmŸe_ù
);

997 #ifde‡
ENABLE_IPV6


998 i‡((
IPv4m≠
 =
SANE_TRUE
Ë&& (
	`°rcmp
 (
c⁄fig_löe
, 
ªmŸe_ùv4
) == 0))

1000 
ac˚ss_ok
 = 1;

1001 
	`DBG
 (
DBG_DBG
,

1002 "check_ho°:ác˚s†gø¡ed from IPáddªs†%†(IPv4-m≠≥d)\n", 
ªmŸe_ù
);

1005 i‡(
√tmask
 !
NULL
)

1007 i‡(
	`°rchr
 (
c⁄fig_löe
, ':'Ë!
NULL
)

1009 i‡(
	`SS_FAMILY
(
ªmŸe_addªss
.
ss
Ë=
AF_INET6
)

1011 i‡(
	`check_v6_ö_ønge
 (
sö6
, 
c⁄fig_löe
, 
√tmask
))

1013 
ac˚ss_ok
 = 1;

1014 
	`DBG
 (
DBG_DBG
, "check_host:áccess granted from IPáddress %s (in subnet [%s]/%s)\n",

1015 
ªmŸe_ù
, 
c⁄fig_löe
, 
√tmask
);

1021 i‡(
IPv4m≠
 =
SANE_TRUE
)

1024 
	`mem£t
 (&
höts
, 0,  (
addröfo
));

1025 
höts
.
ai_Êags
 = 
AI_NUMERICHOST
;

1026 
höts
.
ai_Ámûy
 = 
PF_INET
;

1028 
îr
 = 
	`gëaddröfo
 (
ªmŸe_ùv4
, 
NULL
, &
höts
, &
ªs
);

1029 i‡(
îr
)

1030 
	`DBG
 (
DBG_DBG
, "check_ho°: gëaddröfo(ËÁûed: %s\n", 
	`gai_°ªº‹
 (
îr
));

1032 
sö
 = (
sockaddr_ö
 *)
ªs
->
ai_addr
;

1035 i‡((
	`SS_FAMILY
(
ªmŸe_addªss
.
ss
Ë=
AF_INET
) ||

1036 (
IPv4m≠
 =
SANE_TRUE
))

1039 i‡(
	`check_v4_ö_ønge
 (
sö
, 
c⁄fig_löe
, 
√tmask
))

1041 
	`DBG
 (
DBG_DBG
, "check_host:áccess granted from IPáddress %s (in subnet %s/%s)\n",

1042 ((
IPv4m≠
 =
SANE_TRUE
Ë? 
ªmŸe_ùv4
 : 
ªmŸe_ù
), 
c⁄fig_löe
, 
√tmask
);

1043 
ac˚ss_ok
 = 1;

1048 
sö
 = &
ªmŸe_addªss
.sin;

1051 i‡(
ªs
 !
NULL
)

1053 
	`‰ìaddröfo
 (
ªs
);

1054 
ªs
 = 
NULL
;

1061 i‡(
√tmask
 !
NULL
)

1063 i‡(
	`check_v4_ö_ønge
 (
sö
, 
c⁄fig_löe
, 
√tmask
))

1065 
ac˚ss_ok
 = 1;

1066 
	`DBG
 (
DBG_DBG
, "check_host:áccess granted from IPáddress %s (in subnet %s/%s)\n",

1067 
ªmŸe_ù
, 
c⁄fig_löe
, 
√tmask
);

1073 
	`mem£t
 (&
höts
, 0,  (hints));

1074 
höts
.
ai_Êags
 = 
AI_CANONNAME
;

1075 #ifde‡
ENABLE_IPV6


1076 
höts
.
ai_Ámûy
 = 
PF_UNSPEC
;

1078 
höts
.
ai_Ámûy
 = 
PF_INET
;

1081 
îr
 = 
	`gëaddröfo
 (
c⁄fig_löe
, 
NULL
, &
höts
, &
ªs
);

1082 i‡(
îr
)

1084 
	`DBG
 (
DBG_DBG
,

1086 
c⁄fig_löe
, 
	`gai_°ªº‹
 (
îr
));

1087 
	`DBG
 (
DBG_MSG
, "check_host:Éntry isn'tán IPáddress "

1093 
ª•
 = 
ªs
;Ñe• !
NULL
;Ñe• =Ñe•->
ai_√xt
)

1095 
îr
 = 
	`gë«meöfo
 (
ª•
->
ai_addr
,Ñe•->
ai_addæí
, 
ãxt_addr
,

1096  (
ãxt_addr
), 
NULL
, 0, 
NI_NUMERICHOST
);

1097 i‡(
îr
)

1098 
	`°∫˝y
 (
ãxt_addr
, "[error]", 8);

1100 
	`DBG
 (
DBG_MSG
,

1102 
ãxt_addr
);

1104 #ifde‡
ENABLE_IPV6


1105 i‡((
	`°rˇ£cmp
 (
ãxt_addr
, 
ªmŸe_ù
) == 0) ||

1106 ((
IPv4m≠
 =
SANE_TRUE
Ë&& (
	`°rcmp
 (
ãxt_addr
, 
ªmŸe_ùv4
) == 0)))

1108 i‡(
	`°rcmp
 (
ãxt_addr
, 
ªmŸe_ù
) == 0)

1110 
ac˚ss_ok
 = 1;

1112 i‡(
ac˚ss_ok
)

1115 
	`‰ìaddröfo
 (
ªs
);

1116 
ªs
 = 
NULL
;

1120 
	`f˛o£
 (
Â
);

1123 i‡(
ac˚ss_ok
)

1124  
SANE_STATUS_GOOD
;

1126  
SANE_STATUS_ACCESS_DENIED
;

1127 
	}
}

1131 
SANE_Sètus


1132 
	$check_ho°
 (
fd
)

1134 
sockaddr_ö
 
sö
;

1135 
j
, 
ac˚ss_ok
 = 0;

1136 
ho°ít
 *
he
;

1137 
ãxt_addr
[64];

1138 
c⁄fig_löe_buf
[1024];

1139 *
c⁄fig_löe
;

1140 *
√tmask
;

1141 
ho°«me
[
MAXHOSTNAMELEN
];

1142 *
r_ho°«me
;

1143 
ö_addr
 
c⁄fig_löe_addªss
;

1145 
Àn
;

1146 
FILE
 *
Â
;

1149 
Àn
 =  (
sö
);

1150 i‡(
	`gë≥î«me
 (
fd
, (
sockaddr
 *Ë&
sö
, (
sockÀn_t
 *Ë&
Àn
) < 0)

1152 
	`DBG
 (
DBG_ERR
, "check_ho°: gë≥î«mêÁûed: %s\n", 
	`°ªº‹
 (
î∫o
));

1153 
ªmŸe_ù
 = 
	`°rdup
 ("[error]");

1154  
SANE_STATUS_INVAL
;

1156 
r_ho°«me
 = 
	`öë_¡ﬂ
 (
sö
.
sö_addr
);

1157 
ªmŸe_ù
 = 
	`°rdup
 (
r_ho°«me
);

1158 
	`DBG
 (
DBG_WARN
, "check_host:áccess byÑemote host: %s\n",

1159 
ªmŸe_ù
);

1161 
	`mem˝y
 (&
ªmŸe_addªss
, &
sö
.
sö_addr
,  (remote_address));

1165 i‡(
	`IN_LOOPBACK
 (
	`¡ohl
 (
sö
.
sö_addr
.
s_addr
)))

1167 
	`DBG
 (
DBG_MSG
,

1169  
SANE_STATUS_GOOD
;

1171 
	`DBG
 (
DBG_DBG
, "check_host:Ñemote host isÇot IN_LOOPBACK\n");

1174 i‡(
	`gëho°«me
 (
ho°«me
,  (hostname)) < 0)

1176 
	`DBG
 (
DBG_ERR
, "check_ho°: gëho°«mêÁûed: %s\n", 
	`°ªº‹
 (
î∫o
));

1177  
SANE_STATUS_INVAL
;

1179 
	`DBG
 (
DBG_DBG
, "check_ho°:Üoˇ»ho°«me: %s\n", 
ho°«me
);

1182 
he
 = 
	`gëho°by«me
 (
ho°«me
);

1184 i‡(!
he
)

1186 
	`DBG
 (
DBG_ERR
, "check_host: gethostbyname forÜocal hostname failed: %s\n",

1187 
	`h°ªº‹
 (
h_î∫o
));

1190 i‡(
h_î∫o
 !
HOST_NOT_FOUND
)

1191  
SANE_STATUS_INVAL
;

1195 
	`DBG
 (
DBG_DBG
, "check_host:Üocal hostname (from DNS): %s\n",

1196 
he
->
h_«me
);

1198 i‡((
he
->
h_Àngth
 =4Ë|| (he->
h_addπy≥
 =
AF_INET
))

1200 i‡(!
	`öë_¡›
 (
he
->
h_addπy≥
, he->
h_addr_li°
[0], 
ãxt_addr
,

1201  (
ãxt_addr
)))

1202 
	`°r˝y
 (
ãxt_addr
, "[error]");

1203 
	`DBG
 (
DBG_DBG
, "check_host:Üocal hostáddress (from DNS): %s\n",

1204 
ãxt_addr
);

1205 i‡(
	`memcmp
 (
he
->
h_addr_li°
[0], &
ªmŸe_addªss
.
s_addr
, 4) == 0)

1207 
	`DBG
 (
DBG_MSG
,

1210  
SANE_STATUS_GOOD
;

1215 
	`DBG
 (
DBG_ERR
, "check_host: can't getÜocaláddress "

1219 
	`DBG
 (
DBG_DBG
,

1225 
j
 = 0; j < 
	`NELEMS
 (
c⁄fig_fûe_«mes
); ++j)

1227 
	`DBG
 (
DBG_DBG
, "check_host: opening config file: %s\n",

1228 
c⁄fig_fûe_«mes
[
j
]);

1229 i‡(
c⁄fig_fûe_«mes
[
j
][0] == '/')

1230 
Â
 = 
	`f›í
 (
c⁄fig_fûe_«mes
[
j
], "r");

1232 
Â
 = 
	`ß√i_c⁄fig_›í
 (
c⁄fig_fûe_«mes
[
j
]);

1233 i‡(!
Â
)

1235 
	`DBG
 (
DBG_MSG
,

1237 
c⁄fig_fûe_«mes
[
j
], 
	`°ªº‹
 (
î∫o
));

1241 !
ac˚ss_ok
 && 
	`ß√i_c⁄fig_ªad
 (
c⁄fig_löe_buf
,

1242  (
c⁄fig_löe_buf
), 
Â
))

1244 
c⁄fig_löe
 = 
c⁄fig_löe_buf
;

1245 
	`DBG
 (
DBG_DBG
, "check_ho°: c⁄fig fûêlöe: `%s'\n", 
c⁄fig_löe
);

1246 i‡(
c⁄fig_löe
[0] == '#')

1249 i‡(
	`°rchr
 (
c⁄fig_löe
, '='))

1252 
Àn
 = 
	`°æí
 (
c⁄fig_löe
);

1253 i‡(!
Àn
)

1257 
√tmask
 = 
	`°rchr
 (
c⁄fig_löe
, '/');

1258 i‡(
√tmask
 !
NULL
)

1260 *
√tmask
 = '\0';

1261 
√tmask
++;

1262 
	`DBG
 (
DBG_DBG
, "check_host: subnet with base IP = %s, CIDRÇetmask = %s\n",

1263 
c⁄fig_löe
, 
√tmask
);

1266 i‡(
	`°rcmp
 (
c⁄fig_löe
, "+") == 0)

1268 
ac˚ss_ok
 = 1;

1269 
	`DBG
 (
DBG_DBG
,

1274 i‡(
	`öë_±⁄
 (
AF_INET
, 
c⁄fig_löe
, &
c⁄fig_löe_addªss
) > 0)

1276 i‡(
	`memcmp
 (&
ªmŸe_addªss
.
s_addr
,

1277 &
c⁄fig_löe_addªss
.
s_addr
, 4) == 0)

1278 
ac˚ss_ok
 = 1;

1279 i‡(
√tmask
 !
NULL
)

1281 i‡(
	`check_v4_ö_ønge
 (&
ªmŸe_addªss
, &
c⁄fig_löe_addªss
, 
√tmask
))

1283 
ac˚ss_ok
 = 1;

1284 
	`DBG
 (
DBG_DBG
, "check_host:áccess granted from IPáddress %s (in subnet %s/%s)\n",

1285 
ªmŸe_ù
, 
c⁄fig_löe
, 
√tmask
);

1291 
	`DBG
 (
DBG_DBG
,

1293 
c⁄fig_löe
);

1294 
he
 = 
	`gëho°by«me
 (
c⁄fig_löe
);

1295 i‡(!
he
)

1297 
	`DBG
 (
DBG_DBG
,

1299 
c⁄fig_löe
, 
	`h°ªº‹
 (
h_î∫o
));

1300 
	`DBG
 (
DBG_MSG
, "check_host:Éntry isn'tán IPáddress "

1304 i‡(!
	`öë_¡›
 (
he
->
h_addπy≥
, he->
h_addr_li°
[0],

1305 
ãxt_addr
,  (text_addr)))

1306 
	`°r˝y
 (
ãxt_addr
, "[error]");

1307 
	`DBG
 (
DBG_MSG
,

1309 
ãxt_addr
);

1310 i‡(
	`memcmp
 (&
ªmŸe_addªss
.
s_addr
,

1311 
he
->
h_addr_li°
[0], 4) == 0)

1312 
ac˚ss_ok
 = 1;

1316 
	`f˛o£
 (
Â
);

1317 i‡(
ac˚ss_ok
)

1318  
SANE_STATUS_GOOD
;

1320  
SANE_STATUS_ACCESS_DENIED
;

1321 
	}
}

1326 
	$öô
 (
Wúe
 * 
w
)

1328 
SANE_W‹d
 
w‹d
, 
be_vîsi⁄_code
;

1329 
SANE_Inô_Rïly
 
ª∂y
;

1330 
SANE_Sètus
 
°©us
;

1331 
SANE_Inô_Req
 
ªq
;

1333 
	`ª£t_w©chdog
 ();

1335 
°©us
 = 
	`check_ho°
 (
w
->
io
.
fd
);

1336 i‡(
°©us
 !
SANE_STATUS_GOOD
)

1338 
	`DBG
 (
DBG_WARN
, "öô:ác˚s†by ho° %†díõd\n", 
ªmŸe_ù
);

1342 
	`DBG
 (
DBG_MSG
, "init:áccess granted\n");

1344 
	`ß√i_w_£t_dú
 (
w
, 
WIRE_DECODE
);

1345 i‡(
w
->
°©us
)

1347 
	`DBG
 (
DBG_ERR
, "öô: bad sètu†a·î s™ei_w_£t_dú: %d\n", 
w
->
°©us
);

1351 
	`ß√i_w_w‹d
 (
w
, &
w‹d
);

1352 i‡(
w
->
°©us
 || 
w‹d
 !
SANE_NET_INIT
)

1354 
	`DBG
 (
DBG_ERR
, "init: bad status=%d orÖrocnum=%d\n",

1355 
w
->
°©us
, 
w‹d
);

1359 
	`ß√i_w_öô_ªq
 (
w
, &
ªq
);

1360 i‡(
w
->
°©us
)

1362 
	`DBG
 (
DBG_ERR
, "öô: bad sètu†a·î s™ei_w_öô_ªq: %d\n", 
w
->
°©us
);

1366 
w
->
vîsi⁄
 = 
SANEI_NET_PROTOCOL_VERSION
;

1367 i‡(
ªq
.
u£∫ame
)

1368 
deÁu…_u£∫ame
 = 
	`°rdup
 (
ªq
.
u£∫ame
);

1370 
	`ß√i_w_‰ì
 (
w
, (
WúeCodecFunc
Ë
ß√i_w_öô_ªq
, &
ªq
);

1371 i‡(
w
->
°©us
)

1373 
	`DBG
 (
DBG_ERR
, "öô: bad sètu†a·î s™ei_w_‰ì: %d\n", 
w
->
°©us
);

1377 
ª∂y
.
vîsi⁄_code
 = 
	`SANE_VERSION_CODE
 (
V_MAJOR
, 
V_MINOR
,

1378 
SANEI_NET_PROTOCOL_VERSION
);

1380 
	`DBG
 (
DBG_WARN
, "init:áccess grantedÅo %s@%s\n",

1381 
deÁu…_u£∫ame
, 
ªmŸe_ù
);

1383 i‡(
°©us
 =
SANE_STATUS_GOOD
)

1385 
°©us
 = 
	`ß√_öô
 (&
be_vîsi⁄_code
, 
auth_ˇŒback
);

1386 i‡(
°©us
 !
SANE_STATUS_GOOD
)

1387 
	`DBG
 (
DBG_ERR
, "init: failedÅo initialize backend (%s)\n",

1388 
	`ß√_°r°©us
 (
°©us
));

1390 i‡(
	`SANE_VERSION_MAJOR
 (
be_vîsi⁄_code
Ë!
V_MAJOR
)

1392 
	`DBG
 (
DBG_ERR
,

1394 
	`SANE_VERSION_MAJOR
 (
be_vîsi⁄_code
), 
V_MAJOR
);

1395 
°©us
 = 
SANE_STATUS_INVAL
;

1398 
ª∂y
.
°©us
 = status;

1399 i‡(
°©us
 !
SANE_STATUS_GOOD
)

1400 
ª∂y
.
vîsi⁄_code
 = 0;

1401 
	`ß√i_w_ª∂y
 (
w
, (
WúeCodecFunc
Ë
ß√i_w_öô_ª∂y
, &
ª∂y
);

1403 i‡(
w
->
°©us
 || sètu†!
SANE_STATUS_GOOD
)

1407 
	}
}

1409 #ifde‡
SANED_USES_AF_INDEP


1411 
	$°¨t_sˇn
 (
Wúe
 * 
w
, 
h
, 
SANE_Sèπ_Rïly
 * 
ª∂y
)

1414 
sockaddr_°‹age
 
ss
;

1415 
sockaddr
 
ß
;

1416 
sockaddr_ö
 
sö
;

1417 #ifde‡
ENABLE_IPV6


1418 
sockaddr_ö6
 
sö6
;

1420 } 
d©a_addr
;

1421 
sockaddr_ö
 *
sö
;

1422 #ifde‡
ENABLE_IPV6


1423 
sockaddr_ö6
 *
sö6
;

1425 
SANE_H™dÀ
 
be_h™dÀ
;

1426 
fd
, 
Àn
;

1427 
ö_p‹t_t
 
d©a_p‹t
;

1428 
ªt
;

1430 
be_h™dÀ
 = 
h™dÀ
[
h
].handle;

1432 
Àn
 =  (
d©a_addr
.
ss
);

1433 i‡(
	`gësock«me
 (
w
->
io
.
fd
, &
d©a_addr
.
ß
, (
sockÀn_t
 *Ë&
Àn
) < 0)

1435 
	`DBG
 (
DBG_ERR
, "start_scan: failedÅo obtain socketáddress (%s)\n",

1436 
	`°ªº‹
 (
î∫o
));

1437 
ª∂y
->
°©us
 = 
SANE_STATUS_IO_ERROR
;

1441 
fd
 = 
	`sockë
 (
	`SS_FAMILY
(
d©a_addr
.
ss
), 
SOCK_STREAM
, 0);

1442 i‡(
fd
 < 0)

1444 
	`DBG
 (
DBG_ERR
, "start_scan: failedÅo obtain data socket (%s)\n",

1445 
	`°ªº‹
 (
î∫o
));

1446 
ª∂y
->
°©us
 = 
SANE_STATUS_IO_ERROR
;

1450 
	`SS_FAMILY
(
d©a_addr
.
ss
))

1452 
AF_INET
:

1453 
sö
 = &
d©a_addr
.sin;

1455 #ifde‡
ENABLE_IPV6


1456 
AF_INET6
:

1457 
sö6
 = &
d©a_addr
.sin6;

1465 
d©a_p‹t
 = 
d©a_p‹t_lo
; d©a_p‹à<
d©a_p‹t_hi
; data_port++)

1467 
	`SS_FAMILY
(
d©a_addr
.
ss
))

1469 
AF_INET
:

1470 
sö
->
sö_p‹t
 = 
	`ht⁄s
(
d©a_p‹t
);

1472 #ifde‡
ENABLE_IPV6


1473 
AF_INET6
:

1474 
sö6
->
sö6_p‹t
 = 
	`ht⁄s
(
d©a_p‹t
);

1481 
	`DBG
 (
DBG_INFO
, "°¨t_sˇn:ÅryögÅÿböd d©®p‹à%d\n", 
d©a_p‹t
);

1483 
ªt
 = 
	`böd
 (
fd
, &
d©a_addr
.
ß
, 
Àn
);

1484 i‡(
ªt
 == 0)

1488 i‡(
ªt
 < 0)

1490 
	`DBG
 (
DBG_ERR
, "start_scan: failedÅo bindáddress (%s)\n",

1491 
	`°ªº‹
 (
î∫o
));

1492 
ª∂y
->
°©us
 = 
SANE_STATUS_IO_ERROR
;

1496 i‡(
	`li°í
 (
fd
, 1) < 0)

1498 
	`DBG
 (
DBG_ERR
, "start_scan: failedÅo make socketÜisten (%s)\n",

1499 
	`°ªº‹
 (
î∫o
));

1500 
ª∂y
->
°©us
 = 
SANE_STATUS_IO_ERROR
;

1504 i‡(
	`gësock«me
 (
fd
, &
d©a_addr
.
ß
, (
sockÀn_t
 *Ë&
Àn
) < 0)

1506 
	`DBG
 (
DBG_ERR
, "start_scan: failedÅo obtain socketáddress (%s)\n",

1507 
	`°ªº‹
 (
î∫o
));

1508 
ª∂y
->
°©us
 = 
SANE_STATUS_IO_ERROR
;

1512 
	`SS_FAMILY
(
d©a_addr
.
ss
))

1514 
AF_INET
:

1515 
sö
 = &
d©a_addr
.sin;

1516 
ª∂y
->
p‹t
 = 
	`¡ohs
 (
sö
->
sö_p‹t
);

1518 #ifde‡
ENABLE_IPV6


1519 
AF_INET6
:

1520 
sö6
 = &
d©a_addr
.sin6;

1521 
ª∂y
->
p‹t
 = 
	`¡ohs
 (
sö6
->
sö6_p‹t
);

1528 
	`DBG
 (
DBG_MSG
, "°¨t_sˇn: usögÖ‹à%d f‹ d©a\n", 
ª∂y
->
p‹t
);

1530 
ª∂y
->
°©us
 = 
	`ß√_°¨t
 (
be_h™dÀ
);

1531 i‡(
ª∂y
->
°©us
 =
SANE_STATUS_GOOD
)

1533 
h™dÀ
[
h
].
sˇ¬ög
 = 1;

1534 
h™dÀ
[
h
].
doˇn˚l
 = 0;

1537  
fd
;

1538 
	}
}

1543 
	$°¨t_sˇn
 (
Wúe
 * 
w
, 
h
, 
SANE_Sèπ_Rïly
 * 
ª∂y
)

1545 
sockaddr_ö
 
sö
;

1546 
SANE_H™dÀ
 
be_h™dÀ
;

1547 
fd
, 
Àn
;

1548 
ö_p‹t_t
 
d©a_p‹t
;

1549 
ªt
;

1551 
be_h™dÀ
 = 
h™dÀ
[
h
].handle;

1553 
Àn
 =  (
sö
);

1554 i‡(
	`gësock«me
 (
w
->
io
.
fd
, (
sockaddr
 *Ë&
sö
, (
sockÀn_t
 *Ë&
Àn
) < 0)

1556 
	`DBG
 (
DBG_ERR
, "start_scan: failedÅo obtain socketáddress (%s)\n",

1557 
	`°ªº‹
 (
î∫o
));

1558 
ª∂y
->
°©us
 = 
SANE_STATUS_IO_ERROR
;

1562 
fd
 = 
	`sockë
 (
AF_INET
, 
SOCK_STREAM
, 0);

1563 i‡(
fd
 < 0)

1565 
	`DBG
 (
DBG_ERR
, "start_scan: failedÅo obtain data socket (%s)\n",

1566 
	`°ªº‹
 (
î∫o
));

1567 
ª∂y
->
°©us
 = 
SANE_STATUS_IO_ERROR
;

1572 
d©a_p‹t
 = 
d©a_p‹t_lo
; d©a_p‹à<
d©a_p‹t_hi
; data_port++)

1574 
sö
.
sö_p‹t
 = 
	`ht⁄s
(
d©a_p‹t
);

1576 
	`DBG
(
DBG_INFO
, "°¨t_sˇn:ÅryögÅÿböd d©®p‹à%d\n", 
d©a_p‹t
);

1578 
ªt
 = 
	`böd
 (
fd
, (
sockaddr
 *Ë&
sö
, 
Àn
);

1579 i‡(
ªt
 == 0)

1583 i‡(
ªt
 < 0)

1585 
	`DBG
 (
DBG_ERR
, "start_scan: failedÅo bindáddress (%s)\n",

1586 
	`°ªº‹
 (
î∫o
));

1587 
ª∂y
->
°©us
 = 
SANE_STATUS_IO_ERROR
;

1591 i‡(
	`li°í
 (
fd
, 1) < 0)

1593 
	`DBG
 (
DBG_ERR
, "start_scan: failedÅo make socketÜisten (%s)\n",

1594 
	`°ªº‹
 (
î∫o
));

1595 
ª∂y
->
°©us
 = 
SANE_STATUS_IO_ERROR
;

1599 i‡(
	`gësock«me
 (
fd
, (
sockaddr
 *Ë&
sö
, (
sockÀn_t
 *Ë&
Àn
) < 0)

1601 
	`DBG
 (
DBG_ERR
, "start_scan: failedÅo obtain socketáddress (%s)\n",

1602 
	`°ªº‹
 (
î∫o
));

1603 
ª∂y
->
°©us
 = 
SANE_STATUS_IO_ERROR
;

1607 
ª∂y
->
p‹t
 = 
	`¡ohs
 (
sö
.
sö_p‹t
);

1609 
	`DBG
 (
DBG_MSG
, "°¨t_sˇn: usögÖ‹à%d f‹ d©a\n", 
ª∂y
->
p‹t
);

1611 
ª∂y
->
°©us
 = 
	`ß√_°¨t
 (
be_h™dÀ
);

1612 i‡(
ª∂y
->
°©us
 =
SANE_STATUS_GOOD
)

1614 
h™dÀ
[
h
].
sˇ¬ög
 = 1;

1615 
h™dÀ
[
h
].
doˇn˚l
 = 0;

1618  
fd
;

1619 
	}
}

1623 
	$°‹e_ª˛í
 (
SANE_Byã
 * 
buf
, 
size_t
 
buf_size
, 
i
, size_à
ª˛í
)

1625 
buf
[
i
++] = (
ª˛í
 >> 24) & 0xff;

1626 i‡(
i
 >(Ë
buf_size
)

1627 
i
 = 0;

1628 
buf
[
i
++] = (
ª˛í
 >> 16) & 0xff;

1629 i‡(
i
 >(Ë
buf_size
)

1630 
i
 = 0;

1631 
buf
[
i
++] = (
ª˛í
 >> 8) & 0xff;

1632 i‡(
i
 >(Ë
buf_size
)

1633 
i
 = 0;

1634 
buf
[
i
++] = (
ª˛í
 >> 0) & 0xff;

1635 i‡(
i
 >(Ë
buf_size
)

1636 
i
 = 0;

1637  
i
;

1638 
	}
}

1641 
	$do_sˇn
 (
Wúe
 * 
w
, 
h
, 
d©a_fd
)

1643 
num_fds
, 
be_fd
 = -1, 
ªadî
, 
wrôî
, 
byãs_ö_buf
, 
°©us_dúty
 = 0;

1644 
SANE_H™dÀ
 
be_h™dÀ
 = 
h™dÀ
[
h
].handle;

1645 
timevÆ
 
tv
, *
timeout
 = 0;

1646 
fd_£t
 
rd_£t
, 
rd_mask
, 
wr_£t
, 
wr_mask
;

1647 
SANE_Byã
 
buf
[8192];

1648 
SANE_Sètus
 
°©us
;

1649 
nwrôãn
;

1650 
SANE_I¡
 
Àngth
;

1651 
size_t
 
nbyãs
;

1653 
	`DBG
 (3, "do_scan: start\n");

1655 
	`FD_ZERO
 (&
rd_mask
);

1656 
	`FD_SET
 (
w
->
io
.
fd
, &
rd_mask
);

1657 
num_fds
 = 
w
->
io
.
fd
 + 1;

1659 
	`FD_ZERO
 (&
wr_mask
);

1660 
	`FD_SET
 (
d©a_fd
, &
wr_mask
);

1661 i‡(
d©a_fd
 >
num_fds
)

1662 
num_fds
 = 
d©a_fd
 + 1;

1664 
	`ß√_£t_io_mode
 (
be_h™dÀ
, 
SANE_TRUE
);

1665 i‡(
	`ß√_gë_£À˘_fd
 (
be_h™dÀ
, &
be_fd
Ë=
SANE_STATUS_GOOD
)

1667 
	`FD_SET
 (
be_fd
, &
rd_mask
);

1668 i‡(
be_fd
 >
num_fds
)

1669 
num_fds
 = 
be_fd
 + 1;

1673 
	`mem£t
 (&
tv
, 0,  (tv));

1674 
timeout
 = &
tv
;

1677 
°©us
 = 
SANE_STATUS_GOOD
;

1678 
ªadî
 = 
wrôî
 = 
byãs_ö_buf
 = 0;

1681 
rd_£t
 = 
rd_mask
;

1682 
wr_£t
 = 
wr_mask
;

1683 i‡(
	`£À˘
 (
num_fds
, &
rd_£t
, &
wr_£t
, 0, 
timeout
) < 0)

1685 i‡(
be_fd
 >0 && 
î∫o
 =
EBADF
)

1690 
	`FD_CLR
 (
be_fd
, &
rd_mask
);

1691 
be_fd
 = -1;

1693 i‡(
°©us
 =
SANE_STATUS_GOOD
)

1694 
°©us_dúty
 = 1;

1695 
°©us
 = 
SANE_STATUS_EOF
;

1696 
	`DBG
 (
DBG_INFO
, "do_scan: select_fd was closed --> EOF\n");

1701 
°©us
 = 
SANE_STATUS_IO_ERROR
;

1702 
	`DBG
 (
DBG_ERR
, "do_sˇn: sñe˘ faûed (%s)\n", 
	`°ªº‹
 (
î∫o
));

1707 i‡(
byãs_ö_buf
)

1709 i‡(
	`FD_ISSET
 (
d©a_fd
, &
wr_£t
))

1711 i‡(
byãs_ö_buf
 > 0)

1714 
nbyãs
 = 
byãs_ö_buf
;

1715 i‡(
wrôî
 + 
nbyãs
 >  (
buf
))

1716 
nbyãs
 =  (
buf
Ë- 
wrôî
;

1717 
	`DBG
 (
DBG_INFO
,

1719 
nbyãs
);

1720 
nwrôãn
 = 
	`wrôe
 (
d©a_fd
, 
buf
 + 
wrôî
, 
nbyãs
);

1721 
	`DBG
 (
DBG_INFO
,

1722 "do_sˇn: wrŸê%ld byã†tÿ˛õ¡\n", 
nwrôãn
);

1723 i‡(
nwrôãn
 < 0)

1725 
	`DBG
 (
DBG_ERR
, "do_scan: write failed (%s)\n",

1726 
	`°ªº‹
 (
î∫o
));

1727 
°©us
 = 
SANE_STATUS_CANCELLED
;

1730 
byãs_ö_buf
 -
nwrôãn
;

1731 
wrôî
 +
nwrôãn
;

1732 i‡(
wrôî
 = (
buf
))

1733 
wrôî
 = 0;

1737 i‡(
°©us
 =
SANE_STATUS_GOOD


1738 && (
timeout
 || 
	`FD_ISSET
 (
be_fd
, &
rd_£t
)))

1740 
i
;

1745 
i
 = 
ªadî
;

1746 
ªadî
 += 4;

1747 i‡(
ªadî
 >(Ë (
buf
))

1748 
ªadî
 -(
buf
);

1750 
	`as£π
 (
byãs_ö_buf
 == 0);

1751 
nbyãs
 =  (
buf
) - 4;

1752 i‡(
ªadî
 + 
nbyãs
 >  (
buf
))

1753 
nbyãs
 =  (
buf
Ë- 
ªadî
;

1755 
	`DBG
 (
DBG_INFO
,

1756 "do_sˇn:ÅryögÅÿªad %d byã†‰om sˇ¬î\n", 
nbyãs
);

1757 
°©us
 = 
	`ß√_ªad
 (
be_h™dÀ
, 
buf
 + 
ªadî
, 
nbyãs
, &
Àngth
);

1758 
	`DBG
 (
DBG_INFO
,

1759 "do_sˇn:Ñód %d byã†‰om sˇ¬î\n", 
Àngth
);

1761 
	`ª£t_w©chdog
 ();

1763 
ªadî
 +
Àngth
;

1764 i‡(
ªadî
 >(Ë (
buf
))

1765 
ªadî
 = 0;

1766 
byãs_ö_buf
 +
Àngth
 + 4;

1768 i‡(
°©us
 !
SANE_STATUS_GOOD
)

1770 
ªadî
 = 
i
;

1771 
°©us_dúty
 = 1;

1772 
	`DBG
 (
DBG_MSG
,

1773 "do_sˇn: sètu†`%s'\n", 
	`ß√_°r°©us
(
°©us
));

1776 
	`°‹e_ª˛í
 (
buf
,  (buf), 
i
, 
Àngth
);

1779 i‡(
°©us_dúty
 &&  (
buf
Ë- 
byãs_ö_buf
 >= 5)

1781 
°©us_dúty
 = 0;

1782 
ªadî
 = 
	`°‹e_ª˛í
 (
buf
,  (buf),Ñeader, 0xffffffff);

1783 
buf
[
ªadî
] = 
°©us
;

1784 
byãs_ö_buf
 += 5;

1785 
	`DBG
 (
DBG_MSG
, "do_scan: statuscode `%s' wasáddedÅo buffer\n",

1786 
	`ß√_°r°©us
(
°©us
));

1789 i‡(
	`FD_ISSET
 (
w
->
io
.
fd
, &
rd_£t
))

1791 
	`DBG
 (
DBG_MSG
,

1792 "do_sˇn:Öro˚ssög RPCÑeque° o¿fd %d\n", 
w
->
io
.
fd
);

1793 
	`¥o˚ss_ªque°
 (
w
);

1794 i‡(
h™dÀ
[
h
].
doˇn˚l
)

1798 
°©us
 =
SANE_STATUS_GOOD
 || 
byãs_ö_buf
 > 0 || 
°©us_dúty
);

1799 
	`DBG
 (
DBG_MSG
, "do_sˇn: d⁄e, sètus=%s\n", 
	`ß√_°r°©us
 (
°©us
));

1800 
h™dÀ
[
h
].
doˇn˚l
 = 0;

1801 
h™dÀ
[
h
].
sˇ¬ög
 = 0;

1802 
	}
}

1805 
	$¥o˚ss_ªque°
 (
Wúe
 * 
w
)

1807 
SANE_H™dÀ
 
be_h™dÀ
;

1808 
SANE_W‹d
 
h
, 
w‹d
;

1809 
i
;

1811 
	`DBG
 (
DBG_DBG
, "process_request: waiting forÑequest\n");

1812 
	`ß√i_w_£t_dú
 (
w
, 
WIRE_DECODE
);

1813 
	`ß√i_w_w‹d
 (
w
, &
w‹d
);

1815 i‡(
w
->
°©us
)

1817 
	`DBG
 (
DBG_ERR
,

1818 "¥o˚ss_ªque°: bad sètu†%d\n", 
w
->
°©us
);

1822 
cuºít_ªque°
 = 
w‹d
;

1824 
	`DBG
 (
DBG_MSG
, "¥o˚ss_ªque°: gŸÑeque° %d\n", 
cuºít_ªque°
);

1826 
cuºít_ªque°
)

1828 
SANE_NET_GET_DEVICES
:

1830 
SANE_Gë_Devi˚s_Rïly
 
ª∂y
;

1832 
ª∂y
.
°©us
 =

1833 
	`ß√_gë_devi˚s
 ((c⁄° 
SANE_Devi˚
 ***Ë&
ª∂y
.
devi˚_li°
,

1834 
SANE_TRUE
);

1835 
	`ß√i_w_ª∂y
 (
w
, (
WúeCodecFunc
Ë
ß√i_w_gë_devi˚s_ª∂y
, &
ª∂y
);

1839 
SANE_NET_OPEN
:

1841 
SANE_O≥n_Rïly
 
ª∂y
;

1842 
SANE_H™dÀ
 
be_h™dÀ
;

1843 
SANE_Såög
 
«me
, 
ªsour˚
;

1845 
	`ß√i_w_°rög
 (
w
, &
«me
);

1846 i‡(
w
->
°©us
)

1848 
	`DBG
 (
DBG_ERR
,

1850 
	`°ªº‹
 (
w
->
°©us
));

1854 i‡(!
«me
)

1856 
	`DBG
 (
DBG_ERR
, "process_request: (open) device_name == NULL\n");

1857 
ª∂y
.
°©us
 = 
SANE_STATUS_INVAL
;

1858 
	`ß√i_w_ª∂y
 (
w
, (
WúeCodecFunc
Ë
ß√i_w_›í_ª∂y
, &
ª∂y
);

1862 
ˇn_auth‹ize
 = 1;

1864 
ªsour˚
 = 
	`°rdup
 (
«me
);

1866 i‡(
	`°æí
(
ªsour˚
) == 0) {

1868 c⁄° 
SANE_Devi˚
 **
devi˚_li°
;

1870 
	`DBG
(
DBG_DBG
, "process_request: (open) strlen(resource) == 0\n");

1871 
	`‰ì
 (
ªsour˚
);

1873 i‡((
i
 = 
	`ß√_gë_devi˚s
 (&
devi˚_li°
, 
SANE_TRUE
)) !=

1874 
SANE_STATUS_GOOD
)

1876 
	`DBG
(
DBG_ERR
, "process_request: (open) sane_get_devices failed\n");

1877 
	`mem£t
 (&
ª∂y
, 0,  (reply));

1878 
ª∂y
.
°©us
 = 
i
;

1879 
	`ß√i_w_ª∂y
 (
w
, (
WúeCodecFunc
Ë
ß√i_w_›í_ª∂y
, &
ª∂y
);

1883 i‡((
devi˚_li°
 =
NULL
) || (device_list[0] == NULL))

1885 
	`DBG
(
DBG_ERR
, "process_request: (open) device_list[0] == 0\n");

1886 
	`mem£t
 (&
ª∂y
, 0,  (reply));

1887 
ª∂y
.
°©us
 = 
SANE_STATUS_INVAL
;

1888 
	`ß√i_w_ª∂y
 (
w
, (
WúeCodecFunc
Ë
ß√i_w_›í_ª∂y
, &
ª∂y
);

1892 
ªsour˚
 = 
	`°rdup
 (
devi˚_li°
[0]->
«me
);

1895 i‡(
	`°rchr
 (
ªsour˚
, ':'))

1896 *(
	`°rchr
 (
ªsour˚
, ':')) = 0;

1898 i‡(
	`ß√i_auth‹ize
 (
ªsour˚
, "ß√d", 
auth_ˇŒback
) !=

1899 
SANE_STATUS_GOOD
)

1901 
	`DBG
 (
DBG_ERR
, "process_request:áccessÅoÑesource `%s' denied\n",

1902 
ªsour˚
);

1903 
	`‰ì
 (
ªsour˚
);

1904 
	`mem£t
 (&
ª∂y
, 0,  (reply));

1905 
ª∂y
.
°©us
 = 
SANE_STATUS_ACCESS_DENIED
;

1909 
	`DBG
 (
DBG_MSG
, "process_request:áccessÅoÑesource `%s' granted\n",

1910 
ªsour˚
);

1911 
	`‰ì
 (
ªsour˚
);

1912 
	`mem£t
 (&
ª∂y
, 0,  (reply));

1913 
ª∂y
.
°©us
 = 
	`ß√_›í
 (
«me
, &
be_h™dÀ
);

1914 
	`DBG
 (
DBG_MSG
, "process_request: sane_openÑeturned: %s\n",

1915 
	`ß√_°r°©us
 (
ª∂y
.
°©us
));

1918 i‡(
ª∂y
.
°©us
 =
SANE_STATUS_GOOD
)

1920 
h
 = 
	`gë_‰ì_h™dÀ
 ();

1921 i‡(
h
 < 0)

1922 
ª∂y
.
°©us
 = 
SANE_STATUS_NO_MEM
;

1925 
h™dÀ
[
h
].h™dÀ = 
be_h™dÀ
;

1926 
ª∂y
.
h™dÀ
 = 
h
;

1930 
ˇn_auth‹ize
 = 0;

1932 
	`ß√i_w_ª∂y
 (
w
, (
WúeCodecFunc
Ë
ß√i_w_›í_ª∂y
, &
ª∂y
);

1933 
	`ß√i_w_‰ì
 (
w
, (
WúeCodecFunc
Ë
ß√i_w_°rög
, &
«me
);

1937 
SANE_NET_CLOSE
:

1939 
SANE_W‹d
 
ack
 = 0;

1941 
h
 = 
	`decode_h™dÀ
 (
w
, "close");

1942 
	`˛o£_h™dÀ
 (
h
);

1943 
	`ß√i_w_ª∂y
 (
w
, (
WúeCodecFunc
Ë
ß√i_w_w‹d
, &
ack
);

1947 
SANE_NET_GET_OPTION_DESCRIPTORS
:

1949 
SANE_O±i⁄_Des¸ùt‹_Aºay
 
›t
;

1951 
h
 = 
	`decode_h™dÀ
 (
w
, "get_option_descriptors");

1952 i‡(
h
 < 0)

1954 
be_h™dÀ
 = 
h™dÀ
[
h
].handle;

1955 
	`ß√_c⁄åﬁ_›ti⁄
 (
be_h™dÀ
, 0, 
SANE_ACTION_GET_VALUE
,

1956 &
›t
.
num_›ti⁄s
, 0);

1958 
›t
.
desc
 = 
	`mÆloc
 (›t.
num_›ti⁄s
 *  (opt.desc[0]));

1959 
i
 = 0; i < 
›t
.
num_›ti⁄s
; ++i)

1960 
›t
.
desc
[
i
] = (
SANE_O±i⁄_Des¸ùt‹
 *)

1961 
	`ß√_gë_›ti⁄_des¸ùt‹
 (
be_h™dÀ
, 
i
);

1963 
	`ß√i_w_ª∂y
 (
w
,(
WúeCodecFunc
Ë
ß√i_w_›ti⁄_des¸ùt‹_¨øy
,

1964 &
›t
);

1966 
	`‰ì
 (
›t
.
desc
);

1970 
SANE_NET_CONTROL_OPTION
:

1972 
SANE_C⁄åﬁ_O±i⁄_Req
 
ªq
;

1973 
SANE_C⁄åﬁ_O±i⁄_Rïly
 
ª∂y
;

1975 
	`ß√i_w_c⁄åﬁ_›ti⁄_ªq
 (
w
, &
ªq
);

1976 i‡(
w
->
°©us
 || (Ë
ªq
.
h™dÀ
 >(Ë
num_h™dÀs


1977 || !
h™dÀ
[
ªq
.h™dÀ].
öu£
)

1979 
	`DBG
 (
DBG_ERR
,

1982 , 
ªq
.
h™dÀ
, 
	`°ªº‹
 (
w
->
°©us
));

1986 
ˇn_auth‹ize
 = 1;

1988 
	`mem£t
 (&
ª∂y
, 0,  (reply));

1989 
be_h™dÀ
 = 
h™dÀ
[
ªq
.handle].handle;

1990 
ª∂y
.
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
be_h™dÀ
, 
ªq
.
›ti⁄
,

1991 
ªq
.
a˘i⁄
,Ñeq.
vÆue
,

1992 &
ª∂y
.
öfo
);

1993 
ª∂y
.
vÆue_ty≥
 = 
ªq
.value_type;

1994 
ª∂y
.
vÆue_size
 = 
ªq
.value_size;

1995 
ª∂y
.
vÆue
 = 
ªq
.value;

1997 
ˇn_auth‹ize
 = 0;

1999 
	`ß√i_w_ª∂y
 (
w
, (
WúeCodecFunc
Ë
ß√i_w_c⁄åﬁ_›ti⁄_ª∂y
,

2000 &
ª∂y
);

2001 
	`ß√i_w_‰ì
 (
w
, (
WúeCodecFunc
Ë
ß√i_w_c⁄åﬁ_›ti⁄_ªq
, &
ªq
);

2005 
SANE_NET_GET_PARAMETERS
:

2007 
SANE_Gë_P¨amëîs_Rïly
 
ª∂y
;

2009 
h
 = 
	`decode_h™dÀ
 (
w
, "get_parameters");

2010 i‡(
h
 < 0)

2012 
be_h™dÀ
 = 
h™dÀ
[
h
].handle;

2014 
ª∂y
.
°©us
 = 
	`ß√_gë_∑ømëîs
 (
be_h™dÀ
, &ª∂y.
∑øms
);

2016 
	`ß√i_w_ª∂y
 (
w
, (
WúeCodecFunc
Ë
ß√i_w_gë_∑ømëîs_ª∂y
,

2017 &
ª∂y
);

2021 
SANE_NET_START
:

2023 
SANE_Sèπ_Rïly
 
ª∂y
;

2024 
fd
 = -1, 
d©a_fd
;

2026 
h
 = 
	`decode_h™dÀ
 (
w
, "start");

2027 i‡(
h
 < 0)

2030 
	`mem£t
 (&
ª∂y
, 0,  (reply));

2031 
ª∂y
.
byã_‹dî
 = 
SANE_NET_LITTLE_ENDIAN
;

2032 i‡(
byã_‹dî
.
w
 != 1)

2033 
ª∂y
.
byã_‹dî
 = 
SANE_NET_BIG_ENDIAN
;

2035 i‡(
h™dÀ
[
h
].
sˇ¬ög
)

2036 
ª∂y
.
°©us
 = 
SANE_STATUS_DEVICE_BUSY
;

2038 
fd
 = 
	`°¨t_sˇn
 (
w
, 
h
, &
ª∂y
);

2040 
	`ß√i_w_ª∂y
 (
w
, (
WúeCodecFunc
Ë
ß√i_w_°¨t_ª∂y
, &
ª∂y
);

2042 #ifde‡
SANED_USES_AF_INDEP


2043 i‡(
ª∂y
.
°©us
 =
SANE_STATUS_GOOD
)

2045 
sockaddr_°‹age
 
ss
;

2046 
ãxt_addr
[64];

2047 
Àn
;

2048 
îr‹
;

2050 
	`DBG
 (
DBG_MSG
, "process_request: waiting for data connection\n");

2051 
d©a_fd
 = 
	`ac˚±
 (
fd
, 0, 0);

2052 
	`˛o£
 (
fd
);

2055 
Àn
 =  (
ss
);

2056 i‡(
	`gë≥î«me
 (
d©a_fd
, (
sockaddr
 *Ë&
ss
, (
sockÀn_t
 *Ë&
Àn
) < 0)

2058 
	`DBG
 (
DBG_ERR
, "process_request: getpeername failed: %s\n",

2059 
	`°ªº‹
 (
î∫o
));

2063 
îr‹
 = 
	`gë«meöfo
 ((
sockaddr
 *Ë&
ss
, 
Àn
, 
ãxt_addr
,

2064  (
ãxt_addr
), 
NULL
, 0, 
NI_NUMERICHOST
);

2065 i‡(
îr‹
)

2067 
	`DBG
 (
DBG_ERR
, "process_request: getnameinfo failed: %s\n",

2068 
	`gai_°ªº‹
 (
îr‹
));

2072 
	`DBG
 (
DBG_MSG
, "process_request:áccessÅo dataÖort from %s\n",

2073 
ãxt_addr
);

2075 i‡(
	`°rcmp
 (
ãxt_addr
, 
ªmŸe_ù
) != 0)

2077 
	`DBG
 (
DBG_ERR
, "process_request: however, only %s isáuthorized\n",

2078 
ãxt_addr
);

2079 
	`DBG
 (
DBG_ERR
, "process_request: configurationÖroblem oráttack?\n");

2080 
	`˛o£
 (
d©a_fd
);

2081 
d©a_fd
 = -1;

2087 i‡(
ª∂y
.
°©us
 =
SANE_STATUS_GOOD
)

2089 
sockaddr_ö
 
sö
;

2090 
Àn
;

2092 
	`DBG
 (
DBG_MSG
, "process_request: waiting for data connection\n");

2093 
d©a_fd
 = 
	`ac˚±
 (
fd
, 0, 0);

2094 
	`˛o£
 (
fd
);

2097 
Àn
 =  (
sö
);

2098 i‡(
	`gë≥î«me
 (
d©a_fd
, (
sockaddr
 *Ë&
sö
,

2099 (
sockÀn_t
 *Ë&
Àn
) < 0)

2101 
	`DBG
 (
DBG_ERR
, "process_request: getpeername failed: %s\n",

2102 
	`°ªº‹
 (
î∫o
));

2106 i‡(
	`memcmp
 (&
ªmŸe_addªss
, &
sö
.
sö_addr
,

2107  (
ªmŸe_addªss
)) != 0)

2109 
	`DBG
 (
DBG_ERR
,

2111 
	`öë_¡ﬂ
 (
sö
.
sö_addr
));

2112 
	`DBG
 (
DBG_ERR
,

2114 
	`öë_¡ﬂ
 (
ªmŸe_addªss
));

2115 
	`DBG
 (
DBG_ERR
,

2117 
	`˛o£
 (
d©a_fd
);

2118 
d©a_fd
 = -1;

2122 
	`DBG
 (
DBG_MSG
, "process_request:áccessÅo dataÖort from %s\n",

2123 
	`öë_¡ﬂ
 (
sö
.
sö_addr
));

2126 i‡(
d©a_fd
 < 0)

2128 
	`ß√_ˇn˚l
 (
h™dÀ
[
h
].handle);

2129 
h™dÀ
[
h
].
sˇ¬ög
 = 0;

2130 
h™dÀ
[
h
].
doˇn˚l
 = 0;

2131 
	`DBG
 (
DBG_ERR
, "process_request:áccept failed! (%s)\n",

2132 
	`°ªº‹
 (
î∫o
));

2135 
	`f˙é
 (
d©a_fd
, 
F_SETFL
, 1);

2136 
	`shutdown
 (
d©a_fd
, 0);

2137 
	`do_sˇn
 (
w
, 
h
, 
d©a_fd
);

2138 
	`˛o£
 (
d©a_fd
);

2143 
SANE_NET_CANCEL
:

2145 
SANE_W‹d
 
ack
 = 0;

2147 
h
 = 
	`decode_h™dÀ
 (
w
, "cancel");

2148 i‡(
h
 >= 0)

2150 
	`ß√_ˇn˚l
 (
h™dÀ
[
h
].handle);

2151 
h™dÀ
[
h
].
doˇn˚l
 = 1;

2153 
	`ß√i_w_ª∂y
 (
w
, (
WúeCodecFunc
Ë
ß√i_w_w‹d
, &
ack
);

2157 
SANE_NET_EXIT
:

2161 
SANE_NET_INIT
:

2162 
SANE_NET_AUTHORIZE
:

2164 
	`DBG
 (
DBG_ERR
,

2166 
cuºít_ªque°
);

2171 
	}
}

2175 
	$waô_chûd
 (
pid_t
 
pid
, *
°©us
, 
›ti⁄s
)

2177 
ß√d_chûd
 *
c
;

2178 
ß√d_chûd
 *
p
 = 
NULL
;

2179 
ªt
;

2181 
ªt
 = 
	`waôpid
(
pid
, 
°©us
, 
›ti⁄s
);

2183 i‡(
ªt
 <= 0)

2184  
ªt
;

2186 #ifde‡
WITH_AVAHI


2187 i‡((
avahi_pid
 > 0Ë&& (
ªt
 ==ávahi_pid))

2189 
avahi_pid
 = -1;

2190 
numchûdªn
--;

2191  
ªt
;

2195 
c
 = 
chûdªn
; (¯!
NULL
Ë&& (c->
√xt
 !NULL); 
p
 = c, c = c->next)

2197 i‡(
c
->
pid
 =
ªt
)

2199 i‡(
c
 =
chûdªn
)

2200 
chûdªn
 = 
c
->
√xt
;

2201 i‡(
p
 !
NULL
)

2202 
p
->
√xt
 = 
c
->next;

2204 
	`‰ì
(
c
);

2206 
numchûdªn
--;

2212  
ªt
;

2213 
	}
}

2216 
	$add_chûd
 (
pid_t
 
pid
)

2218 
ß√d_chûd
 *
c
;

2220 
c
 = (
ß√d_chûd
 *Ë
	`mÆloc
 ((saned_child));

2222 i‡(
c
 =
NULL
)

2224 
	`DBG
 (
DBG_ERR
, "add_child: out of memory\n");

2228 
c
->
pid
 =Öid;

2229 
c
->
√xt
 = 
chûdªn
;

2231 
chûdªn
 = 
c
;

2234 
	}
}

2238 
	$h™dÀ_c⁄√˘i⁄
 (
fd
)

2240 #ifde‡
TCP_NODELAY


2241 
⁄
 = 1;

2242 
Àvñ
 = -1;

2245 
	`DBG
 (
DBG_DBG
, "handle_connection:Örocessing client connection\n");

2247 
wúe
.
io
.
fd
 = fd;

2249 
	`sig«l
 (
SIGALRM
, 
quô
);

2250 
	`sig«l
 (
SIGPIPE
, 
quô
);

2252 #ifde‡
TCP_NODELAY


2253 #ifde‡
SOL_TCP


2254 
Àvñ
 = 
SOL_TCP
;

2258 
¥Ÿ€¡
 *
p
;

2259 
p
 = 
	`gë¥Ÿoby«me
 ("tcp");

2260 i‡(
p
 == 0)

2262 
	`DBG
 (
DBG_WARN
, "handle_connection: cannotÜook up `tcp'ÖrotocolÇumber");

2265 
Àvñ
 = 
p
->
p_¥Ÿo
;

2268 i‡(
Àvñ
 == -1

2269 || 
	`£tsock›t
 (
wúe
.
io
.
fd
, 
Àvñ
, 
TCP_NODELAY
, &
⁄
,  (on)))

2270 
	`DBG
 (
DBG_WARN
, "handle_connection: failedÅoÖut socket in TCP_NODELAY mode (%s)",

2271 
	`°ªº‹
 (
î∫o
));

2274 i‡(
	`öô
 (&
wúe
) < 0)

2279 
	`ª£t_w©chdog
 ();

2280 i‡(
	`¥o˚ss_ªque°
 (&
wúe
) < 0)

2283 
	}
}

2286 
	$h™dÀ_˛õ¡
 (
fd
)

2288 
pid_t
 
pid
;

2289 
i
;

2291 
	`DBG
 (
DBG_DBG
, "handle_client: spawning childÖrocess\n");

2293 
pid
 = 
	`f‹k
 ();

2294 i‡(
pid
 == 0)

2297 i‡(
log_to_sy¶og
)

2298 
	`˛o£log
();

2300 
i
 = 3; i < 
fd
; i++)

2301 
	`˛o£
(
i
);

2303 i‡(
log_to_sy¶og
)

2304 
	`›ílog
 ("ß√d", 
LOG_PID
 | 
LOG_CONS
, 
LOG_DAEMON
);

2306 
	`h™dÀ_c⁄√˘i⁄
 (
fd
);

2307 
	`quô
 (0);

2309 i‡(
pid
 > 0)

2312 
	`add_chûd
 (
pid
);

2313 
	`˛o£
(
fd
);

2318 
	`DBG
 (
DBG_ERR
, "h™dÀ_˛õ¡: f‹k(ËÁûed: %s\n", 
	`°ªº‹
 (
î∫o
));

2319 
	`˛o£
(
fd
);

2321 
	}
}

2324 
	$baû_out
 (
îr‹
)

2326 
	`DBG
 (
DBG_ERR
, "%sbaûög out, waôög f‹ chûdªn...\n", (
îr‹
) ? "FATAL ERROR; " : "");

2328 #ifde‡
WITH_AVAHI


2329 i‡(
avahi_pid
 > 0)

2330 
	`kûl
 (
avahi_pid
, 
SIGTERM
);

2333 
numchûdªn
 > 0)

2334 
	`waô_chûd
 (-1, 
NULL
, 0);

2336 
	`DBG
 (
DBG_ERR
, "bail_out:áll childrenÉxited\n");

2338 
	`exô
 ((
îr‹
) ? 1 : 0);

2339 
	}
}

2342 
sig_öt_ãrm_h™dÀr
 (
signum
);

2345 
	$sig_öt_ãrm_h™dÀr
 (
signum
)

2348 
signum
 = signum;

2350 
	`sig«l
 (
SIGINT
, 
NULL
);

2351 
	`sig«l
 (
SIGTERM
, 
NULL
);

2353 
	`baû_out
 (0);

2354 
	}
}

2357 #ifde‡
WITH_AVAHI


2359 
ß√d_avahi
 (
pﬁlfd
 *
fds
, 
nfds
);

2362 
ß√d_¸óã_avahi_£rvi˚s
 (
AvahiClõ¡
 *
c
);

2365 
ß√d_avahi_ˇŒback
 (
AvahiClõ¡
 *
c
, 
AvahiClõ¡Sèã
 
°©e
, *
u£rd©a
);

2368 
ß√d_avahi_group_ˇŒback
 (
AvahiE¡ryGroup
 *
g
, 
AvahiE¡ryGroupSèã
 
°©e
, *
u£rd©a
);

2372 
	$ß√d_avahi
 (
pﬁlfd
 *
fds
, 
nfds
)

2374 
pﬁlfd
 *
fdp
 = 
NULL
;

2375 
îr‹
;

2377 
avahi_pid
 = 
	`f‹k
 ();

2379 i‡(
avahi_pid
 > 0)

2381 
numchûdªn
++;

2384 i‡(
avahi_pid
 < 0)

2386 
	`DBG
 (
DBG_ERR
, "ß√d_avahi: couldÇŸ s∑w¿Avahò¥o˚ss: %s\n", 
	`°ªº‹
 (
î∫o
));

2390 
	`sig«l
 (
SIGINT
, 
NULL
);

2391 
	`sig«l
 (
SIGTERM
, 
NULL
);

2394 
fdp
 = 
fds
; 
nfds
 > 0;Çfds--, fdp++)

2395 
	`˛o£
 (
fdp
->
fd
);

2397 
	`‰ì
(
fds
);

2399 
avahi_svc_«me
 = 
	`avahi_°rdup
(
SANED_NAME
);

2401 
avahi_pﬁl
 = 
	`avahi_sim∂e_pﬁl_√w
 ();

2402 i‡(
avahi_pﬁl
 =
NULL
)

2404 
	`DBG
 (
DBG_ERR
, "saned_avahi: failedÅo create simpleÖoll object\n");

2405 
Áû
;

2408 
avahi_˛õ¡
 = 
	`avahi_˛õ¡_√w
 (
	`avahi_sim∂e_pﬁl_gë
 (
avahi_pﬁl
), 
AVAHI_CLIENT_NO_FAIL
, 
ß√d_avahi_ˇŒback
, 
NULL
, &
îr‹
);

2409 i‡(
avahi_˛õ¡
 =
NULL
)

2411 
	`DBG
 (
DBG_ERR
, "ß√d_avahi: faûedÅÿ¸óã clõ¡: %s\n", 
	`avahi_°ªº‹
 (
îr‹
));

2412 
Áû
;

2415 
	`avahi_sim∂e_pﬁl_lo›
 (
avahi_pﬁl
);

2417 
	`DBG
 (
DBG_INFO
, "saned_avahi:ÖollÜoopÉxited\n");

2419 
	`exô
(
EXIT_SUCCESS
);

2424 
Áû
:

2425 i‡(
avahi_˛õ¡
)

2426 
	`avahi_˛õ¡_‰ì
 (
avahi_˛õ¡
);

2428 i‡(
avahi_pﬁl
)

2429 
	`avahi_sim∂e_pﬁl_‰ì
 (
avahi_pﬁl
);

2431 
	`avahi_‰ì
 (
avahi_svc_«me
);

2433 
	`exô
(
EXIT_FAILURE
);

2434 
	}
}

2437 
	$ß√d_avahi_group_ˇŒback
 (
AvahiE¡ryGroup
 *
g
, 
AvahiE¡ryGroupSèã
 
°©e
, *
u£rd©a
)

2439 *
n
;

2442 
u£rd©a
 = userdata;

2444 i‡((!
g
Ë|| (g !
avahi_group
))

2447 
°©e
)

2449 
AVAHI_ENTRY_GROUP_ESTABLISHED
:

2451 
	`DBG
 (
DBG_INFO
, "ß√d_avahi_group_ˇŒback: sîvi˚ '%s' suc˚ssfuŒyÉ°ablished\n", 
avahi_svc_«me
);

2454 
AVAHI_ENTRY_GROUP_COLLISION
:

2457 
n
 = 
	`avahi_Æã∫©ive_£rvi˚_«me
 (
avahi_svc_«me
);

2458 
	`avahi_‰ì
 (
avahi_svc_«me
);

2459 
avahi_svc_«me
 = 
n
;

2461 
	`DBG
 (
DBG_WARN
, "ß√d_avahi_group_ˇŒback: sîvi˚Çamêcﬁlisi⁄,Ñíamög sîvi˚Åÿ'%s'\n", 
avahi_svc_«me
);

2464 
	`ß√d_¸óã_avahi_£rvi˚s
 (
	`avahi_íåy_group_gë_˛õ¡
 (
g
));

2467 
AVAHI_ENTRY_GROUP_FAILURE
 :

2468 
	`DBG
 (
DBG_ERR
, "ß√d_avahi_group_ˇŒback:É¡ry grou∞Áûuª: %s\n", 
	`avahi_°ªº‹
 (
	`avahi_˛õ¡_î∫o
 (
	`avahi_íåy_group_gë_˛õ¡
 (
g
))));

2471 
	`avahi_sim∂e_pﬁl_quô
 (
avahi_pﬁl
);

2474 
AVAHI_ENTRY_GROUP_UNCOMMITED
:

2475 
AVAHI_ENTRY_GROUP_REGISTERING
:

2478 
	}
}

2481 
	$ß√d_¸óã_avahi_£rvi˚s
 (
AvahiClõ¡
 *
c
)

2483 *
n
;

2484 
txt
[32];

2485 
AvahiPrŸocﬁ
 
¥Ÿo
;

2486 
ªt
;

2488 i‡(!
c
)

2491 i‡(!
avahi_group
)

2493 
avahi_group
 = 
	`avahi_íåy_group_√w
 (
c
, 
ß√d_avahi_group_ˇŒback
, 
NULL
);

2494 i‡(
avahi_group
 =
NULL
)

2496 
	`DBG
 (
DBG_ERR
, "ß√d_¸óã_avahi_£rvi˚s:ávahi_íåy_group_√w(ËÁûed: %s\n", 
	`avahi_°ªº‹
 (
	`avahi_˛õ¡_î∫o
 (
c
)));

2497 
Áû
;

2501 i‡(
	`avahi_íåy_group_is_em±y
 (
avahi_group
))

2503 
	`DBG
 (
DBG_INFO
, "ß√d_¸óã_avahi_£rvi˚s:áddög sîvi˚ '%s'\n", 
avahi_svc_«me
);

2505 
	`¢¥ötf
(
txt
,  (txt), "¥Ÿovîs=%x", 
	`SANE_VERSION_CODE
 (
V_MAJOR
, 
V_MINOR
, 
SANEI_NET_PROTOCOL_VERSION
));

2507 #ifde‡
ENABLE_IPV6


2508 
¥Ÿo
 = 
AVAHI_PROTO_UNSPEC
;

2510 
¥Ÿo
 = 
AVAHI_PROTO_INET
;

2513 
ªt
 = 
	`avahi_íåy_group_add_£rvi˚
 (
avahi_group
, 
AVAHI_IF_UNSPEC
, 
¥Ÿo
, 0, 
avahi_svc_«me
, 
SANED_SERVICE_DNS
, 
NULL
, NULL, 
SANED_SERVICE_PORT
, 
txt
, NULL);

2514 i‡(
ªt
 < 0)

2516 i‡(
ªt
 =
AVAHI_ERR_COLLISION
)

2518 
n
 = 
	`avahi_Æã∫©ive_£rvi˚_«me
 (
avahi_svc_«me
);

2519 
	`avahi_‰ì
 (
avahi_svc_«me
);

2520 
avahi_svc_«me
 = 
n
;

2522 
	`DBG
 (
DBG_WARN
, "ß√d_¸óã_avahi_£rvi˚s: sîvi˚Çamêcﬁlisi⁄,Ñíamög sîvi˚Åÿ'%s'\n", 
avahi_svc_«me
);

2524 
	`avahi_íåy_group_ª£t
 (
avahi_group
);

2526 
	`ß√d_¸óã_avahi_£rvi˚s
 (
c
);

2531 
	`DBG
 (
DBG_ERR
, "ß√d_¸óã_avahi_£rvi˚s: faûedÅÿadd %†£rvi˚: %s\n", 
SANED_SERVICE_DNS
, 
	`avahi_°ªº‹
 (
ªt
));

2532 
Áû
;

2536 
ªt
 = 
	`avahi_íåy_group_commô
 (
avahi_group
);

2537 i‡(
ªt
 < 0)

2539 
	`DBG
 (
DBG_ERR
, "ß√d_¸óã_avahi_£rvi˚s: faûedÅÿcommôÉ¡ry group: %s\n", 
	`avahi_°ªº‹
 (
ªt
));

2540 
Áû
;

2546 
Áû
:

2547 
	`avahi_sim∂e_pﬁl_quô
 (
avahi_pﬁl
);

2548 
	}
}

2551 
	$ß√d_avahi_ˇŒback
 (
AvahiClõ¡
 *
c
, 
AvahiClõ¡Sèã
 
°©e
, *
u£rd©a
)

2553 
îr‹
;

2556 
u£rd©a
 = userdata;

2558 i‡(!
c
)

2561 
°©e
)

2563 
AVAHI_CLIENT_CONNECTING
:

2564 
	`DBG
 (
DBG_INFO
, "saned_avahi_callback: AVAHI_CLIENT_CONNECTING\n");

2567 
AVAHI_CLIENT_S_RUNNING
:

2568 
	`DBG
 (
DBG_INFO
, "saned_avahi_callback: AVAHI_CLIENT_S_RUNNING\n");

2569 
	`ß√d_¸óã_avahi_£rvi˚s
 (
c
);

2572 
AVAHI_CLIENT_S_COLLISION
:

2573 
	`DBG
 (
DBG_INFO
, "saned_avahi_callback: AVAHI_CLIENT_S_COLLISION\n");

2575 
AVAHI_CLIENT_S_REGISTERING
:

2576 
	`DBG
 (
DBG_INFO
, "saned_avahi_callback: AVAHI_CLIENT_S_REGISTERING\n");

2577 i‡(
avahi_group
)

2578 
	`avahi_íåy_group_ª£t
 (
avahi_group
);

2581 
AVAHI_CLIENT_FAILURE
:

2582 
	`DBG
 (
DBG_INFO
, "saned_avahi_callback: AVAHI_CLIENT_FAILURE\n");

2584 
îr‹
 = 
	`avahi_˛õ¡_î∫o
 (
c
);

2585 i‡(
îr‹
 =
AVAHI_ERR_DISCONNECTED
)

2587 
	`DBG
 (
DBG_INFO
, "saned_avahi_callback: AVAHI_ERR_DISCONNECTED\n");

2590 
	`avahi_˛õ¡_‰ì
 (
avahi_˛õ¡
);

2591 
avahi_˛õ¡
 = 
NULL
;

2592 
avahi_group
 = 
NULL
;

2594 
avahi_˛õ¡
 = 
	`avahi_˛õ¡_√w
 (
	`avahi_sim∂e_pﬁl_gë
 (
avahi_pﬁl
), 
AVAHI_CLIENT_NO_FAIL
, 
ß√d_avahi_ˇŒback
, 
NULL
, &
îr‹
);

2595 i‡(
avahi_˛õ¡
 =
NULL
)

2597 
	`DBG
 (
DBG_ERR
, "ß√d_avahi_ˇŒback: faûedÅÿ¸óã clõ¡: %s\n", 
	`avahi_°ªº‹
 (
îr‹
));

2598 
	`avahi_sim∂e_pﬁl_quô
 (
avahi_pﬁl
);

2604 
	`DBG
 (
DBG_ERR
, "ß√d_avahi_ˇŒback: clõ¡ faûuª: %s\n", 
	`avahi_°ªº‹
 (
îr‹
));

2605 
	`avahi_sim∂e_pﬁl_quô
 (
avahi_pﬁl
);

2609 
	}
}

2614 
	$ªad_c⁄fig
 ()

2616 
c⁄fig_löe
[
PATH_MAX
];

2617 c⁄° *
›tvÆ
;

2618 *
ídvÆ
;

2619 
vÆ
;

2620 
FILE
 *
Â
;

2621 
Àn
;

2623 
	`DBG
 (
DBG_INFO
, "read_config: searching for config file\n");

2624 
Â
 = 
	`ß√i_c⁄fig_›í
 (
SANED_CONFIG_FILE
);

2625 i‡(
Â
)

2627 
	`ß√i_c⁄fig_ªad
 (
c⁄fig_löe
,  (c⁄fig_löe), 
Â
))

2629 i‡(
c⁄fig_löe
[0] == '#')

2632 
›tvÆ
 = 
	`°rchr
 (
c⁄fig_löe
, '=');

2633 i‡(
›tvÆ
 =
NULL
)

2636 
Àn
 = 
	`°æí
 (
c⁄fig_löe
);

2637 i‡(!
Àn
)

2644 i‡(
	`°r°r
(
c⁄fig_löe
, "d©a_p‹å™ge"Ë!
NULL
)

2646 
›tvÆ
 = 
	`ß√i_c⁄fig_skù_whôe•a˚
 (++optval);

2647 i‡((
›tvÆ
 !
NULL
) && (*optval != '\0'))

2649 
vÆ
 = 
	`°πﬁ
 (
›tvÆ
, &
ídvÆ
, 10);

2650 i‡(
›tvÆ
 =
ídvÆ
)

2652 
	`DBG
 (
DBG_ERR
, "read_config: invalid value for data_portrange\n");

2655 i‡((
vÆ
 < 0) || (val > 65535))

2657 
	`DBG
 (
DBG_ERR
, "read_config: data_portrange startÖort is invalid\n");

2661 
›tvÆ
 = 
	`°rchr
 (
ídvÆ
, '-');

2662 i‡(
›tvÆ
 =
NULL
)

2664 
	`DBG
 (
DBG_ERR
, "read_config:ÇoÉndÖort value for data_portrange\n");

2668 
›tvÆ
 = 
	`ß√i_c⁄fig_skù_whôe•a˚
 (++optval);

2670 
d©a_p‹t_lo
 = 
vÆ
;

2672 
vÆ
 = 
	`°πﬁ
 (
›tvÆ
, &
ídvÆ
, 10);

2673 i‡(
›tvÆ
 =
ídvÆ
)

2675 
	`DBG
 (
DBG_ERR
, "read_config: invalid value for data_portrange\n");

2676 
d©a_p‹t_lo
 = 0;

2679 i‡((
vÆ
 < 0) || (val > 65535))

2681 
	`DBG
 (
DBG_ERR
, "read_config: data_portrangeÉndÖort is invalid\n");

2682 
d©a_p‹t_lo
 = 0;

2685 i‡(
vÆ
 < 
d©a_p‹t_lo
)

2687 
	`DBG
 (
DBG_ERR
, "read_config: data_portrangeÉndÖort isÜessÅhan startÖort\n");

2688 
d©a_p‹t_lo
 = 0;

2692 
d©a_p‹t_hi
 = 
vÆ
;

2694 
	`DBG
 (
DBG_INFO
, "ªad_c⁄fig: d©®p‹àønge: %d - %d\n", 
d©a_p‹t_lo
, 
d©a_p‹t_hi
);

2698 
	`f˛o£
 (
Â
);

2699 
	`DBG
 (
DBG_INFO
, "read_config: doneÑeading config\n");

2702 
	`DBG
 (
DBG_ERR
, "read_config: couldÇot open config file (%s): %s\n",

2703 
SANED_CONFIG_FILE
, 
	`°ªº‹
 (
î∫o
));

2704 
	}
}

2707 #ifde‡
SANED_USES_AF_INDEP


2709 
	$do_bödögs_Ámûy
 (
Ámûy
, *
nfds
, 
pﬁlfd
 **
fds
, 
addröfo
 *
ªs
)

2711 
addröfo
 *
ª•
;

2712 
pﬁlfd
 *
fdp
;

2713 
ß√_p‹t
;

2714 
fd
 = -1;

2715 
⁄
 = 1;

2716 
i
;

2718 
fdp
 = *
fds
;

2720 
ª•
 = 
ªs
, 
i
 = 0;Ñe• !
NULL
;Ñe• =Ñe•->
ai_√xt
, i++)

2723 i‡(
ª•
->
ai_Ámûy
 !
Ámûy
)

2726 i‡(
ª•
->
ai_Ámûy
 =
AF_INET
)

2728 
ß√_p‹t
 = 
	`¡ohs
 (((
sockaddr_ö
 *Ë
ª•
->
ai_addr
)->
sö_p‹t
);

2730 #ifde‡
ENABLE_IPV6


2731 i‡(
ª•
->
ai_Ámûy
 =
AF_INET6
)

2733 
ß√_p‹t
 = 
	`¡ohs
 (((
sockaddr_ö6
 *Ë
ª•
->
ai_addr
)->
sö6_p‹t
);

2739 
	`DBG
 (
DBG_DBG
, "do_bödögs: [%d] sockë (Ëusög IPv%d\n", 
i
, (
Ámûy
 =
AF_INET
) ? 4 : 6);

2740 i‡((
fd
 = 
	`sockë
 (
ª•
->
ai_Ámûy
, 
SOCK_STREAM
, 0)) < 0)

2742 
	`DBG
 (
DBG_ERR
, "do_bödögs: [%d] sockë faûed: %s\n", 
i
, 
	`°ªº‹
 (
î∫o
));

2747 
	`DBG
 (
DBG_DBG
, "do_bödögs: [%d] sësock›à()\n", 
i
);

2748 i‡(
	`£tsock›t
 (
fd
, 
SOL_SOCKET
, 
SO_REUSEADDR
, &
⁄
,  (on)))

2749 
	`DBG
 (
DBG_ERR
, "do_bödögs: [%d] faûedÅÿpuàsockë i¿SO_REUSEADDR modê(%s)\n", 
i
, 
	`°ªº‹
 (
î∫o
));

2752 
	`DBG
 (
DBG_DBG
, "do_bödögs: [%d] böd (Ëtÿp‹à%d\n", 
i
, 
ß√_p‹t
);

2753 i‡(
	`böd
 (
fd
, 
ª•
->
ai_addr
,Ñe•->
ai_addæí
) < 0)

2763 
	`DBG
 (
DBG_WARN
, "do_bödögs: [%d] böd faûed: %s\n", 
i
, 
	`°ªº‹
 (
î∫o
));

2765 
	`˛o£
 (
fd
);

2770 
	`DBG
 (
DBG_DBG
, "do_bödögs: [%d]Üi°í ()\n", 
i
);

2771 i‡(
	`li°í
 (
fd
, 1) < 0)

2773 
	`DBG
 (
DBG_ERR
, "do_bödögs: [%d]Üi°í faûed: %s\n", 
i
, 
	`°ªº‹
 (
î∫o
));

2775 
	`˛o£
 (
fd
);

2780 
fdp
->
fd
 = fd;

2781 
fdp
->
evíts
 = 
POLLIN
;

2783 (*
nfds
)++;

2784 
fdp
++;

2787 *
fds
 = 
fdp
;

2788 
	}
}

2791 
	$do_bödögs
 (*
nfds
, 
pﬁlfd
 **
fds
)

2793 
addröfo
 *
ªs
;

2794 
addröfo
 *
ª•
;

2795 
addröfo
 
höts
;

2796 
pﬁlfd
 *
fdp
;

2797 
îr
;

2799 
	`DBG
 (
DBG_DBG
, "do_bödögs:ÅryögÅÿgëÖ‹àf‹ sîvi˚ \"%s\" (gëaddröfo)\n", 
SANED_SERVICE_NAME
);

2801 
	`mem£t
 (&
höts
, 0,  (
addröfo
));

2803 
höts
.
ai_Ámûy
 = 
PF_UNSPEC
;

2804 
höts
.
ai_Êags
 = 
AI_PASSIVE
;

2805 
höts
.
ai_sockty≥
 = 
SOCK_STREAM
;

2807 
îr
 = 
	`gëaddröfo
 (
NULL
, 
SANED_SERVICE_NAME
, &
höts
, &
ªs
);

2808 i‡(
îr
)

2810 
	`DBG
 (
DBG_WARN
, "do_bödögs: \" %†\" sîvi˚ unknow¿⁄ you∏ho°; you shouldádd\n", 
SANED_SERVICE_NAME
);

2811 
	`DBG
 (
DBG_WARN
, "do_bödögs: %†%d/t˝ s™ed # SANEÇëw‹k sˇ¬î d´m⁄\n", 
SANED_SERVICE_NAME
, 
SANED_SERVICE_PORT
);

2812 
	`DBG
 (
DBG_WARN
, "do_bindings:Åo your /etc/services file (orÉquivalent). Proceedingányway.\n");

2813 
îr
 = 
	`gëaddröfo
 (
NULL
, 
SANED_SERVICE_PORT_S
, &
höts
, &
ªs
);

2814 i‡(
îr
)

2816 
	`DBG
 (
DBG_ERR
, "do_bödögs: gëaddröfo(ËÁûedÉví wôhÇumîi¯p‹t: %s\n", 
	`gai_°ªº‹
 (
îr
));

2817 
	`baû_out
 (1);

2821 
ª•
 = 
ªs
, *
nfds
 = 0;Ñe• !
NULL
;Ñe• =Ñe•->
ai_√xt
, (*nfds)++)

2824 *
fds
 = 
	`mÆloc
 (*
nfds
 *  (
pﬁlfd
));

2826 i‡(
fds
 =
NULL
)

2828 
	`DBG
 (
DBG_ERR
, "do_bindings:ÇotÉnough memory for fds\n");

2829 
	`‰ìaddröfo
 (
ªs
);

2830 
	`baû_out
 (1);

2833 
fdp
 = *
fds
;

2834 *
nfds
 = 0;

2837 #ifde‡
ENABLE_IPV6


2838 
	`do_bödögs_Ámûy
 (
AF_INET6
, 
nfds
, &
fdp
, 
ªs
);

2840 
	`do_bödögs_Ámûy
 (
AF_INET
, 
nfds
, &
fdp
, 
ªs
);

2842 
ª•
 = 
NULL
;

2843 
	`‰ìaddröfo
 (
ªs
);

2845 i‡(*
nfds
 <= 0)

2847 
	`DBG
 (
DBG_ERR
, "do_bindings: couldn't bindánáddress. Exiting.\n");

2848 
	`baû_out
 (1);

2850 
	}
}

2855 
	$do_bödögs
 (*
nfds
, 
pﬁlfd
 **
fds
)

2857 
sockaddr_ö
 
sö
;

2858 
£rvít
 *
£rv
;

2859 
p‹t
;

2860 
fd
 = -1;

2861 
⁄
 = 1;

2863 
	`DBG
 (
DBG_DBG
, "do_bödögs:ÅryögÅÿgëÖ‹àf‹ sîvi˚ \"%s\" (gë£rvby«me)\n", 
SANED_SERVICE_NAME
);

2864 
£rv
 = 
	`gë£rvby«me
 (
SANED_SERVICE_NAME
, "tcp");

2866 i‡(
£rv
)

2868 
p‹t
 = 
£rv
->
s_p‹t
;

2869 
	`DBG
 (
DBG_MSG
, "do_bödögs:Ö‹ài†%d\n", 
	`¡ohs
 (
p‹t
));

2873 
p‹t
 = 
	`ht⁄s
 (
SANED_SERVICE_PORT
);

2874 
	`DBG
 (
DBG_WARN
, "do_bödögs: \"%s\" sîvi˚ unknow¿⁄ you∏ho°; you shouldádd\n", 
SANED_SERVICE_NAME
);

2875 
	`DBG
 (
DBG_WARN
, "do_bödögs: %†%d/t˝ s™ed # SANEÇëw‹k sˇ¬î d´m⁄\n", 
SANED_SERVICE_NAME
, 
SANED_SERVICE_PORT
);

2876 
	`DBG
 (
DBG_WARN
, "do_bindings:Åo your /etc/services file (orÉquivalent). Proceedingányway.\n");

2879 *
nfds
 = 1;

2880 *
fds
 = 
	`mÆloc
 (*
nfds
 *  (
pﬁlfd
));

2882 i‡(
fds
 =
NULL
)

2884 
	`DBG
 (
DBG_ERR
, "do_bindings:ÇotÉnough memory for fds\n");

2885 
	`baû_out
 (1);

2888 
	`mem£t
 (&
sö
, 0,  (sin));

2890 
sö
.
sö_Ámûy
 = 
AF_INET
;

2891 
sö
.
sö_addr
.
s_addr
 = 
INADDR_ANY
;

2892 
sö
.
sö_p‹t
 = 
p‹t
;

2894 
	`DBG
 (
DBG_DBG
, "do_bindings: socket ()\n");

2895 
fd
 = 
	`sockë
 (
AF_INET
, 
SOCK_STREAM
, 0);

2897 
	`DBG
 (
DBG_DBG
, "do_bindings: setsockopt ()\n");

2898 i‡(
	`£tsock›t
 (
fd
, 
SOL_SOCKET
, 
SO_REUSEADDR
, &
⁄
,  (on)))

2899 
	`DBG
 (
DBG_ERR
, "do_bödögs: faûedÅÿpuàsockë i¿SO_REUSEADDR modê(%s)", 
	`°ªº‹
 (
î∫o
));

2901 
	`DBG
 (
DBG_DBG
, "do_bindings: bind ()\n");

2902 i‡(
	`böd
 (
fd
, (
sockaddr
 *Ë&
sö
,  (sin)) < 0)

2904 
	`DBG
 (
DBG_ERR
, "do_bödögs: böd faûed: %s", 
	`°ªº‹
 (
î∫o
));

2905 
	`baû_out
 (1);

2908 
	`DBG
 (
DBG_DBG
, "do_bindings:Üisten ()\n");

2909 i‡(
	`li°í
 (
fd
, 1) < 0)

2911 
	`DBG
 (
DBG_ERR
, "do_bödögs:Üi°í faûed: %s", 
	`°ªº‹
 (
î∫o
));

2912 
	`baû_out
 (1);

2915 (*
fds
)->
fd
 = fd;

2916 (*
fds
)->
evíts
 = 
POLLIN
;

2917 
	}
}

2923 
	$run_°™dÆ⁄e
 (
¨gc
, **
¨gv
)

2925 
pﬁlfd
 *
fds
 = 
NULL
;

2926 
pﬁlfd
 *
fdp
 = 
NULL
;

2927 
nfds
;

2928 
fd
 = -1;

2929 
i
;

2930 
ªt
;

2932 
uid_t
 
ru«s_uid
 = 0;

2933 
gid_t
 
ru«s_gid
 = 0;

2934 
∑sswd
 *
pwít
;

2935 
gid_t
 *
gΩli°
 = 
NULL
;

2936 
group
 *
gΩ
;

2937 
ngroups
 = 0;

2938 
FILE
 *
pidfûe
;

2940 
	`do_bödögs
 (&
nfds
, &
fds
);

2942 i‡(
run_mode
 !
SANED_RUN_DEBUG
)

2944 i‡(
¨gc
 > 2)

2946 
pwít
 = 
	`gëpw«m
(
¨gv
[2]);

2948 i‡(
pwít
 =
NULL
)

2950 
	`DBG
 (
DBG_ERR
, "FATAL ERROR: u£∏%†nŸ found o¿sy°em\n", 
¨gv
[2]);

2951 
	`baû_out
 (1);

2954 
ru«s_uid
 = 
pwít
->
pw_uid
;

2955 
ru«s_gid
 = 
pwít
->
pw_gid
;

2958 
gΩli°
 = (
gid_t
 *)
	`mÆloc
((gid_t));

2960 i‡(
gΩli°
 =
NULL
)

2962 
	`DBG
 (
DBG_ERR
, "FATAL ERROR: cannotállocate memory for groupÜist\n");

2964 
	`exô
 (1);

2967 
ngroups
 = 1;

2968 
gΩli°
[0] = 
ru«s_gid
;

2970 
	`£tgª¡
();

2971 (
gΩ
 = 
	`gëgª¡
()Ë!
NULL
)

2973 
i
 = 0;

2976 i‡(
gΩ
->
gr_gid
 =
ru«s_gid
)

2979 
gΩ
->
gr_mem
[
i
])

2981 i‡(
	`°rcmp
(
gΩ
->
gr_mem
[
i
], 
¨gv
[2]) == 0)

2983 
√ed_to_add
 = 1, 
j
;

2986 
j
 = 0; j < 
ngroups
; j++)

2988 i‡(
gΩ
->
gr_gid
 =
gΩli°
[
i
])

2989 
√ed_to_add
 = 0;

2991 i‡(
√ed_to_add
)

2993 
gΩli°
 = (
gid_t
 *)
	`ªÆloc
(grplist,

2994 (
gid_t
)*
ngroups
+1);

2995 i‡(
gΩli°
 =
NULL
)

2997 
	`DBG
 (
DBG_ERR
, "FATAL ERROR: cannotÑeallocate memory for groupÜist\n");

2999 
	`exô
 (1);

3001 
gΩli°
[
ngroups
++] = 
gΩ
->
gr_gid
;

3004 
i
++;

3007 
	`ídgª¡
();

3010 
	`DBG
 (
DBG_MSG
, "run_standalone: daemonizingÇow\n");

3012 
fd
 = 
	`›í
 ("/dev/nuŒ", 
O_RDWR
);

3013 i‡(
fd
 < 0)

3015 
	`DBG
 (
DBG_ERR
, "FATAL ERROR: c™nŸ o≥¿/dev/nuŒ: %s\n", 
	`°ªº‹
 (
î∫o
));

3016 
	`exô
 (1);

3019 
ªt
 = 
	`f‹k
 ();

3020 i‡(
ªt
 > 0)

3022 
	`_exô
 (0);

3024 i‡(
ªt
 < 0)

3026 
	`DBG
 (
DBG_ERR
, "FATAL ERROR: f‹k faûed: %s\n", 
	`°ªº‹
 (
î∫o
));

3027 
	`exô
 (1);

3030 
	`DBG
 (
DBG_WARN
, "Now daemonized\n");

3033 
pidfûe
 = 
	`f›í
 (
SANED_PID_FILE
, "w");

3034 i‡(
pidfûe
)

3036 
	`Ârötf
 (
pidfûe
, "%d", 
	`gëpid
());

3037 
	`f˛o£
 (
pidfûe
);

3040 
	`DBG
 (
DBG_ERR
, "CouldÇŸ wrôêPID fûe: %s\n", 
	`°ªº‹
 (
î∫o
));

3042 
	`chdú
 ("/");

3044 
	`dup2
 (
fd
, 
STDIN_FILENO
);

3045 
	`dup2
 (
fd
, 
STDOUT_FILENO
);

3046 
	`dup2
 (
fd
, 
STDERR_FILENO
);

3048 
	`˛o£
 (
fd
);

3050 
	`£tsid
 ();

3053 i‡(
ru«s_uid
 > 0)

3055 
ªt
 = 
	`£tgroups
(
ngroups
, 
gΩli°
);

3056 i‡(
ªt
 < 0)

3058 
	`DBG
 (
DBG_ERR
, "FATAL ERROR: couldÇŸ së grou∞li°: %s\n", 
	`°ªº‹
(
î∫o
));

3060 
	`exô
 (1);

3063 
	`‰ì
(
gΩli°
);

3065 
ªt
 = 
	`£ãgid
 (
ru«s_gid
);

3066 i‡(
ªt
 < 0)

3068 
	`DBG
 (
DBG_ERR
, "FATAL ERROR: sëegidÅÿgid %d faûed: %s\n", 
ru«s_gid
, 
	`°ªº‹
 (
î∫o
));

3070 
	`exô
 (1);

3073 
ªt
 = 
	`£ãuid
 (
ru«s_uid
);

3074 i‡(
ªt
 < 0)

3076 
	`DBG
 (
DBG_ERR
, "FATAL ERROR: sëeuidÅÿuid %d faûed: %s\n", 
ru«s_uid
, 
	`°ªº‹
 (
î∫o
));

3078 
	`exô
 (1);

3081 
	`DBG
 (
DBG_WARN
, "Dr›≥dÖrivûege†tÿuid %d gid %d\n", 
ru«s_uid
, 
ru«s_gid
);

3084 
	`sig«l
(
SIGINT
, 
sig_öt_ãrm_h™dÀr
);

3085 
	`sig«l
(
SIGTERM
, 
sig_öt_ãrm_h™dÀr
);

3088 #ifde‡
WITH_AVAHI


3089 
	`DBG
 (
DBG_INFO
, "run_standalone: spawning AvahiÖrocess\n");

3090 
	`ß√d_avahi
 (
fds
, 
nfds
);

3095 
	`DBG
 (
DBG_MSG
, "run_standalone: waiting for control connection\n");

3099 
ªt
 = 
	`pﬁl
 (
fds
, 
nfds
, 500);

3100 i‡(
ªt
 < 0)

3102 i‡(
î∫o
 =
EINTR
)

3106 
	`DBG
 (
DBG_ERR
, "run_°™dÆ⁄e:Öﬁ»Áûed: %s\n", 
	`°ªº‹
 (
î∫o
));

3107 
	`‰ì
 (
fds
);

3108 
	`baû_out
 (1);

3113 
	`waô_chûd
 (-1, 
NULL
, 
WNOHANG
) > 0)

3116 i‡(
ªt
 == 0)

3119 
i
 = 0, 
fdp
 = 
fds
; i < 
nfds
; i++, fdp++)

3122 i‡(
fdp
->
ªvíts
 & (
POLLERR
 | 
POLLHUP
 | 
POLLNVAL
))

3124 
i
 = 0, 
fdp
 = 
fds
; i < 
nfds
; i++, fdp++)

3125 
	`˛o£
 (
fdp
->
fd
);

3127 
	`‰ì
 (
fds
);

3129 
	`DBG
 (
DBG_WARN
, "run_standalone: invalid fd in set,áttemptingÅoÑe-bind\n");

3132 
	`do_bödögs
 (&
nfds
, &
fds
);

3136 i‡(! (
fdp
->
ªvíts
 & 
POLLIN
))

3139 
fd
 = 
	`ac˚±
 (
fdp
->fd, 0, 0);

3140 i‡(
fd
 < 0)

3142 
	`DBG
 (
DBG_ERR
, "run_°™dÆ⁄e:ác˚± faûed: %s", 
	`°ªº‹
 (
î∫o
));

3146 i‡(
run_mode
 =
SANED_RUN_DEBUG
)

3149 
	`h™dÀ_˛õ¡
 (
fd
);

3152 i‡(
run_mode
 =
SANED_RUN_DEBUG
)

3156 
i
 = 0, 
fdp
 = 
fds
; i < 
nfds
; i++, fdp++)

3157 
	`˛o£
 (
fdp
->
fd
);

3159 
	`‰ì
 (
fds
);

3161 i‡(
run_mode
 =
SANED_RUN_DEBUG
)

3163 i‡(
fd
 > 0)

3164 
	`h™dÀ_c⁄√˘i⁄
 (
fd
);

3166 
	`baû_out
(0);

3168 
	}
}

3172 
	$run_öëd
 (
¨gc
, **
¨gv
)

3174 
fd
 = 1;

3175 
dave_nuŒ
;

3183 
fd
 = 
	`dup
 (fd);

3185 i‡(
fd
 == -1)

3187 
	`DBG
 (
DBG_ERR
, "run_öëd: du∂iˇtög fd faûed: %s", 
	`°ªº‹
 (
î∫o
));

3191 
fd
 < 3);

3194 
dave_nuŒ
 = 
	`›í
 ("/dev/nuŒ", 
O_RDWR
);

3195 i‡(
dave_nuŒ
 < 0)

3197 
	`DBG
 (
DBG_ERR
, "run_öëd: couldÇŸ o≥¿/dev/nuŒ: %s", 
	`°ªº‹
 (
î∫o
));

3201 
	`˛o£
 (
STDIN_FILENO
);

3202 
	`˛o£
 (
STDOUT_FILENO
);

3203 
	`˛o£
 (
STDERR_FILENO
);

3205 
	`dup2
 (
dave_nuŒ
, 
STDIN_FILENO
);

3206 
	`dup2
 (
dave_nuŒ
, 
STDOUT_FILENO
);

3207 
	`dup2
 (
dave_nuŒ
, 
STDERR_FILENO
);

3209 
	`˛o£
 (
dave_nuŒ
);

3211 #i‚de‡
HAVE_OS2_H


3213 
¨gc
 =árgc;

3214 
¨gv
 =árgv;

3220 i‡(
¨gc
 == 2)

3222 
fd
 = 
	`_impsockh™dÀ
 (
	`©oi
 (
¨gv
[1]), 0);

3223 i‡(
fd
 == -1)

3224 
	`≥º‹
 ("impsockhandle");

3228 
	`h™dÀ_c⁄√˘i⁄
(
fd
);

3229 
	}
}

3233 
	$maö
 (
¨gc
, *
¨gv
[])

3235 
debug
 = 
DBG_WARN
;

3237 
¥og_«me
 = 
	`°ºchr
 (
¨gv
[0], '/');

3238 i‡(
¥og_«me
)

3239 ++
¥og_«me
;

3241 
¥og_«me
 = 
¨gv
[0];

3243 
numchûdªn
 = 0;

3244 
run_mode
 = 
SANED_RUN_INETD
;

3246 i‡(
¨gc
 >= 2)

3248 i‡(
	`°∫cmp
 (
¨gv
[1], "-a", 2) == 0)

3249 
run_mode
 = 
SANED_RUN_ALONE
;

3250 i‡(
	`°∫cmp
 (
¨gv
[1], "-d", 2) == 0)

3252 
run_mode
 = 
SANED_RUN_DEBUG
;

3253 
log_to_sy¶og
 = 
SANE_FALSE
;

3255 i‡(
	`°∫cmp
 (
¨gv
[1], "-s", 2) == 0)

3256 
run_mode
 = 
SANED_RUN_DEBUG
;

3259 i‡(
run_mode
 =
SANED_RUN_DEBUG
)

3261 i‡(
¨gv
[1][2])

3262 
debug
 = 
	`©oi
 (
¨gv
[1] + 2);

3264 
	`DBG
 (
DBG_WARN
, "maö: sèπög debug modê÷evñ %d)\n", 
debug
);

3267 i‡(
log_to_sy¶og
)

3268 
	`›ílog
 ("ß√d", 
LOG_PID
 | 
LOG_CONS
, 
LOG_DAEMON
);

3270 
	`ªad_c⁄fig
 ();

3272 
byã_‹dî
.
w
 = 0;

3273 
byã_‹dî
.
ch
 = 1;

3275 
	`ß√i_w_öô
 (&
wúe
, 
ß√i_codec_bö_öô
);

3276 
wúe
.
io
.
ªad
 =Ñead;

3277 
wúe
.
io
.
wrôe
 = write;

3280 #ifde‡
SANED_USES_AF_INDEP


3281 #ifde‡
ENABLE_IPV6


3282 
	`DBG
 (
DBG_WARN
, "ß√d (AF-ödï+IPv6Ë‰om %†°¨tög up\n", 
PACKAGE_STRING
);

3284 
	`DBG
 (
DBG_WARN
, "ß√d (AF-ödïË‰om %†°¨tög up\n", 
PACKAGE_STRING
);

3287 
	`DBG
 (
DBG_WARN
, "ß√d from %†ªady\n", 
PACKAGE_STRING
);

3290 i‡((
run_mode
 =
SANED_RUN_ALONE
Ë|| (run_modê=
SANED_RUN_DEBUG
))

3292 
	`run_°™dÆ⁄e
(
¨gc
, 
¨gv
);

3296 
	`run_öëd
(
¨gc
, 
¨gv
);

3299 
	`DBG
 (
DBG_WARN
, "sanedÉxiting\n");

3302 
	}
}

	@scanimage.c

25 #ifde‡
_AIX


26 
	~"../ö˛ude/œŒoˇ.h
"

29 
	~"../ö˛ude/ß√/c⁄fig.h
"

30 
	~"../ö˛ude/œŒoˇ.h
"

32 
	~<as£π.h
>

33 
	~"lgë›t.h
"

34 
	~<sig«l.h
>

35 
	~<°dio.h
>

36 
	~<°dlib.h
>

37 
	~<°rög.h
>

38 
	~<uni°d.h
>

39 
	~<°d¨g.h
>

41 
	~<sys/ty≥s.h
>

42 
	~<sys/°©.h
>

44 
	~"../ö˛ude/_°döt.h
"

46 
	~"../ö˛ude/ß√/ß√.h
"

47 
	~"../ö˛ude/ß√/ß√i.h
"

48 
	~"../ö˛ude/ß√/ß√›ts.h
"

50 
	~"°iff.h
"

52 
	~"../ö˛ude/md5.h
"

54 #i‚de‡
PATH_MAX


55 
	#PATH_MAX
 1024

	)

58 #i‚de‡
HAVE_ATEXIT


59 
	#©exô
(
func
Ë
	`⁄_exô
(func, 0Ë

	)

64 
uöt8_t
 *
	md©a
;

65 
	mwidth
;

66 
	mheight
;

67 
	mx
;

68 
	my
;

70 
	tImage
;

72 
	#OPTION_FORMAT
 1001

	)

73 
	#OPTION_MD5
 1002

	)

74 
	#OPTION_BATCH_COUNT
 1003

	)

75 
	#OPTION_BATCH_START_AT
 1004

	)

76 
	#OPTION_BATCH_DOUBLE
 1005

	)

77 
	#OPTION_BATCH_INCREMENT
 1006

	)

78 
	#OPTION_BATCH_PROMPT
 1007

	)

80 
	#BATCH_COUNT_UNLIMITED
 -1

	)

82 
›ti⁄
 
	gbasic_›ti⁄s
[] = {

83 {"devi˚-«me", 
ªquúed_¨gumít
, 
NULL
, 'd'},

84 {"li°-devi˚s", 
no_¨gumít
, 
NULL
, 'L'},

85 {"f‹m©ãd-devi˚-li°", 
ªquúed_¨gumít
, 
NULL
, 'f'},

86 {"hñp", 
no_¨gumít
, 
NULL
, 'h'},

87 {"vîbo£", 
no_¨gumít
, 
NULL
, 'v'},

88 {"¥ogªss", 
no_¨gumít
, 
NULL
, 'p'},

89 {"ã°", 
no_¨gumít
, 
NULL
, 'T'},

90 {"Æl-›ti⁄s", 
no_¨gumít
, 
NULL
, 'A'},

91 {"vîsi⁄", 
no_¨gumít
, 
NULL
, 'V'},

92 {"buf„r-size", 
›ti⁄Æ_¨gumít
, 
NULL
, 'B'},

93 {"b©ch", 
›ti⁄Æ_¨gumít
, 
NULL
, 'b'},

94 {"b©ch-cou¡", 
ªquúed_¨gumít
, 
NULL
, 
OPTION_BATCH_COUNT
},

95 {"b©ch-°¨t", 
ªquúed_¨gumít
, 
NULL
, 
OPTION_BATCH_START_AT
},

96 {"b©ch-doubÀ", 
no_¨gumít
, 
NULL
, 
OPTION_BATCH_DOUBLE
},

97 {"b©ch-ö¸emít", 
ªquúed_¨gumít
, 
NULL
, 
OPTION_BATCH_INCREMENT
},

98 {"b©ch-¥om±", 
no_¨gumít
, 
NULL
, 
OPTION_BATCH_PROMPT
},

99 {"f‹m©", 
ªquúed_¨gumít
, 
NULL
, 
OPTION_FORMAT
},

100 {"ac˚±-md5-⁄ly", 
no_¨gumít
, 
NULL
, 
OPTION_MD5
},

101 {"icc-¥ofûe", 
ªquúed_¨gumít
, 
NULL
, 'i'},

102 {"d⁄t-sˇn", 
no_¨gumít
, 
NULL
, 'n'},

103 {0, 0, 
NULL
, 0}

106 
	#OUTPUT_PNM
 0

	)

107 
	#OUTPUT_TIFF
 1

	)

109 
	#BASE_OPTSTRING
 "d:hi:Lf:B::nvVTAbp"

	)

110 
	#STRIP_HEIGHT
 256

	)

112 
›ti⁄
 *
	gÆl_›ti⁄s
;

113 
	g›ti⁄_numbî_Àn
;

114 *
	g›ti⁄_numbî
;

115 
SANE_H™dÀ
 
	gdevi˚
;

116 
	gvîbo£
;

117 
	g¥ogªss
 = 0;

118 
	gã°
;

119 
	gÆl
;

120 
	gouçut_f‹m©
 = 
OUTPUT_PNM
;

121 
	ghñp
;

122 
	gd⁄t_sˇn
 = 0;

123 c⁄° *
	g¥og_«me
;

124 
	gªsﬁuti⁄_›töd
 = -1, 
	gªsﬁuti⁄_vÆue
 = 0;

127 
SANE_O±i⁄_Des¸ùt‹
 
	gwödow_›ti⁄
[4];

128 
	gwödow
[4];

129 
SANE_W‹d
 
	gwödow_vÆ
[2];

130 
	gwödow_vÆ_u£r
[2];

132 
	gac˚±_⁄ly_md5_auth
 = 0;

133 c⁄° *
	gicc_¥ofûe
 = 
NULL
;

135 
„tch_›ti⁄s
 (
SANE_Devi˚
 * 
devi˚
);

136 
sˇnimage_exô
 ();

138 
SANE_W‹d
 
	gé_x
 = 0;

139 
SANE_W‹d
 
	gé_y
 = 0;

140 
SANE_W‹d
 
	gbr_x
 = 0;

141 
SANE_W‹d
 
	gbr_y
 = 0;

142 
SANE_Byã
 *
	gbuf„r
;

143 
size_t
 
	gbuf„r_size
;

147 
	$auth_ˇŒback
 (
SANE_Såög_C⁄°
 
ªsour˚
,

148 
SANE_Ch¨
 * 
u£∫ame
, SANE_Ch¨ * 
∑ssw‹d
)

150 
tmp
[3 + 128 + 
SANE_MAX_USERNAME_LEN
 + 
SANE_MAX_PASSWORD_LEN
], *
wùe
;

151 
md5dige°
[16];

152 
md5mode
 = 0, 
Àn
, 
quîy_u£r
 = 1;

153 
FILE
 *
∑ss_fûe
;

154 
°©
 
°©_buf
;

156 *
tmp
 = 0;

158 i‡(
	`gëív
 ("HOME"Ë!
NULL
)

160 i‡(
	`°æí
 (
	`gëív
 ("HOME")) < 500)

162 
	`•rötf
 (
tmp
, "%s/.ß√/∑ss", 
	`gëív
 ("HOME"));

166 i‡((
	`°æí
 (
tmp
Ë> 0Ë&& (
	`°©
 (tmp, &
°©_buf
) == 0))

169 i‡((
°©_buf
.
°_mode
 & 63) != 0)

171 
	`Ârötf
 (
°dîr
, "%s has wrongÖermissions (useátÜeast 0600)\n",

172 
tmp
);

177 i‡((
∑ss_fûe
 = 
	`f›í
 (
tmp
, "r")Ë!
NULL
)

180 i‡(
	`°r°r
 (
ªsour˚
, "$MD5$"Ë!
NULL
)

181 
Àn
 = (
	`°r°r
 (
ªsour˚
, "$MD5$") -Ñesource);

183 
Àn
 = 
	`°æí
 (
ªsour˚
);

185 
	`fgës
 (
tmp
, —mp), 
∑ss_fûe
))

188 i‡((
	`°æí
 (
tmp
) > 0) && (tmp[strlen (tmp) - 1] == '\n'))

189 
tmp
[
	`°æí
 (tmp) - 1] = 0;

190 i‡((
	`°æí
 (
tmp
) > 0) && (tmp[strlen (tmp) - 1] == '\r'))

191 
tmp
[
	`°æí
 (tmp) - 1] = 0;

193 i‡(
	`°rchr
 (
tmp
, ':'Ë!
NULL
)

196 i‡(
	`°rchr
 (°rch∏(
tmp
, ':'Ë+ 1, ':'Ë!
NULL
)

199 i‡((
°∫cmp


200 (
	`°rchr
 (°rch∏(
tmp
, ':') + 1, ':') + 1,

201 
ªsour˚
, 
Àn
) == 0)

203 ((Ë
°æí


204 (
	`°rchr
 (°rch∏(
tmp
, ':') + 1, ':') + 1) ==

205 
Àn
))

208 i‡((
	`°rchr
 (
tmp
, ':') -Åmp) <

209 
SANE_MAX_USERNAME_LEN
)

212 i‡((
	`°rchr
 (°rch∏(
tmp
, ':') + 1, ':') -

213 (
	`°rchr
 (
tmp
, ':') + 1)) <

214 
SANE_MAX_PASSWORD_LEN
)

217 
	`°∫˝y
 (
u£∫ame
, 
tmp
,

218 
	`°rchr
 (
tmp
, ':') -Åmp);

220 
u£∫ame
[
	`°rchr
 (
tmp
, ':') -Åmp] = 0;

222 
	`°∫˝y
 (
∑ssw‹d
,

223 
	`°rchr
 (
tmp
, ':') + 1,

224 
	`°rchr
 (°rch∏(
tmp
, ':') + 1,

226 (
	`°rchr
 (
tmp
, ':') + 1));

227 
∑ssw‹d
[
°rchr


228 (
	`°rchr
 (
tmp
, ':') + 1,

229 ':'Ë- (
	`°rchr
 (
tmp
,

233 
quîy_u£r
 = 0;

243 
	`f˛o£
 (
∑ss_fûe
);

248 i‡(
	`°r°r
 (
ªsour˚
, "$MD5$"Ë!
NULL
)

250 
md5mode
 = 1;

251 
Àn
 = (
	`°r°r
 (
ªsour˚
, "$MD5$") -Ñesource);

252 i‡(
quîy_u£r
 == 1)

253 
	`Ârötf
 (
°dîr
, "AuthentificationÑequired forÑesource %*.*s. "

254 "E¡î u£∫ame: ", 
Àn
,Üí, 
ªsour˚
);

259 i‡(
ac˚±_⁄ly_md5_auth
 != 0)

261 
	`Ârötf
 (
°dîr
, "ERROR: backendÑequestedÖlain-textÖassword\n");

266 
	`Ârötf
 (
°dîr
,

268 
quîy_u£r
 = 1;

271 i‡(
quîy_u£r
 == 1)

272 
	`Ârötf
 (
°dîr
,

274 
ªsour˚
);

277 i‡(
quîy_u£r
 == 1)

278 
	`fgës
 (
u£∫ame
, 
SANE_MAX_USERNAME_LEN
, 
°dö
);

280 i‡((
	`°æí
 (
u£∫ame
)) && (username[strlen (username) - 1] == '\n'))

281 
u£∫ame
[
	`°æí
 (username) - 1] = 0;

283 i‡(
quîy_u£r
 == 1)

285 #ifde‡
HAVE_GETPASS


286 
	`°r˝y
 (
∑ssw‹d
, (
wùe
 = 
	`gë∑ss
 ("EnterÖassword: ")));

287 
	`mem£t
 (
wùe
, 0, 
	`°æí
 (
∑ssw‹d
));

289 
	`¥ötf
("OS hasÇo getpass(). User Queries willÇot work\n");

293 i‡(
md5mode
)

296 
	`•rötf
 (
tmp
, "%.128s%.*s", (
	`°r°r
 (
ªsour˚
, "$MD5$")) + 5,

297 
SANE_MAX_PASSWORD_LEN
 - 1, 
∑ssw‹d
);

299 
	`md5_buf„r
 (
tmp
, 
	`°æí
 (tmp), 
md5dige°
);

301 
	`mem£t
 (
∑ssw‹d
, 0, 
SANE_MAX_PASSWORD_LEN
);

303 
	`•rötf
 (
∑ssw‹d
, "$MD5$%02x%02x%02x%02x%02x%02x%02x%02x"

305 
md5dige°
[0], md5digest[1],

306 
md5dige°
[2], md5digest[3],

307 
md5dige°
[4], md5digest[5],

308 
md5dige°
[6], md5digest[7],

309 
md5dige°
[8], md5digest[9],

310 
md5dige°
[10], md5digest[11],

311 
md5dige°
[12], md5digest[13], md5digest[14], md5digest[15]);

313 
	}
}

315 
RETSIGTYPE


316 
	$sigh™dÀr
 (
signum
)

318 
SANE_Boﬁ
 
fú°_time
 = 
SANE_TRUE
;

320 i‡(
devi˚
)

322 
	`Ârötf
 (
°dîr
, "%s:Ñe˚ived sig«»%d\n", 
¥og_«me
, 
signum
);

323 i‡(
fú°_time
)

325 
fú°_time
 = 
SANE_FALSE
;

326 
	`Ârötf
 (
°dîr
, "%s:ÅryögÅÿ°› sˇ¬î\n", 
¥og_«me
);

327 
	`ß√_ˇn˚l
 (
devi˚
);

331 
	`Ârötf
 (
°dîr
, "%s:áb‹tög\n", 
¥og_«me
);

332 
	`_exô
 (0);

335 
	}
}

338 
	$¥öt_unô
 (
SANE_Unô
 
unô
)

340 
unô
)

342 
SANE_UNIT_NONE
:

344 
SANE_UNIT_PIXEL
:

345 
	`Âuts
 ("≥l", 
°dout
);

347 
SANE_UNIT_BIT
:

348 
	`Âuts
 ("bô", 
°dout
);

350 
SANE_UNIT_MM
:

351 
	`Âuts
 ("mm", 
°dout
);

353 
SANE_UNIT_DPI
:

354 
	`Âuts
 ("dpi", 
°dout
);

356 
SANE_UNIT_PERCENT
:

357 
	`Âutc
 ('%', 
°dout
);

359 
SANE_UNIT_MICROSECOND
:

360 
	`Âuts
 ("us", 
°dout
);

363 
	}
}

366 
	$¥öt_›ti⁄
 (
SANE_Devi˚
 * 
devi˚
, 
›t_num
, c⁄° 
SANE_O±i⁄_Des¸ùt‹
 *
›t
)

368 c⁄° *
°r
, *
œ°_bªak
, *
°¨t
;

369 
SANE_Boﬁ
 
nŸ_fú°
 = 
SANE_FALSE
;

370 
i
, 
cﬁumn
;

372 i‡(
›t
->
ty≥
 =
SANE_TYPE_GROUP
){

373 
	`¥ötf
 (" %s:\n", 
›t
->
tôÀ
);

378 if(
›t
->
ˇp
 & 
SANE_CAP_SOFT_SELECT
 && o±->ˇ∞& 
SANE_CAP_HARD_SELECT
){

379 
	`Ârötf
 (
°dîr
, "%s: invÆid o±i⁄ c≠s, SS+HS\n", 
¥og_«me
);

384 if(
›t
->
ˇp
 & 
SANE_CAP_SOFT_SELECT
 && !(›t->ˇ∞& 
SANE_CAP_SOFT_DETECT
)){

385 
	`Ârötf
 (
°dîr
, "%s: invÆid o±i⁄ c≠s, SS!SD\n", 
¥og_«me
);

395 if(!(
›t
->
ˇp
 &

396 (
SANE_CAP_SOFT_SELECT
 | 
SANE_CAP_HARD_SELECT
 | 
SANE_CAP_SOFT_DETECT
)

402 i‡–!
	`°rcmp
 (
›t
->
«me
, "x")

403 || !
	`°rcmp
 (
›t
->
«me
, "y")

404 || !
	`°rcmp
 (
›t
->
«me
, "t")

405 || !
	`°rcmp
 (
›t
->
«me
, "l"))

406 
	`¥ötf
 (" -%s", 
›t
->
«me
);

408 
	`¥ötf
 (" --%s", 
›t
->
«me
);

411 i‡(
›t
->
ty≥
 =
SANE_TYPE_BOOL
)

413 
	`Âuts
 ("[=(", 
°dout
);

414 i‡(
›t
->
ˇp
 & 
SANE_CAP_AUTOMATIC
)

415 
	`Âuts
 ("auto|", 
°dout
);

416 
	`Âuts
 ("yes|no)]", 
°dout
);

418 i‡(
›t
->
ty≥
 !
SANE_TYPE_BUTTON
)

420 
	`Âutc
 (' ', 
°dout
);

421 i‡(
›t
->
ˇp
 & 
SANE_CAP_AUTOMATIC
)

423 
	`Âuts
 ("auto|", 
°dout
);

424 
nŸ_fú°
 = 
SANE_TRUE
;

426 
›t
->
c⁄°øöt_ty≥
)

428 
SANE_CONSTRAINT_NONE
:

429 
›t
->
ty≥
)

431 
SANE_TYPE_INT
:

432 
	`Âuts
 ("<öt>", 
°dout
);

434 
SANE_TYPE_FIXED
:

435 
	`Âuts
 ("<Êﬂt>", 
°dout
);

437 
SANE_TYPE_STRING
:

438 
	`Âuts
 ("<°rög>", 
°dout
);

443 i‡(
›t
->
ty≥
 !
SANE_TYPE_STRING


444 && 
›t
->
size
 > (
SANE_I¡
Ë (
SANE_W‹d
))

445 
	`Âuts
 (",...", 
°dout
);

448 
SANE_CONSTRAINT_RANGE
:

449 i‡(
›t
->
ty≥
 =
SANE_TYPE_INT
)

451 i‡(!
	`°rcmp
 (
›t
->
«me
, "x"))

453 
	`¥ötf
 ("%d..%d",

454 
›t
->
c⁄°øöt
.
ønge
->
mö
,

455 
›t
->
c⁄°øöt
.
ønge
->
max
 - 
é_x
);

457 i‡(!
	`°rcmp
 (
›t
->
«me
, "y"))

459 
	`¥ötf
 ("%d..%d",

460 
›t
->
c⁄°øöt
.
ønge
->
mö
,

461 
›t
->
c⁄°øöt
.
ønge
->
max
 - 
é_y
);

465 
	`¥ötf
 ("%d..%d",

466 
›t
->
c⁄°øöt
.
ønge
->
mö
,

467 
›t
->
c⁄°øöt
.
ønge
->
max
);

469 
	`¥öt_unô
 (
›t
->
unô
);

470 i‡(
›t
->
size
 > (
SANE_I¡
Ë (
SANE_W‹d
))

471 
	`Âuts
 (",...", 
°dout
);

472 i‡(
›t
->
c⁄°øöt
.
ønge
->
qu™t
)

473 
	`¥ötf
 (" (ö sãp†o‡%d)", 
›t
->
c⁄°øöt
.
ønge
->
qu™t
);

477 i‡(!
	`°rcmp
 (
›t
->
«me
, "x"))

479 
	`¥ötf
 ("%g..%g",

480 
	`SANE_UNFIX
 (
›t
->
c⁄°øöt
.
ønge
->
mö
),

481 
	`SANE_UNFIX
 (
›t
->
c⁄°øöt
.
ønge
->
max
 - 
é_x
));

483 i‡(!
	`°rcmp
 (
›t
->
«me
, "y"))

485 
	`¥ötf
 ("%g..%g",

486 
	`SANE_UNFIX
 (
›t
->
c⁄°øöt
.
ønge
->
mö
),

487 
	`SANE_UNFIX
 (
›t
->
c⁄°øöt
.
ønge
->
max
 - 
é_y
));

491 
	`¥ötf
 ("%g..%g",

492 
	`SANE_UNFIX
 (
›t
->
c⁄°øöt
.
ønge
->
mö
),

493 
	`SANE_UNFIX
 (
›t
->
c⁄°øöt
.
ønge
->
max
));

495 
	`¥öt_unô
 (
›t
->
unô
);

496 i‡(
›t
->
size
 > (
SANE_I¡
Ë (
SANE_W‹d
))

497 
	`Âuts
 (",...", 
°dout
);

498 i‡(
›t
->
c⁄°øöt
.
ønge
->
qu™t
)

499 
	`¥ötf
 (" (in steps of %g)",

500 
	`SANE_UNFIX
 (
›t
->
c⁄°øöt
.
ønge
->
qu™t
));

504 
SANE_CONSTRAINT_WORD_LIST
:

505 
i
 = 0; i < 
›t
->
c⁄°øöt
.
w‹d_li°
[0]; ++i)

507 i‡(
nŸ_fú°
)

508 
	`Âutc
 ('|', 
°dout
);

510 
nŸ_fú°
 = 
SANE_TRUE
;

512 i‡(
›t
->
ty≥
 =
SANE_TYPE_INT
)

513 
	`¥ötf
 ("%d", 
›t
->
c⁄°øöt
.
w‹d_li°
[
i
 + 1]);

515 
	`¥ötf
 ("%g", 
	`SANE_UNFIX
 (
›t
->
c⁄°øöt
.
w‹d_li°
[
i
 + 1]));

517 
	`¥öt_unô
 (
›t
->
unô
);

518 i‡(
›t
->
size
 > (
SANE_I¡
Ë (
SANE_W‹d
))

519 
	`Âuts
 (",...", 
°dout
);

522 
SANE_CONSTRAINT_STRING_LIST
:

523 
i
 = 0; 
›t
->
c⁄°øöt
.
°rög_li°
[i]; ++i)

525 i‡(
i
 > 0)

526 
	`Âutc
 ('|', 
°dout
);

528 
	`Âuts
 (
›t
->
c⁄°øöt
.
°rög_li°
[
i
], 
°dout
);

535 i‡(
›t
->
ty≥
 =
SANE_TYPE_STRING
 || o±->
size
 = (
SANE_W‹d
))

537 i‡(
	`SANE_OPTION_IS_ACTIVE
 (
›t
->
ˇp
))

539 *
vÆ
 = 
	`Æloˇ
 (
›t
->
size
);

540 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
›t_num
, 
SANE_ACTION_GET_VALUE
, 
vÆ
,

542 
	`Âuts
 (" [", 
°dout
);

543 
›t
->
ty≥
)

545 
SANE_TYPE_BOOL
:

546 
	`Âuts
 (*(
SANE_Boﬁ
 *Ë
vÆ
 ? "yes" : "no", 
°dout
);

549 
SANE_TYPE_INT
:

550 i‡(
	`°rcmp
 (
›t
->
«me
, "l") == 0)

552 
é_x
 = (*(
SANE_Fixed
 *Ë
vÆ
);

553 
	`¥ötf
 ("%d", 
é_x
);

555 i‡(
	`°rcmp
 (
›t
->
«me
, "t") == 0)

557 
é_y
 = (*(
SANE_Fixed
 *Ë
vÆ
);

558 
	`¥ötf
 ("%d", 
é_y
);

560 i‡(
	`°rcmp
 (
›t
->
«me
, "x") == 0)

562 
br_x
 = (*(
SANE_Fixed
 *Ë
vÆ
);

563 
	`¥ötf
 ("%d", 
br_x
 - 
é_x
);

565 i‡(
	`°rcmp
 (
›t
->
«me
, "y") == 0)

567 
br_y
 = (*(
SANE_Fixed
 *Ë
vÆ
);

568 
	`¥ötf
 ("%d", 
br_y
 - 
é_y
);

571 
	`¥ötf
 ("%d", *(
SANE_I¡
 *Ë
vÆ
);

574 
SANE_TYPE_FIXED
:

576 i‡(
	`°rcmp
 (
›t
->
«me
, "l") == 0)

578 
é_x
 = (*(
SANE_Fixed
 *Ë
vÆ
);

579 
	`¥ötf
 ("%g", 
	`SANE_UNFIX
 (
é_x
));

581 i‡(
	`°rcmp
 (
›t
->
«me
, "t") == 0)

583 
é_y
 = (*(
SANE_Fixed
 *Ë
vÆ
);

584 
	`¥ötf
 ("%g", 
	`SANE_UNFIX
 (
é_y
));

586 i‡(
	`°rcmp
 (
›t
->
«me
, "x") == 0)

588 
br_x
 = (*(
SANE_Fixed
 *Ë
vÆ
);

589 
	`¥ötf
 ("%g", 
	`SANE_UNFIX
 (
br_x
 - 
é_x
));

591 i‡(
	`°rcmp
 (
›t
->
«me
, "y") == 0)

593 
br_y
 = (*(
SANE_Fixed
 *Ë
vÆ
);

594 
	`¥ötf
 ("%g", 
	`SANE_UNFIX
 (
br_y
 - 
é_y
));

597 
	`¥ötf
 ("%g", 
	`SANE_UNFIX
 (*(
SANE_Fixed
 *Ë
vÆ
));

601 
SANE_TYPE_STRING
:

602 
	`Âuts
 ((*Ë
vÆ
, 
°dout
);

608 
	`Âutc
 (']', 
°dout
);

612 i‡(!
	`SANE_OPTION_IS_ACTIVE
 (
›t
->
ˇp
))

613 
	`Âuts
 (" [öa˘ive]", 
°dout
);

615 if(
›t
->
ˇp
 & 
SANE_CAP_HARD_SELECT
)

616 
	`Âuts
 (" [h¨dw¨e]", 
°dout
);

618 if(!(
›t
->
ˇp
 & 
SANE_CAP_SOFT_SELECT
Ë&& o±->ˇ∞& 
SANE_CAP_SOFT_DETECT
)

619 
	`Âuts
 (" [ªad-⁄ly]", 
°dout
);

621 
	`Âuts
 ("\¿ ", 
°dout
);

623 
cﬁumn
 = 8;

624 
œ°_bªak
 = 0;

625 
°¨t
 = 
›t
->
desc
;

626 
°r
 = 
›t
->
desc
; *str; ++str)

628 ++
cﬁumn
;

629 i‡(*
°r
 == ' ')

630 
œ°_bªak
 = 
°r
;

631 i‡(*
°r
 == '\n'){

632 
cﬁumn
=80;

633 
œ°_bªak
 = 
°r
;

635 i‡(
cﬁumn
 >79 && 
œ°_bªak
)

637 
°¨t
 < 
œ°_bªak
)

638 
	`Âutc
 (*
°¨t
++, 
°dout
);

639 
°¨t
 = 
œ°_bªak
 + 1;

640 
	`Âuts
 ("\¿ ", 
°dout
);

641 
cﬁumn
 = 8 + (
°r
 - 
°¨t
);

644 *
°¨t
)

645 
	`Âutc
 (*
°¨t
++, 
°dout
);

646 
	`Âutc
 ('\n', 
°dout
);

647 
	}
}

671 
	$∑r£_sˇœr
 (c⁄° 
SANE_O±i⁄_Des¸ùt‹
 * 
›t
, c⁄° *
°r
,

672 
SANE_W‹d
 * 
vÆue
)

674 *
íd
;

675 
v
;

677 i‡(
›t
->
ty≥
 =
SANE_TYPE_FIXED
)

678 
v
 = 
	`°πod
 (
°r
, &
íd
Ë* (1 << 
SANE_FIXED_SCALE_SHIFT
);

680 
v
 = 
	`°πﬁ
 (
°r
, &
íd
, 10);

682 i‡(
°r
 =
íd
)

684 
	`Ârötf
 (
°dîr
,

686 
¥og_«me
, 
›t
->
«me
, 
°r
);

687 
	`exô
 (1);

689 
°r
 = 
íd
;

691 
›t
->
unô
)

693 
SANE_UNIT_NONE
:

694 
SANE_UNIT_PIXEL
:

697 
SANE_UNIT_BIT
:

698 i‡(*
°r
 == 'b' || *str == 'B')

700 i‡(*
°r
++ == 'B')

701 
v
 *= 8;

705 
SANE_UNIT_MM
:

706 i‡(
°r
[0] == '\0')

707 
v
 *= 1.0;

708 i‡(
	`°rcmp
 (
°r
, "mm") == 0)

709 
°r
 +=  ("mm") - 1;

710 i‡(
	`°rcmp
 (
°r
, "cm") == 0)

712 
°r
 +=  ("cm") - 1;

713 
v
 *= 10.0;

715 i‡(
	`°rcmp
 (
°r
, "in") == 0 || *str == '"')

717 i‡(*
°r
++ != '"')

718 ++
°r
;

719 
v
 *= 25.4;

723 
	`Ârötf
 (
°dîr
,

725 
¥og_«me
, 
›t
->
«me
, 
°r
);

730 
SANE_UNIT_DPI
:

731 i‡(
	`°rcmp
 (
°r
, "dpi") == 0)

732 
°r
 +=  ("dpi") - 1;

735 
SANE_UNIT_PERCENT
:

736 i‡(*
°r
 == '%')

737 ++
°r
;

740 
SANE_UNIT_MICROSECOND
:

741 i‡(
	`°rcmp
 (
°r
, "us") == 0)

742 
°r
 +=  ("us") - 1;

746 if(
v
 < 0){

747 *
vÆue
 = 
v
 - 0.5;

750 *
vÆue
 = 
v
 + 0.5;

753  
°r
;

754 
	}
}

776 
	$∑r£_ve˘‹
 (c⁄° 
SANE_O±i⁄_Des¸ùt‹
 * 
›t
, c⁄° *
°r
,

777 
SANE_W‹d
 * 
ve˘‹
, 
size_t
 
ve˘‹_Àngth
)

779 
SANE_W‹d
 
vÆue
, 
¥ev_vÆue
 = 0;

780 
ödex
 = -1, 
¥ev_ödex
 = 0;

781 *
íd
, 
£∑øt‹
 = '\0';

784 
	`mem£t
 (
ve˘‹
, 0, 
ve˘‹_Àngth
 *  (
SANE_W‹d
));

788 i‡(*
°r
 == '[')

791 
ödex
 = 
	`°πﬁ
 (++
°r
, &
íd
, 10);

792 i‡(
°r
 =
íd
 || *end != ']')

794 
	`Ârötf
 (
°dîr
, "%s: option --%s: closing bracket missing "

795 "‘e° o‡›ti⁄: %s)\n", 
¥og_«me
, 
›t
->
«me
, 
°r
);

796 
	`exô
 (1);

798 
°r
 = 
íd
 + 1;

801 ++
ödex
;

803 i‡(
ödex
 < 0 || index >(Ë
ve˘‹_Àngth
)

805 
	`Ârötf
 (
°dîr
,

807 
¥og_«me
, 
›t
->
«me
, 
ödex
, (Ë
ve˘‹_Àngth
 - 1);

808 
	`exô
 (1);

812 
°r
 = 
	`∑r£_sˇœr
 (
›t
, så, &
vÆue
);

813 i‡(!
°r
)

814 
	`exô
 (1);

816 i‡(*
°r
 && *str != '-' && *str != ',')

818 
	`Ârötf
 (
°dîr
,

820 
¥og_«me
, 
›t
->
«me
, 
°r
);

821 
	`exô
 (1);

825 
ve˘‹
[
ödex
] = 
vÆue
;

826 i‡(
£∑øt‹
 == '-')

829 
v
, 
¶›e
;

830 
i
;

832 
v
 = (Ë
¥ev_vÆue
;

833 
¶›e
 = ((Ë
vÆue
 - 
v
Ë/ (
ödex
 - 
¥ev_ödex
);

835 
i
 = 
¥ev_ödex
 + 1; i < 
ödex
; ++i)

837 
v
 +
¶›e
;

838 
ve˘‹
[
i
] = (
SANE_W‹d
Ë
v
;

842 
¥ev_ödex
 = 
ödex
;

843 
¥ev_vÆue
 = 
vÆue
;

844 
£∑øt‹
 = *
°r
++;

846 
£∑øt‹
 == ',' || separator == '-');

848 i‡(
vîbo£
 > 2)

850 
i
;

852 
	`Ârötf
 (
°dîr
, "%s: vÆuêf‹ --%†is: ", 
¥og_«me
, 
›t
->
«me
);

853 
i
 = 0; i < (Ë
ve˘‹_Àngth
; ++i)

854 i‡(
›t
->
ty≥
 =
SANE_TYPE_FIXED
)

855 
	`Ârötf
 (
°dîr
, "%g ", 
	`SANE_UNFIX
 (
ve˘‹
[
i
]));

857 
	`Ârötf
 (
°dîr
, "%d ", 
ve˘‹
[
i
]);

858 
	`Âutc
 ('\n', 
°dîr
);

860 
	}
}

863 
	$„tch_›ti⁄s
 (
SANE_Devi˚
 * 
devi˚
)

865 c⁄° 
SANE_O±i⁄_Des¸ùt‹
 *
›t
;

866 
SANE_I¡
 
num_dev_›ti⁄s
;

867 
i
, 
›ti⁄_cou¡
;

868 
SANE_Sètus
 
°©us
;

870 
›t
 = 
	`ß√_gë_›ti⁄_des¸ùt‹
 (
devi˚
, 0);

871 i‡(
›t
 =
NULL
)

873 
	`Ârötf
 (
°dîr
, "CouldÇot get option descriptor for option 0\n");

874 
	`exô
 (1);

877 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 0, 
SANE_ACTION_GET_VALUE
,

878 &
num_dev_›ti⁄s
, 0);

879 i‡(
°©us
 !
SANE_STATUS_GOOD
)

881 
	`Ârötf
 (
°dîr
, "CouldÇot get value for option 0: %s\n",

882 
	`ß√_°r°©us
 (
°©us
));

883 
	`exô
 (1);

887 
›ti⁄_cou¡
 = 0;

888 
i
 = 1; i < 
num_dev_›ti⁄s
; ++i)

890 
›t
 = 
	`ß√_gë_›ti⁄_des¸ùt‹
 (
devi˚
, 
i
);

891 i‡(
›t
 =
NULL
)

893 
	`Ârötf
 (
°dîr
, "CouldÇŸ gë o±i⁄ des¸ùt‹ f‹ o±i⁄ %d\n",
i
);

894 
	`exô
 (1);

897 i‡(!
	`SANE_OPTION_IS_SETTABLE
 (
›t
->
ˇp
))

900 
›ti⁄_numbî
[
›ti⁄_cou¡
] = 
i
;

902 
Æl_›ti⁄s
[
›ti⁄_cou¡
].
«me
 = (c⁄° *Ë
›t
->name;

903 
Æl_›ti⁄s
[
›ti⁄_cou¡
].
Êag
 = 0;

904 
Æl_›ti⁄s
[
›ti⁄_cou¡
].
vÆ
 = 0;

906 i‡(
›t
->
ty≥
 =
SANE_TYPE_BOOL
)

907 
Æl_›ti⁄s
[
›ti⁄_cou¡
].
has_¨g
 = 
›ti⁄Æ_¨gumít
;

908 i‡(
›t
->
ty≥
 =
SANE_TYPE_BUTTON
)

909 
Æl_›ti⁄s
[
›ti⁄_cou¡
].
has_¨g
 = 
no_¨gumít
;

911 
Æl_›ti⁄s
[
›ti⁄_cou¡
].
has_¨g
 = 
ªquúed_¨gumít
;

914 i‡((
›t
->
ty≥
 =
SANE_TYPE_FIXED
 || o±->ty≥ =
SANE_TYPE_INT
)

915 && 
›t
->
size
 = (
SANE_I¡
)

916 && (
›t
->
unô
 =
SANE_UNIT_DPI
)

917 && (
	`°rcmp
 (
›t
->
«me
, 
SANE_NAME_SCAN_RESOLUTION
) == 0))

918 
ªsﬁuti⁄_›töd
 = 
i
;

923 i‡((
›t
->
ty≥
 =
SANE_TYPE_FIXED
 || o±->ty≥ =
SANE_TYPE_INT
)

924 && 
›t
->
size
 = (
SANE_I¡
)

925 && (
›t
->
unô
 =
SANE_UNIT_MM
 || o±->unô =
SANE_UNIT_PIXEL
))

927 i‡(
	`°rcmp
 (
›t
->
«me
, 
SANE_NAME_SCAN_BR_X
) == 0)

929 
wödow
[0] = 
i
;

930 
Æl_›ti⁄s
[
›ti⁄_cou¡
].
«me
 = "width";

931 
Æl_›ti⁄s
[
›ti⁄_cou¡
].
vÆ
 = 'x';

932 
wödow_›ti⁄
[0] = *
›t
;

933 
wödow_›ti⁄
[0].
tôÀ
 = "Scan width";

934 
wödow_›ti⁄
[0].
desc
 = "Width of scan-area.";

935 
wödow_›ti⁄
[0].
«me
 = "x";

937 i‡(
	`°rcmp
 (
›t
->
«me
, 
SANE_NAME_SCAN_BR_Y
) == 0)

939 
wödow
[1] = 
i
;

940 
Æl_›ti⁄s
[
›ti⁄_cou¡
].
«me
 = "height";

941 
Æl_›ti⁄s
[
›ti⁄_cou¡
].
vÆ
 = 'y';

942 
wödow_›ti⁄
[1] = *
›t
;

943 
wödow_›ti⁄
[1].
tôÀ
 = "Scan height";

944 
wödow_›ti⁄
[1].
desc
 = "Height of scan-area.";

945 
wödow_›ti⁄
[1].
«me
 = "y";

947 i‡(
	`°rcmp
 (
›t
->
«me
, 
SANE_NAME_SCAN_TL_X
) == 0)

949 
wödow
[2] = 
i
;

950 
Æl_›ti⁄s
[
›ti⁄_cou¡
].
vÆ
 = 'l';

951 
wödow_›ti⁄
[2] = *
›t
;

952 
wödow_›ti⁄
[2].
«me
 = "l";

954 i‡(
	`°rcmp
 (
›t
->
«me
, 
SANE_NAME_SCAN_TL_Y
) == 0)

956 
wödow
[3] = 
i
;

957 
Æl_›ti⁄s
[
›ti⁄_cou¡
].
vÆ
 = 't';

958 
wödow_›ti⁄
[3] = *
›t
;

959 
wödow_›ti⁄
[3].
«me
 = "t";

962 ++
›ti⁄_cou¡
;

964 
	`mem˝y
 (
Æl_›ti⁄s
 + 
›ti⁄_cou¡
, 
basic_›ti⁄s
,  (basic_options));

965 
›ti⁄_cou¡
 +
	`NELEMS
 (
basic_›ti⁄s
);

966 
	`mem£t
 (
Æl_›ti⁄s
 + 
›ti⁄_cou¡
, 0,  (all_options[0]));

970 
i
 = 0; i < 2; ++i)

972 i‡(
wödow
[
i
] && !
wödow_vÆ_u£r
[i])

974 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
wödow
[
i
],

975 
SANE_ACTION_GET_VALUE
, &
wödow_vÆ
[
i
], 0);

976 i‡(
wödow
[
i
 + 2]){

977 
SANE_W‹d
 
pos
;

978 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
wödow
[
i
 + 2],

979 
SANE_ACTION_GET_VALUE
, &
pos
, 0);

980 
wödow_vÆ
[
i
] -
pos
;

984 
	}
}

987 
	$£t_›ti⁄
 (
SANE_H™dÀ
 
devi˚
, 
›äum
, *
vÆuï
)

989 c⁄° 
SANE_O±i⁄_Des¸ùt‹
 *
›t
;

990 
SANE_Sètus
 
°©us
;

991 
SANE_W‹d
 
‹ig
 = 0;

992 
SANE_I¡
 
öfo
 = 0;

994 
›t
 = 
	`ß√_gë_›ti⁄_des¸ùt‹
 (
devi˚
, 
›äum
);

995 i‡(
›t
 && (!
	`SANE_OPTION_IS_ACTIVE
 (›t->
ˇp
)))

997 i‡(
vîbo£
 > 0)

998 
	`Ârötf
 (
°dîr
, "%s: ignoredÑequestÅo set inactive option %s\n",

999 
¥og_«me
, 
›t
->
«me
);

1003 i‡(
›t
->
size
 = (
SANE_W‹d
Ë&& o±->
ty≥
 !
SANE_TYPE_STRING
)

1004 
‹ig
 = *(
SANE_W‹d
 *Ë
vÆuï
;

1006 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
›äum
, 
SANE_ACTION_SET_VALUE
,

1007 
vÆuï
, &
öfo
);

1008 i‡(
°©us
 !
SANE_STATUS_GOOD
)

1010 
	`Ârötf
 (
°dîr
, "%s: setting of option --%s failed (%s)\n",

1011 
¥og_«me
, 
›t
->
«me
, 
	`ß√_°r°©us
 (
°©us
));

1012 
	`exô
 (1);

1015 i‡((
öfo
 & 
SANE_INFO_INEXACT
Ë&& 
›t
->
size
 = (
SANE_W‹d
))

1017 i‡(
›t
->
ty≥
 =
SANE_TYPE_INT
)

1018 
	`Ârötf
 (
°dîr
, "%s:Ñounded value of %s from %dÅo %d\n",

1019 
¥og_«me
, 
›t
->
«me
, 
‹ig
, *(
SANE_W‹d
 *Ë
vÆuï
);

1020 i‡(
›t
->
ty≥
 =
SANE_TYPE_FIXED
)

1021 
	`Ârötf
 (
°dîr
, "%s:Ñounded value of %s from %gÅo %g\n",

1022 
¥og_«me
, 
›t
->
«me
,

1023 
	`SANE_UNFIX
 (
‹ig
), SANE_UNFIX (*(
SANE_W‹d
 *Ë
vÆuï
));

1026 i‡(
öfo
 & 
SANE_INFO_RELOAD_OPTIONS
)

1027 
	`„tch_›ti⁄s
 (
devi˚
);

1028 
	}
}

1031 
	$¥o˚ss_backíd_›ti⁄
 (
SANE_H™dÀ
 
devi˚
, 
›äum
, c⁄° *
›èrg
)

1033 
SANE_W‹d
 *
ve˘‹
 = 0;

1034 
size_t
 
ve˘‹_size
 = 0;

1035 c⁄° 
SANE_O±i⁄_Des¸ùt‹
 *
›t
;

1036 
size_t
 
ve˘‹_Àngth
;

1037 
SANE_Sètus
 
°©us
;

1038 
SANE_W‹d
 
vÆue
;

1039 *
vÆuï
;

1041 
›t
 = 
	`ß√_gë_›ti⁄_des¸ùt‹
 (
devi˚
, 
›äum
);

1043 i‡(!
	`SANE_OPTION_IS_ACTIVE
 (
›t
->
ˇp
))

1045 
	`Ârötf
 (
°dîr
, "%s:áttemptedÅo set inactive option %s\n",

1046 
¥og_«me
, 
›t
->
«me
);

1047 
	`exô
 (1);

1050 i‡((
›t
->
ˇp
 & 
SANE_CAP_AUTOMATIC
Ë&& 
›èrg
 &&

1051 
	`°∫ˇ£cmp
 (
›èrg
, "auto", 4) == 0)

1053 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
›äum
, 
SANE_ACTION_SET_AUTO
,

1055 i‡(
°©us
 !
SANE_STATUS_GOOD
)

1057 
	`Ârötf
 (
°dîr
,

1059 
¥og_«me
, 
›t
->
«me
, 
	`ß√_°r°©us
 (
°©us
));

1060 
	`exô
 (1);

1065 
vÆuï
 = &
vÆue
;

1066 
›t
->
ty≥
)

1068 
SANE_TYPE_BOOL
:

1069 
vÆue
 = 1;

1070 i‡(
›èrg
)

1072 i‡(
	`°∫ˇ£cmp
 (
›èrg
, "yes", 
	`°æí
 (optarg)) == 0)

1073 
vÆue
 = 1;

1074 i‡(
	`°∫ˇ£cmp
 (
›èrg
, "no", 
	`°æí
 (optarg)) == 0)

1075 
vÆue
 = 0;

1078 
	`Ârötf
 (
°dîr
, "%s: option --%s: bad option value `%s'\n",

1079 
¥og_«me
, 
›t
->
«me
, 
›èrg
);

1080 
	`exô
 (1);

1085 
SANE_TYPE_INT
:

1086 
SANE_TYPE_FIXED
:

1088 
ve˘‹_Àngth
 = 
›t
->
size
 /  (
SANE_W‹d
);

1089 i‡(
ve˘‹_size
 < 
ve˘‹_Àngth
)

1091 
ve˘‹_size
 = 
ve˘‹_Àngth
;

1092 
ve˘‹
 = 
	`ªÆloc
 (ve˘‹, 
ve˘‹_Àngth
 *  (
SANE_W‹d
));

1093 i‡(!
ve˘‹
)

1095 
	`Ârötf
 (
°dîr
, "%s: ouào‡mem‹y\n", 
¥og_«me
);

1096 
	`exô
 (1);

1099 
	`∑r£_ve˘‹
 (
›t
, 
›èrg
, 
ve˘‹
, 
ve˘‹_Àngth
);

1100 
vÆuï
 = 
ve˘‹
;

1103 
SANE_TYPE_STRING
:

1104 
vÆuï
 = 
	`mÆloc
 (
›t
->
size
);

1105 i‡(!
vÆuï
)

1107 
	`Ârötf
 (
°dîr
, "%s: ouào‡mem‹y\n", 
¥og_«me
);

1108 
	`exô
 (1);

1110 
	`°∫˝y
 (
vÆuï
, 
›èrg
, 
›t
->
size
);

1111 ((*Ë
vÆuï
)[
›t
->
size
 - 1] = 0;

1114 
SANE_TYPE_BUTTON
:

1115 
vÆue
 = 0;

1119 
	`Ârötf
 (
°dîr
, "%s: duh, got unknown optionÅype %d\n",

1120 
¥og_«me
, 
›t
->
ty≥
);

1123 
	`£t_›ti⁄
 (
devi˚
, 
›äum
, 
vÆuï
);

1124 
	}
}

1127 
	$wrôe_≤m_hódî
 (
SANE_Føme
 
f‹m©
, 
width
, 
height
, 
dïth
)

1132 
f‹m©
)

1134 
SANE_FRAME_RED
:

1135 
SANE_FRAME_GREEN
:

1136 
SANE_FRAME_BLUE
:

1137 
SANE_FRAME_RGB
:

1138 
	`¥ötf
 ("P6\n# SANE d©®fﬁlows\n%d %d\n%d\n", 
width
, 
height
,

1139 (
dïth
 <= 8) ? 255 : 65535);

1143 i‡(
dïth
 == 1)

1144 
	`¥ötf
 ("P4\n# SANE d©®fﬁlows\n%d %d\n", 
width
, 
height
);

1146 
	`¥ötf
 ("P5\n# SANE d©®fﬁlows\n%d %d\n%d\n", 
width
, 
height
,

1147 (
dïth
 <= 8) ? 255 : 65535);

1150 #ifde‡
__EMX__


1151 
	`_f£tmode
 (
°dout
, "b");

1153 
	}
}

1156 
	$adv™˚
 (
Image
 * 
image
)

1158 i‡(++
image
->
x
 >image->
width
)

1160 
image
->
x
 = 0;

1161 i‡(++
image
->
y
 >image->
height
 || !image->
d©a
)

1163 
size_t
 
ﬁd_size
 = 0, 
√w_size
;

1165 i‡(
image
->
d©a
)

1166 
ﬁd_size
 = 
image
->
height
 * image->
width
;

1168 
image
->
height
 +
STRIP_HEIGHT
;

1169 
√w_size
 = 
image
->
height
 * image->
width
;

1171 i‡(
image
->
d©a
)

1172 
image
->
d©a
 = 
	`ªÆloc
 (image->d©a, 
√w_size
);

1174 
image
->
d©a
 = 
	`mÆloc
 (
√w_size
);

1175 i‡(
image
->
d©a
)

1176 
	`mem£t
 (
image
->
d©a
 + 
ﬁd_size
, 0, 
√w_size
 - old_size);

1179 i‡(!
image
->
d©a
)

1180 
	`Ârötf
 (
°dîr
, "%s: can'tállocate image buffer (%dx%d)\n",

1181 
¥og_«me
, 
image
->
width
, image->
height
);

1182  
image
->
d©a
;

1183 
	}
}

1185 
SANE_Sètus


1186 
	$sˇn_ô
 ()

1188 
i
, 
Àn
, 
fú°_‰ame
 = 1, 
off£t
 = 0, 
mu°_buf„r
 = 0, 
hundªd_≥r˚¡
;

1189 
SANE_Byã
 
mö
 = 0xff, 
max
 = 0;

1190 
SANE_P¨amëîs
 
∑rm
;

1191 
SANE_Sètus
 
°©us
;

1192 
Image
 
image
 = { 0, 0, 0, 0, 0 };

1193 c⁄° *
f‹m©_«me
[] = {

1196 
SANE_W‹d
 
tŸÆ_byãs
 = 0, 
ex≥˘ed_byãs
;

1197 
SANE_I¡
 
h™g_ovî
 = -1;

1201 i‡(!
fú°_‰ame
)

1203 #ifde‡
SANE_STATUS_WARMING_UP


1206 
°©us
 = 
	`ß√_°¨t
 (
devi˚
);

1208 
°©us
 =
SANE_STATUS_WARMING_UP
);

1210 
°©us
 = 
	`ß√_°¨t
 (
devi˚
);

1212 i‡(
°©us
 !
SANE_STATUS_GOOD
)

1214 
	`Ârötf
 (
°dîr
, "%s: sane_start: %s\n",

1215 
¥og_«me
, 
	`ß√_°r°©us
 (
°©us
));

1216 
˛ónup
;

1220 
°©us
 = 
	`ß√_gë_∑ømëîs
 (
devi˚
, &
∑rm
);

1221 i‡(
°©us
 !
SANE_STATUS_GOOD
)

1223 
	`Ârötf
 (
°dîr
, "%s: sane_get_parameters: %s\n",

1224 
¥og_«me
, 
	`ß√_°r°©us
 (
°©us
));

1225 
˛ónup
;

1228 i‡(
vîbo£
)

1230 i‡(
fú°_‰ame
)

1232 i‡(
∑rm
.
löes
 >= 0)

1233 
	`Ârötf
 (
°dîr
, "%s: scanning image of size %dx%dÖixelsát "

1235 
¥og_«me
, 
∑rm
.
pixñs_≥r_löe
,Ö¨m.
löes
,

1236 8 * 
∑rm
.
byãs_≥r_löe
 /Ö¨m.
pixñs_≥r_löe
);

1238 
	`Ârötf
 (
°dîr
, "%s: scanning image %dÖixels wideánd "

1240 
¥og_«me
, 
∑rm
.
pixñs_≥r_löe
,

1241 8 * 
∑rm
.
byãs_≥r_löe
 /Ö¨m.
pixñs_≥r_löe
);

1244 
	`Ârötf
 (
°dîr
, "%s:ácquúög %†‰ame\n", 
¥og_«me
,

1245 
∑rm
.
f‹m©
 <
SANE_FRAME_BLUE
 ? 
f‹m©_«me
[parm.format]:"Unknown");

1248 i‡(
fú°_‰ame
)

1250 
∑rm
.
f‹m©
)

1252 
SANE_FRAME_RED
:

1253 
SANE_FRAME_GREEN
:

1254 
SANE_FRAME_BLUE
:

1255 
	`as£π
 (
∑rm
.
dïth
 == 8);

1256 
mu°_buf„r
 = 1;

1257 
off£t
 = 
∑rm
.
f‹m©
 - 
SANE_FRAME_RED
;

1260 
SANE_FRAME_RGB
:

1261 
	`as£π
 ((
∑rm
.
dïth
 == 8) || (parm.depth == 16));

1262 
SANE_FRAME_GRAY
:

1263 
	`as£π
 ((
∑rm
.
dïth
 == 1) || (parm.depth == 8)

1264 || (
∑rm
.
dïth
 == 16));

1265 i‡(
∑rm
.
löes
 < 0)

1267 
mu°_buf„r
 = 1;

1268 
off£t
 = 0;

1272 i‡(
ouçut_f‹m©
 =
OUTPUT_TIFF
)

1273 
	`ß√i_wrôe_tiff_hódî
 (
∑rm
.
f‹m©
,

1274 
∑rm
.
pixñs_≥r_löe
,Ö¨m.
löes
,

1275 
∑rm
.
dïth
, 
ªsﬁuti⁄_vÆue
,

1276 
icc_¥ofûe
);

1278 
	`wrôe_≤m_hódî
 (
∑rm
.
f‹m©
,Ö¨m.
pixñs_≥r_löe
,

1279 
∑rm
.
löes
,Ö¨m.
dïth
);

1287 i‡(
mu°_buf„r
)

1294 
image
.
width
 = 
∑rm
.
byãs_≥r_löe
;

1296 i‡(
∑rm
.
löes
 >= 0)

1300 
image
.
height
 = 
∑rm
.
löes
 - 
STRIP_HEIGHT
 + 1;

1302 
image
.
height
 = 0;

1304 
image
.
x
 = image.
width
 - 1;

1305 
image
.
y
 = -1;

1306 i‡(!
	`adv™˚
 (&
image
))

1308 
°©us
 = 
SANE_STATUS_NO_MEM
;

1309 
˛ónup
;

1315 
	`as£π
 (
∑rm
.
f‹m©
 >
SANE_FRAME_RED


1316 && 
∑rm
.
f‹m©
 <
SANE_FRAME_BLUE
);

1317 
off£t
 = 
∑rm
.
f‹m©
 - 
SANE_FRAME_RED
;

1318 
image
.
x
 = image.
y
 = 0;

1320 
hundªd_≥r˚¡
 = 
∑rm
.
byãs_≥r_löe
 *Ö¨m.
löes


1321 * ((
∑rm
.
f‹m©
 =
SANE_FRAME_RGB
 ||Ö¨m.f‹m© =
SANE_FRAME_GRAY
) ? 1:3);

1325 
¥ogr
;

1326 
°©us
 = 
	`ß√_ªad
 (
devi˚
, 
buf„r
, 
buf„r_size
, &
Àn
);

1327 
tŸÆ_byãs
 +(
SANE_W‹d
Ë
Àn
;

1328 
¥ogr
 = ((
tŸÆ_byãs
 * 100.Ë/ (Ë
hundªd_≥r˚¡
);

1329 i‡(
¥ogr
 > 100.)

1330 
¥ogr
 = 100.;

1331 i‡(
¥ogªss
)

1332 
	`Ârötf
 (
°dîr
, "Progªss: %3.1f%%\r", 
¥ogr
);

1334 i‡(
°©us
 !
SANE_STATUS_GOOD
)

1336 i‡(
vîbo£
 && 
∑rm
.
dïth
 == 8)

1337 
	`Ârötf
 (
°dîr
, "%s: min/max graylevel value = %d/%d\n",

1338 
¥og_«me
, 
mö
, 
max
);

1339 i‡(
°©us
 !
SANE_STATUS_EOF
)

1341 
	`Ârötf
 (
°dîr
, "%s: sane_read: %s\n",

1342 
¥og_«me
, 
	`ß√_°r°©us
 (
°©us
));

1343  
°©us
;

1348 i‡(
mu°_buf„r
)

1350 
∑rm
.
f‹m©
)

1352 
SANE_FRAME_RED
:

1353 
SANE_FRAME_GREEN
:

1354 
SANE_FRAME_BLUE
:

1355 
i
 = 0; i < 
Àn
; ++i)

1357 
image
.
d©a
[
off£t
 + 3 * 
i
] = 
buf„r
[i];

1358 i‡(!
	`adv™˚
 (&
image
))

1360 
°©us
 = 
SANE_STATUS_NO_MEM
;

1361 
˛ónup
;

1364 
off£t
 +3 * 
Àn
;

1367 
SANE_FRAME_RGB
:

1368 
i
 = 0; i < 
Àn
; ++i)

1370 
image
.
d©a
[
off£t
 + 
i
] = 
buf„r
[i];

1371 i‡(!
	`adv™˚
 (&
image
))

1373 
°©us
 = 
SANE_STATUS_NO_MEM
;

1374 
˛ónup
;

1377 
off£t
 +
Àn
;

1380 
SANE_FRAME_GRAY
:

1381 
i
 = 0; i < 
Àn
; ++i)

1383 
image
.
d©a
[
off£t
 + 
i
] = 
buf„r
[i];

1384 i‡(!
	`adv™˚
 (&
image
))

1386 
°©us
 = 
SANE_STATUS_NO_MEM
;

1387 
˛ónup
;

1390 
off£t
 +
Àn
;

1399 i‡((
ouçut_f‹m©
 =
OUTPUT_TIFF
Ë|| (
∑rm
.
dïth
 != 16))

1400 
	`fwrôe
 (
buf„r
, 1, 
Àn
, 
°dout
);

1403 #i‡!
	`deföed
(
WORDS_BIGENDIAN
)

1404 
i
, 
°¨t
 = 0;

1407 i‡(
h™g_ovî
 > -1)

1409 i‡(
Àn
 > 0)

1411 
	`fwrôe
 (
buf„r
, 1, 1, 
°dout
);

1412 
buf„r
[0] = (
SANE_Byã
Ë
h™g_ovî
;

1413 
h™g_ovî
 = -1;

1414 
°¨t
 = 1;

1418 
i
 = 
°¨t
; i < (
Àn
 - 1); i += 2)

1420 
LSB
;

1421 
LSB
 = 
buf„r
[
i
];

1422 
buf„r
[
i
] = buffer[i + 1];

1423 
buf„r
[
i
 + 1] = 
LSB
;

1426 i‡(((
Àn
 - 
°¨t
) % 2) != 0)

1428 
h™g_ovî
 = 
buf„r
[
Àn
 - 1];

1429 
Àn
--;

1432 
	`fwrôe
 (
buf„r
, 1, 
Àn
, 
°dout
);

1436 i‡(
vîbo£
 && 
∑rm
.
dïth
 == 8)

1438 
i
 = 0; i < 
Àn
; ++i)

1439 i‡(
buf„r
[
i
] >
max
)

1440 
max
 = 
buf„r
[
i
];

1441 i‡(
buf„r
[
i
] < 
mö
)

1442 
mö
 = 
buf„r
[
i
];

1445 
fú°_‰ame
 = 0;

1447 !
∑rm
.
œ°_‰ame
);

1449 i‡(
mu°_buf„r
)

1451 
image
.
height
 = image.
y
;

1453 i‡(
ouçut_f‹m©
 =
OUTPUT_TIFF
)

1454 
	`ß√i_wrôe_tiff_hódî
 (
∑rm
.
f‹m©
,Ö¨m.
pixñs_≥r_löe
,

1455 
image
.
height
, 
∑rm
.
dïth
, 
ªsﬁuti⁄_vÆue
,

1456 
icc_¥ofûe
);

1458 
	`wrôe_≤m_hódî
 (
∑rm
.
f‹m©
,Ö¨m.
pixñs_≥r_löe
,

1459 
image
.
height
, 
∑rm
.
dïth
);

1461 #i‡!
	`deföed
(
WORDS_BIGENDIAN
)

1464 i‡(
ouçut_f‹m©
 !
OUTPUT_TIFF
 && 
∑rm
.
dïth
 == 16)

1466 
i
;

1467 
i
 = 0; i < 
image
.
height
 * image.
width
; i += 2)

1469 
LSB
;

1470 
LSB
 = 
image
.
d©a
[
i
];

1471 
image
.
d©a
[
i
] = image.data[i + 1];

1472 
image
.
d©a
[
i
 + 1] = 
LSB
;

1477 
	`fwrôe
 (
image
.
d©a
, 1, image.
height
 * image.
width
, 
°dout
);

1481 
	`fÊush
–
°dout
 );

1483 
˛ónup
:

1484 i‡(
image
.
d©a
)

1485 
	`‰ì
 (
image
.
d©a
);

1488 
ex≥˘ed_byãs
 = 
∑rm
.
byãs_≥r_löe
 *Ö¨m.
löes
 *

1489 ((
∑rm
.
f‹m©
 =
SANE_FRAME_RGB


1490 || 
∑rm
.
f‹m©
 =
SANE_FRAME_GRAY
) ? 1 : 3);

1491 i‡(
∑rm
.
löes
 < 0)

1492 
ex≥˘ed_byãs
 = 0;

1493 i‡(
tŸÆ_byãs
 > 
ex≥˘ed_byãs
 &&Éxpected_bytes != 0)

1495 
	`Ârötf
 (
°dîr
,

1497 "(%u/%u)\n", 
¥og_«me
, 
tŸÆ_byãs
, 
ex≥˘ed_byãs
);

1499 i‡(
vîbo£
)

1500 
	`Ârötf
 (
°dîr
, "%s:Ñód %u byã†öÅŸÆ\n", 
¥og_«me
, 
tŸÆ_byãs
);

1502  
°©us
;

1503 
	}
}

1505 
	#˛ón_buf„r
(
buf
,
size
Ë
	`mem£t
 ((buf), 0x23, size)

	)

1508 
	$∑ss_Áû
 (
max
, 
Àn
, 
SANE_Byã
 * 
buf„r
, 
SANE_Sètus
 
°©us
)

1510 i‡(
°©us
 !
SANE_STATUS_GOOD
)

1511 
	`Ârötf
 (
°dîr
, "FAIL Eº‹: %s\n", 
	`ß√_°r°©us
 (
°©us
));

1512 i‡(
buf„r
[
Àn
] != 0x23)

1514 
Àn
 <
max
 && 
buf„r
[len] != 0x23)

1515 ++
Àn
;

1516 
	`Ârötf
 (
°dîr
, "FAIL Chót: %d byãs\n", 
Àn
);

1518 i‡(
Àn
 > 
max
)

1519 
	`Ârötf
 (
°dîr
, "FAIL OvîÊow: %d byãs\n", 
Àn
);

1520 i‡(
Àn
 == 0)

1521 
	`Ârötf
 (
°dîr
, "FAIL No data\n");

1523 
	`Ârötf
 (
°dîr
, "PASS\n");

1524 
	}
}

1526 
SANE_Sètus


1527 
	$ã°_ô
 ()

1529 
i
, 
Àn
;

1530 
SANE_P¨amëîs
 
∑rm
;

1531 
SANE_Sètus
 
°©us
;

1532 
Image
 
image
 = { 0, 0, 0, 0, 0 };

1533 c⁄° *
f‹m©_«me
[] =

1536 #ifde‡
SANE_STATUS_WARMING_UP


1539 
°©us
 = 
	`ß√_°¨t
 (
devi˚
);

1541 
°©us
 =
SANE_STATUS_WARMING_UP
);

1543 
°©us
 = 
	`ß√_°¨t
 (
devi˚
);

1546 i‡(
°©us
 !
SANE_STATUS_GOOD
)

1548 
	`Ârötf
 (
°dîr
, "%s: sane_start: %s\n",

1549 
¥og_«me
, 
	`ß√_°r°©us
 (
°©us
));

1550 
˛ónup
;

1553 
°©us
 = 
	`ß√_gë_∑ømëîs
 (
devi˚
, &
∑rm
);

1554 i‡(
°©us
 !
SANE_STATUS_GOOD
)

1556 
	`Ârötf
 (
°dîr
, "%s: sane_get_parameters: %s\n",

1557 
¥og_«me
, 
	`ß√_°r°©us
 (
°©us
));

1558 
˛ónup
;

1561 i‡(
∑rm
.
löes
 >= 0)

1562 
	`Ârötf
 (
°dîr
, "%s: scanning image of size %dx%dÖixelsát "

1563 "%d bôs/pixñ\n", 
¥og_«me
, 
∑rm
.
pixñs_≥r_löe
,Ö¨m.
löes
,

1564 8 * 
∑rm
.
byãs_≥r_löe
 /Ö¨m.
pixñs_≥r_löe
);

1566 
	`Ârötf
 (
°dîr
, "%s: scanning image %dÖixels wideánd "

1568 
¥og_«me
, 
∑rm
.
pixñs_≥r_löe
,

1569 8 * 
∑rm
.
byãs_≥r_löe
 /Ö¨m.
pixñs_≥r_löe
);

1570 
	`Ârötf
 (
°dîr
, "%s:ácquúög %†‰ame, %d bôs/ßm∂e\n", 
¥og_«me
,

1571 
∑rm
.
f‹m©
 <
SANE_FRAME_BLUE
 ? 
f‹m©_«me
[parm.format]:"Unknown",

1572 
∑rm
.
dïth
);

1574 
image
.
d©a
 = 
	`mÆloc
 (
∑rm
.
byãs_≥r_löe
 * 2);

1576 
	`˛ón_buf„r
 (
image
.
d©a
, 
∑rm
.
byãs_≥r_löe
 * 2);

1577 
	`Ârötf
 (
°dîr
, "%s:Ñódög o√ sˇ∆öe, %d byãs...\t", 
¥og_«me
,

1578 
∑rm
.
byãs_≥r_löe
);

1579 
°©us
 = 
	`ß√_ªad
 (
devi˚
, 
image
.
d©a
, 
∑rm
.
byãs_≥r_löe
, &
Àn
);

1580 
	`∑ss_Áû
 (
∑rm
.
byãs_≥r_löe
, 
Àn
, 
image
.
d©a
, 
°©us
);

1581 i‡(
°©us
 !
SANE_STATUS_GOOD
)

1582 
˛ónup
;

1584 
	`˛ón_buf„r
 (
image
.
d©a
, 
∑rm
.
byãs_≥r_löe
 * 2);

1585 
	`Ârötf
 (
°dîr
, "%s:Ñódög o√ byã...\t\t", 
¥og_«me
);

1586 
°©us
 = 
	`ß√_ªad
 (
devi˚
, 
image
.
d©a
, 1, &
Àn
);

1587 
	`∑ss_Áû
 (1, 
Àn
, 
image
.
d©a
, 
°©us
);

1588 i‡(
°©us
 !
SANE_STATUS_GOOD
)

1589 
˛ónup
;

1591 
i
 = 2; i < 
∑rm
.
byãs_≥r_löe
 * 2; i *= 2)

1593 
	`˛ón_buf„r
 (
image
.
d©a
, 
∑rm
.
byãs_≥r_löe
 * 2);

1594 
	`Ârötf
 (
°dîr
, "%s: sãµedÑód, %d byãs... \t", 
¥og_«me
, 
i
);

1595 
°©us
 = 
	`ß√_ªad
 (
devi˚
, 
image
.
d©a
, 
i
, &
Àn
);

1596 
	`∑ss_Áû
 (
i
, 
Àn
, 
image
.
d©a
, 
°©us
);

1597 i‡(
°©us
 !
SANE_STATUS_GOOD
)

1598 
˛ónup
;

1601 
i
 /= 2; i > 2; i /= 2)

1603 
	`˛ón_buf„r
 (
image
.
d©a
, 
∑rm
.
byãs_≥r_löe
 * 2);

1604 
	`Ârötf
 (
°dîr
, "%s: sãµedÑód, %d byãs... \t", 
¥og_«me
, 
i
 - 1);

1605 
°©us
 = 
	`ß√_ªad
 (
devi˚
, 
image
.
d©a
, 
i
 - 1, &
Àn
);

1606 
	`∑ss_Áû
 (
i
 - 1, 
Àn
, 
image
.
d©a
, 
°©us
);

1607 i‡(
°©us
 !
SANE_STATUS_GOOD
)

1608 
˛ónup
;

1611 
˛ónup
:

1612 
	`ß√_ˇn˚l
 (
devi˚
);

1613 i‡(
image
.
d©a
)

1614 
	`‰ì
 (
image
.
d©a
);

1615  
°©us
;

1616 
	}
}

1620 
	$gë_ªsﬁuti⁄
 ()

1622 c⁄° 
SANE_O±i⁄_Des¸ùt‹
 *
ªs›t
;

1623 
ªsﬁ
 = 0;

1624 *
vÆ
;

1626 i‡(
ªsﬁuti⁄_›töd
 < 0)

1628 
ªs›t
 = 
	`ß√_gë_›ti⁄_des¸ùt‹
 (
devi˚
, 
ªsﬁuti⁄_›töd
);

1629 i‡(!
ªs›t
)

1632 
vÆ
 = 
	`Æloˇ
 (
ªs›t
->
size
);

1633 i‡(!
vÆ
)

1636 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
ªsﬁuti⁄_›töd
, 
SANE_ACTION_GET_VALUE
, 
vÆ
,

1638 i‡(
ªs›t
->
ty≥
 =
SANE_TYPE_INT
)

1639 
ªsﬁ
 = *(
SANE_I¡
 *Ë
vÆ
;

1641 
ªsﬁ
 = (Ë(
	`SANE_UNFIX
 (*(
SANE_Fixed
 *Ë
vÆ
) + 0.5);

1643  
ªsﬁ
;

1644 
	}
}

1647 
	$sˇnimage_exô
 ()

1649 i‡(
devi˚
)

1651 i‡(
vîbo£
 > 1)

1652 
	`Ârötf
 (
°dîr
, "Closing device\n");

1653 
	`ß√_˛o£
 (
devi˚
);

1655 i‡(
vîbo£
 > 1)

1656 
	`Ârötf
 (
°dîr
, "Calling sane_exit\n");

1657 
	`ß√_exô
 ();

1659 i‡(
Æl_›ti⁄s
)

1660 
	`‰ì
 (
Æl_›ti⁄s
);

1661 i‡(
›ti⁄_numbî
)

1662 
	`‰ì
 (
›ti⁄_numbî
);

1663 i‡(
vîbo£
 > 1)

1664 
	`Ârötf
 (
°dîr
, "scanimage: finished\n");

1665 
	}
}

1673 
	$¥öt_›ti⁄s
(
SANE_Devi˚
 * 
devi˚
, 
SANE_I¡
 
num_dev_›ti⁄s
, 
SANE_Boﬁ
 
ro
)

1675 
i
, 
j
;

1676 c⁄° 
SANE_O±i⁄_Des¸ùt‹
 *
›t
;

1678 
i
 = 1; i < 
num_dev_›ti⁄s
; ++i)

1680 
›t
 = 0;

1683 
j
 = 0; j < 4; ++j)

1684 i‡(
i
 =
wödow
[
j
])

1685 
›t
 = 
wödow_›ti⁄
 + 
j
;

1687 i‡(!
›t
)

1688 
›t
 = 
	`ß√_gë_›ti⁄_des¸ùt‹
 (
devi˚
, 
i
);

1690 i‡(
ro
 || 
	`SANE_OPTION_IS_SETTABLE
 (
›t
->
ˇp
)

1691 || 
›t
->
ty≥
 =
SANE_TYPE_GROUP
)

1692 
	`¥öt_›ti⁄
 (
devi˚
, 
i
, 
›t
);

1694 i‡(
num_dev_›ti⁄s
)

1695 
	`Âutc
 ('\n', 
°dout
);

1696 
	}
}

1699 
	$maö
 (
¨gc
, **
¨gv
)

1701 
ch
, 
i
, 
ödex
, 
Æl_›ti⁄s_Àn
;

1702 c⁄° 
SANE_Devi˚
 **
devi˚_li°
;

1703 
SANE_I¡
 
num_dev_›ti⁄s
 = 0;

1704 c⁄° *
dev«me
 = 0;

1705 c⁄° *
defdev«me
 = 0;

1706 c⁄° *
f‹m©
 = 0;

1707 
ªadbuf
[2];

1708 *
ªadbuf2
;

1709 
b©ch
 = 0;

1710 
b©ch_¥om±
 = 0;

1711 
b©ch_cou¡
 = 
BATCH_COUNT_UNLIMITED
;

1712 
b©ch_°¨t_©
 = 1;

1713 
b©ch_ö¸emít
 = 1;

1714 
SANE_Sètus
 
°©us
;

1715 *
fuŒ_›t°rög
;

1716 
SANE_I¡
 
vîsi⁄_code
;

1718 
	`©exô
 (
sˇnimage_exô
);

1720 
buf„r_size
 = (32 * 1024);

1722 
¥og_«me
 = 
	`°ºchr
 (
¨gv
[0], '/');

1723 i‡(
¥og_«me
)

1724 ++
¥og_«me
;

1726 
¥og_«me
 = 
¨gv
[0];

1728 
defdev«me
 = 
	`gëív
 ("SANE_DEFAULT_DEVICE");

1730 
	`ß√_öô
 (&
vîsi⁄_code
, 
auth_ˇŒback
);

1734 
›ãº
 = 0;

1735 (
ch
 = 
	`gë›t_l⁄g
 (
¨gc
, 
¨gv
, "-" 
BASE_OPTSTRING
, 
basic_›ti⁄s
,

1736 &
ödex
)Ë!
EOF
)

1738 
ch
)

1744 
dev«me
 = 
›èrg
;

1748 
b©ch
 = 1;

1749 
f‹m©
 = 
›èrg
;

1752 
hñp
 = 1;

1755 
icc_¥ofûe
 = 
›èrg
;

1758 ++
vîbo£
;

1761 
¥ogªss
 = 1;

1764 i‡(
›èrg
)

1765 
buf„r_size
 = 1024 * 
	`©oi
(
›èrg
);

1767 
buf„r_size
 = (1024 * 1024);

1770 
ã°
 = 1;

1773 
Æl
 = 1;

1776 
d⁄t_sˇn
 = 1;

1778 
OPTION_BATCH_PROMPT
:

1779 
b©ch_¥om±
 = 1;

1781 
OPTION_BATCH_INCREMENT
:

1782 
b©ch_ö¸emít
 = 
	`©oi
 (
›èrg
);

1784 
OPTION_BATCH_START_AT
:

1785 
b©ch_°¨t_©
 = 
	`©oi
 (
›èrg
);

1787 
OPTION_BATCH_DOUBLE
:

1788 
b©ch_ö¸emít
 = 2;

1790 
OPTION_BATCH_COUNT
:

1791 
b©ch_cou¡
 = 
	`©oi
 (
›èrg
);

1792 
b©ch
 = 1;

1794 
OPTION_FORMAT
:

1795 i‡(
	`°rcmp
 (
›èrg
, "tiff") == 0)

1796 
ouçut_f‹m©
 = 
OUTPUT_TIFF
;

1798 
ouçut_f‹m©
 = 
OUTPUT_PNM
;

1800 
OPTION_MD5
:

1801 
ac˚±_⁄ly_md5_auth
 = 1;

1806 
i
 = 0;

1808 
°©us
 = 
	`ß√_gë_devi˚s
 (&
devi˚_li°
, 
SANE_FALSE
);

1809 i‡(
°©us
 !
SANE_STATUS_GOOD
)

1811 
	`Ârötf
 (
°dîr
, "%s: sane_get_devices() failed: %s\n",

1812 
¥og_«me
, 
	`ß√_°r°©us
 (
°©us
));

1813 
	`exô
 (1);

1816 i‡(
ch
 == 'L')

1818 
i
 = 0; 
devi˚_li°
[i]; ++i)

1820 
	`¥ötf
 ("device `%s' isá %s %s %s\n",

1821 
devi˚_li°
[
i
]->
«me
, devi˚_li°[i]->
víd‹
,

1822 
devi˚_li°
[
i
]->
modñ
, devi˚_li°[i]->
ty≥
);

1827 
i
 = 0, 
öt_¨g
 = 0;

1828 *
≥r˚¡
, *
°¨t
, *
fmt
;

1829 c⁄° *
ãxt_¨g
 = 0;

1830 
cc
, 
·y≥
;

1832 
fmt
 = 
	`mÆloc
 (
	`°æí
 (
›èrg
) + 1);

1833 i‡(
fmt
 == 0)

1835 
	`Ârötf
 (
°dîr
, "%s:ÇŸÉnough mem‹y\n", 
¥og_«me
);

1836 
	`exô
 (1);

1839 
i
 = 0; 
devi˚_li°
[i]; ++i)

1841 
	`°r˝y
 (
fmt
, 
›èrg
);

1842 
°¨t
 = 
fmt
;

1843 *
°¨t
 && (
≥r˚¡
 = 
	`°rchr
 (start, '%')))

1845 
≥r˚¡
++;

1846 i‡(*
≥r˚¡
)

1848 *
≥r˚¡
)

1851 
ãxt_¨g
 = 
devi˚_li°
[
i
]->
«me
;

1852 
·y≥
 = *
≥r˚¡
 = 's';

1855 
ãxt_¨g
 = 
devi˚_li°
[
i
]->
víd‹
;

1856 
·y≥
 = *
≥r˚¡
 = 's';

1859 
ãxt_¨g
 = 
devi˚_li°
[
i
]->
modñ
;

1860 
·y≥
 = *
≥r˚¡
 = 's';

1863 
ãxt_¨g
 = 
devi˚_li°
[
i
]->
ty≥
;

1864 
·y≥
 = *
≥r˚¡
 = 's';

1867 
öt_¨g
 = 
i
;

1868 
·y≥
 = 'i';

1871 
ãxt_¨g
 = "\n";

1872 
·y≥
 = *
≥r˚¡
 = 's';

1875 
·y≥
 = 0;

1878 
	`Ârötf
 (
°dîr
,

1880 
¥og_«me
, *
≥r˚¡
);

1881 *
≥r˚¡
 = '%';

1882 
·y≥
 = 0;

1884 
≥r˚¡
++;

1885 
cc
 = *
≥r˚¡
;

1886 *
≥r˚¡
 = 0;

1887 
·y≥
)

1890 
	`¥ötf
 (
°¨t
, 
ãxt_¨g
);

1893 
	`¥ötf
 (
°¨t
, 
öt_¨g
);

1896 
	`¥ötf
 (
°¨t
);

1899 *
≥r˚¡
 = 
cc
;

1900 
°¨t
 = 
≥r˚¡
;

1905 *
°¨t
 = 0;

1909 i‡(*
°¨t
)

1910 
	`¥ötf
 (
°¨t
);

1913 i‡(
i
 =0 && 
ch
 != 'f')

1914 
	`¥ötf
 ("\nNo scanners were identified. If you wereÉxpecting "

1920 i‡(
defdev«me
)

1921 
	`¥ötf
 ("deÁu… devi˚ i†`%s'\n", 
defdev«me
);

1922 
	`exô
 (0);

1926 
	`¥ötf
 ("sˇnimagê(%sË%s; backíd vîsi⁄ %d.%d.%d\n", 
PACKAGE
,

1927 
VERSION
, 
	`SANE_VERSION_MAJOR
 (
vîsi⁄_code
),

1928 
	`SANE_VERSION_MINOR
 (
vîsi⁄_code
),

1929 
	`SANE_VERSION_BUILD
 (
vîsi⁄_code
));

1930 
	`exô
 (0);

1937 i‡(
hñp
)

1939 
	`¥ötf
 ("Ußge: %†[OPTION]...\n\
\n\
 imagêacquisôi⁄ o¿®sˇ¬î devi˚ánd wrôêimagêd©®to\n\
 ouçut.\n\
\n\
áª sï¨©ed byá bœnk from sögÀ-ch¨a˘î o±i⁄†”.g.\n\
-dÉps⁄Ë™d byá \"=\" from mu…i-ch¨a˘î o±i⁄†”.g. --devi˚-«meÛps⁄).\n\
-d, --devi˚-«me=DEVICE u£á giví sˇ¬î devi˚ (e.g. hp:/dev/sˇ¬î)\n\
--f‹m©ınm|tif‡ fûêf‹m© o‡ouçuàfûe\n\
-i, --icc-¥ofûe=PROFILE in˛udêthi†ICCÖrofûêötÿTIFF fûe\n", 
¥og_«me
);

1949 
	`¥ötf
 ("\
-L, --list-devices showávailable scanner devices\n\
-f, --formatted-device-list=FORMAT similarÅo -L, butÅhe FORMAT ofÅhe output\n\
 be specified: %%d (deviceÇame), %%v (vendor),\n\
%%m (model), %%t (type), %%i (indexÇumber),ánd\n\
%%n (newline)\n\
-b, --batch[=FORMAT] working in batch mode, FORMAT is `out%%d.pnm' or\n\
`out%%d.tif' by default depending on --format\n");

1957 
	`¥ötf
 ("\
--batch-start=#ÖageÇumberÅo startÇaming files with\n\
--batch-count=# how manyÖagesÅo scan in batch mode\n\
--batch-increment=# increaseÖageÇumber in filename by #\n\
--batch-double incrementÖageÇumber byÅwo, sameás\n\
--batch-increment=2\n\
--batch-promptásk forÖressingá key before scanningáÖage\n\
--accept-md5-only onlyácceptáuthorizationÑequests using md5\n");

1965 
	`¥ötf
 ("\
-p, --progressÖrintÖrogress messages\n\
-n, --dont-scan only set options, don'táctually scan\n\
-T, --testÅest backendÅhoroughly\n\
-A, --all-optionsÜistállávailable backend options\n\
-h, --help displayÅhis help messageándÉxit\n\
-v, --verbose giveÉven more status messages\n\
-B, --buffer-size=# change input buffer size (in kB, default 32)\n\
-V, --versionÖrint version information\n");

1976 i‡(!
dev«me
)

1981 
dev«me
 = 
defdev«me
;

1982 i‡(!
dev«me
)

1984 
°©us
 = 
	`ß√_gë_devi˚s
 (&
devi˚_li°
, 
SANE_FALSE
);

1985 i‡(
°©us
 !
SANE_STATUS_GOOD
)

1987 
	`Ârötf
 (
°dîr
, "%s: sane_get_devices() failed: %s\n",

1988 
¥og_«me
, 
	`ß√_°r°©us
 (
°©us
));

1989 
	`exô
 (1);

1991 i‡(!
devi˚_li°
[0])

1993 
	`Ârötf
 (
°dîr
, "%s:ÇÿSANE devi˚†found\n", 
¥og_«me
);

1994 
	`exô
 (1);

1996 
dev«me
 = 
devi˚_li°
[0]->
«me
;

2000 
°©us
 = 
	`ß√_›í
 (
dev«me
, &
devi˚
);

2001 i‡(
°©us
 !
SANE_STATUS_GOOD
)

2003 
	`Ârötf
 (
°dîr
, "%s: open of device %s failed: %s\n",

2004 
¥og_«me
, 
dev«me
, 
	`ß√_°r°©us
 (
°©us
));

2005 i‡(
dev«me
[0] == '/')

2006 
	`Ârötf
 (
°dîr
, "\nYou seemÅo have specifiedá UNIX deviceÇame, "

2013 i‡(
hñp
)

2014 
devi˚
 = 0;

2016 
	`exô
 (1);

2019 i‡(
devi˚
)

2021 c⁄° 
SANE_O±i⁄_Des¸ùt‹
 * 
desc_±r
;

2024 
desc_±r
 = 
	`ß√_gë_›ti⁄_des¸ùt‹
(
devi˚
, 0);

2025 i‡(!
desc_±r
)

2027 
	`Ârötf
 (
°dîr
, "%s: unableÅo get option count descriptor\n",

2028 
¥og_«me
);

2029 
	`exô
 (1);

2033 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 0, 
SANE_ACTION_GET_VALUE
,

2034 &
num_dev_›ti⁄s
, 0);

2035 i‡(
°©us
 !
SANE_STATUS_GOOD
)

2037 
	`Ârötf
 (
°dîr
, "%s: unableÅo determine option count\n",

2038 
¥og_«me
);

2039 
	`exô
 (1);

2043 
Æl_›ti⁄s_Àn
 = 
num_dev_›ti⁄s
 + 
	`NELEMS
 (
basic_›ti⁄s
) + 1;

2044 
Æl_›ti⁄s
 = 
	`mÆloc
 (
Æl_›ti⁄s_Àn
 *  (all_options[0]));

2045 
›ti⁄_numbî_Àn
 = 
num_dev_›ti⁄s
;

2046 
›ti⁄_numbî
 = 
	`mÆloc
 (
›ti⁄_numbî_Àn
 *  (option_number[0]));

2047 i‡(!
Æl_›ti⁄s
 || !
›ti⁄_numbî
)

2049 
	`Ârötf
 (
°dîr
, "%s: out of memory in main()\n",

2050 
¥og_«me
);

2051 
	`exô
 (1);

2055 
	`„tch_›ti⁄s
 (
devi˚
);

2058 *
œrg
, *
èrg
, *
x¨g
, *
y¨g
;

2059 
œrg
 = 
èrg
 = 
x¨g
 = 
y¨g
 = "";

2062 i‡(
wödow
[0])

2063 
x¨g
 = "x:";

2065 i‡(
wödow
[1])

2066 
y¨g
 = "y:";

2068 i‡(
wödow
[2])

2069 
œrg
 = "l:";

2071 i‡(
wödow
[3])

2072 
èrg
 = "t:";

2075 
fuŒ_›t°rög
 = 
	`mÆloc
 (
	`°æí
 (
BASE_OPTSTRING
)

2076 + 
	`°æí
 (
œrg
Ë+ såÀ¿(
èrg
)

2077 + 
	`°æí
 (
x¨g
Ë+ såÀ¿(
y¨g
) + 1);

2079 i‡(!
fuŒ_›t°rög
)

2081 
	`Ârötf
 (
°dîr
, "%s: ouào‡mem‹y\n", 
¥og_«me
);

2082 
	`exô
 (1);

2085 
	`°r˝y
 (
fuŒ_›t°rög
, 
BASE_OPTSTRING
);

2086 
	`°rˇt
 (
fuŒ_›t°rög
, 
œrg
);

2087 
	`°rˇt
 (
fuŒ_›t°rög
, 
èrg
);

2088 
	`°rˇt
 (
fuŒ_›t°rög
, 
x¨g
);

2089 
	`°rˇt
 (
fuŒ_›t°rög
, 
y¨g
);

2094 
›töd
 = 0;

2095 
›ãº
 = 1;

2096 (
ch
 = 
	`gë›t_l⁄g
 (
¨gc
, 
¨gv
, 
fuŒ_›t°rög
, 
Æl_›ti⁄s
,

2097 &
ödex
)Ë!
EOF
)

2099 
ch
)

2103 
	`exô
 (1);

2116 
wödow_vÆ_u£r
[0] = 1;

2117 
	`∑r£_ve˘‹
 (&
wödow_›ti⁄
[0], 
›èrg
, &
wödow_vÆ
[0], 1);

2121 
wödow_vÆ_u£r
[1] = 1;

2122 
	`∑r£_ve˘‹
 (&
wödow_›ti⁄
[1], 
›èrg
, &
wödow_vÆ
[1], 1);

2126 
	`¥o˚ss_backíd_›ti⁄
 (
devi˚
, 
wödow
[2], 
›èrg
);

2130 
	`¥o˚ss_backíd_›ti⁄
 (
devi˚
, 
wödow
[3], 
›èrg
);

2134 
	`¥o˚ss_backíd_›ti⁄
 (
devi˚
, 
›ti⁄_numbî
[
ödex
], 
›èrg
);

2138 i‡(
›töd
 < 
¨gc
)

2140 
	`Ârötf
 (
°dîr
, "%s:árgumíàwôhouà›ti⁄: `%s'; ", 
¥og_«me
,

2141 
¨gv
[
¨gc
 - 1]);

2142 
	`Ârötf
 (
°dîr
, "åy %†--hñp\n", 
¥og_«me
);

2143 
	`exô
 (1);

2146 
	`‰ì
 (
fuŒ_›t°rög
);

2149 
ödex
 = 0; index < 2; ++index)

2150 i‡(
wödow
[
ödex
])

2152 
SANE_W‹d
 
pos
 = 0;

2153 
SANE_W‹d
 
vÆ
 = 
wödow_vÆ
[
ödex
];

2155 i‡(
wödow
[
ödex
 + 2])

2157 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
wödow
[
ödex
 + 2],

2158 
SANE_ACTION_GET_VALUE
, &
pos
, 0);

2159 
vÆ
 +
pos
;

2161 
	`£t_›ti⁄
 (
devi˚
, 
wödow
[
ödex
], &
vÆ
);

2165 i‡(
hñp
)

2167 
	`¥ötf
 ("\nO±i⁄†•ecifi¯tÿdevi˚ `%s':\n", 
dev«me
);

2168 
	`¥öt_›ti⁄s
(
devi˚
, 
num_dev_›ti⁄s
, 
SANE_FALSE
);

2172 i‡(
Æl
)

2174 
	`¥ötf
 ("\nAŒ o±i⁄†•ecifi¯tÿdevi˚ `%s':\n", 
dev«me
);

2175 
	`¥öt_›ti⁄s
(
devi˚
, 
num_dev_›ti⁄s
, 
SANE_TRUE
);

2176 
	`exô
 (0);

2181 i‡(
hñp
)

2183 
	`¥ötf
 ("\
 ``%†--hñ∞-d DEVICE''ÅÿgëÜi° o‡Æ»›ti⁄†f‹ DEVICE.\n\
\n\
 o‡avaûabÀ devi˚s:", 
¥og_«me
);

2187 
°©us
 = 
	`ß√_gë_devi˚s
 (&
devi˚_li°
, 
SANE_FALSE
);

2188 i‡(
°©us
 =
SANE_STATUS_GOOD
)

2190 
cﬁumn
 = 80;

2192 
i
 = 0; 
devi˚_li°
[i]; ++i)

2194 i‡(
cﬁumn
 + 
	`°æí
 (
devi˚_li°
[
i
]->
«me
) + 1 >= 80)

2196 
	`¥ötf
 ("\n ");

2197 
cﬁumn
 = 4;

2199 i‡(
cﬁumn
 > 4)

2201 
	`Âutc
 (' ', 
°dout
);

2202 
cﬁumn
 += 1;

2204 
	`Âuts
 (
devi˚_li°
[
i
]->
«me
, 
°dout
);

2205 
cﬁumn
 +
	`°æí
 (
devi˚_li°
[
i
]->
«me
);

2208 
	`Âutc
 ('\n', 
°dout
);

2209 
	`exô
 (0);

2212 i‡(
d⁄t_sˇn
)

2213 
	`exô
 (0);

2215 i‡(
ouçut_f‹m©
 !
OUTPUT_PNM
)

2216 
ªsﬁuti⁄_vÆue
 = 
	`gë_ªsﬁuti⁄
 ();

2218 #ifde‡
SIGHUP


2219 
	`sig«l
 (
SIGHUP
, 
sigh™dÀr
);

2221 #ifde‡
SIGPIPE


2222 
	`sig«l
 (
SIGPIPE
, 
sigh™dÀr
);

2224 
	`sig«l
 (
SIGINT
, 
sigh™dÀr
);

2225 
	`sig«l
 (
SIGTERM
, 
sigh™dÀr
);

2227 i‡(
ã°
 == 0)

2229 
n
 = 
b©ch_°¨t_©
;

2231 i‡(
b©ch
 && 
NULL
 =
f‹m©
)

2233 i‡(
ouçut_f‹m©
 =
OUTPUT_TIFF
)

2234 
f‹m©
 = "out%d.tif";

2236 
f‹m©
 = "out%d.pnm";

2239 i‡(
b©ch
)

2240 
	`Ârötf
 (
°dîr
,

2242 
b©ch_cou¡
, 
b©ch_ö¸emít
, 
b©ch_°¨t_©
);

2244 if(
	`ißây
(
	`fûío
(
°dout
))){

2245 
	`Ârötf
 (
°dîr
,"%s: ouçuài†nŸá fûe,Éxôög\n", 
¥og_«me
);

2246 
	`exô
 (1);

2249 
buf„r
 = 
	`mÆloc
 (
buf„r_size
);

2253 
∑th
[
PATH_MAX
];

2254 
∑π_∑th
[
PATH_MAX
];

2255 i‡(
b©ch
)

2257 
	`•rötf
 (
∑th
, 
f‹m©
, 
n
);

2258 
	`°r˝y
 (
∑π_∑th
, 
∑th
);

2259 
	`°rˇt
 (
∑π_∑th
, ".part");

2263 i‡(
b©ch
)

2265 i‡(
b©ch_¥om±
)

2267 
	`Ârötf
 (
°dîr
, "Place documentÇo. %d onÅhe scanner.\n",

2268 
n
);

2269 
	`Ârötf
 (
°dîr
, "Press <RETURN>Åo continue.\n");

2270 
	`Ârötf
 (
°dîr
, "Press Ctrl + DÅoÅerminate.\n");

2271 
ªadbuf2
 = 
	`fgës
 (
ªadbuf
, 2, 
°dö
);

2273 i‡(
ªadbuf2
 =
NULL
)

2275 
	`Ârötf
 (
°dîr
, "BatchÅerminated, %dÖages scanned\n",

2276 (
n
 - 
b©ch_ö¸emít
));

2277 
	`f˛o£
 (
°dout
);

2281 
	`Ârötf
 (
°dîr
, "Sˇ¬ögÖagê%d\n", 
n
);

2284 #ifde‡
SANE_STATUS_WARMING_UP


2287 
°©us
 = 
	`ß√_°¨t
 (
devi˚
);

2289 
°©us
 =
SANE_STATUS_WARMING_UP
);

2291 
°©us
 = 
	`ß√_°¨t
 (
devi˚
);

2293 i‡(
°©us
 !
SANE_STATUS_GOOD
)

2295 
	`Ârötf
 (
°dîr
, "%s: sane_start: %s\n",

2296 
¥og_«me
, 
	`ß√_°r°©us
 (
°©us
));

2297 
	`f˛o£
 (
°dout
);

2302 i‡(
b©ch
 && 
NULL
 =
	`‰e›í
 (
∑π_∑th
, "w", 
°dout
))

2304 
	`Ârötf
 (
°dîr
, "ˇ¬Ÿ o≥¿%s\n", 
∑π_∑th
);

2305 
	`ß√_ˇn˚l
 (
devi˚
);

2306  
SANE_STATUS_ACCESS_DENIED
;

2309 
°©us
 = 
	`sˇn_ô
 ();

2310 i‡(
b©ch
)

2312 
	`Ârötf
 (
°dîr
, "Sˇ¬edÖagê%d.", 
n
);

2313 
	`Ârötf
 (
°dîr
, " (sˇ¬î sètu†%d)\n", 
°©us
);

2316 
°©us
)

2318 
SANE_STATUS_GOOD
:

2319 
SANE_STATUS_EOF
:

2320 
°©us
 = 
SANE_STATUS_GOOD
;

2321 i‡(
b©ch
)

2325 i‡(
NULL
 =
	`‰e›í
 ("/dev/nuŒ", "w", 
°dout
))

2327 
	`Ârötf
 (
°dîr
, "cannot open /dev/null\n");

2328 
	`ß√_ˇn˚l
 (
devi˚
);

2329  
SANE_STATUS_ACCESS_DENIED
;

2334 i‡(
	`ª«me
 (
∑π_∑th
, 
∑th
))

2336 
	`Ârötf
 (
°dîr
, "cannotÑename %sÅo %s\n",

2337 
∑π_∑th
, 
∑th
);

2338 
	`ß√_ˇn˚l
 (
devi˚
);

2339  
SANE_STATUS_ACCESS_DENIED
;

2345 i‡(
b©ch
)

2347 
	`f˛o£
 (
°dout
);

2348 
	`u∆ök
 (
∑π_∑th
);

2352 
n
 +
b©ch_ö¸emít
;

2354 (
b©ch


2355 && (
b©ch_cou¡
 =
BATCH_COUNT_UNLIMITED
 || --batch_count))

2356 && 
SANE_STATUS_GOOD
 =
°©us
);

2358 
	`ß√_ˇn˚l
 (
devi˚
);

2361 
°©us
 = 
	`ã°_ô
 ();

2363  
°©us
;

2364 
	}
}

	@stiff.c

24 #ifde‡
_AIX


25 
	~"../ö˛ude/œŒoˇ.h
"

28 
	~<°dlib.h
>

29 
	~<°dio.h
>

31 
	~"../ö˛ude/ß√/c⁄fig.h
"

32 
	~"../ö˛ude/ß√/ß√.h
"

34 
	~"°iff.h
"

37 
	mèg
, 
	mtyp
, 
	mnvÆs
, 
	mvÆ
;

38 } 
	tIFD_ENTRY
;

42 
	mmaxègs
;

43 
	m¡ags
;

44 
IFD_ENTRY
 *
	mifde
;

45 } 
	tIFD
;

47 
	#IFDE_TYP_BYTE
 (1)

	)

48 
	#IFDE_TYP_ASCII
 (2)

	)

49 
	#IFDE_TYP_SHORT
 (3)

	)

50 
	#IFDE_TYP_LONG
 (4)

	)

51 
	#IFDE_TYP_RATIONAL
 (5)

	)

53 
IFD
 *

54 
	$¸óã_ifd
 ()

56 { 
IFD
 *
ifd
;

57 
maxègs
 = 10;

59 
ifd
 = (
IFD
 *)
	`mÆloc
 ( (IFD));

60 i‡(
ifd
 =
NULL
)  NULL;

62 
ifd
->
ifde
 = (
IFD_ENTRY
 *)
	`mÆloc
 (
maxègs
 *  (IFD_ENTRY));

63 i‡(
ifd
->
ifde
 =
NULL
)

65 
	`‰ì
 (
ifd
);

66  
NULL
;

68 
ifd
->
¡ags
 = 0;

69 
ifd
->
maxègs
 = maxtags;

71  
ifd
;

72 
	}
}

75 
	$‰ì_ifd
 (
IFD
 *
ifd
)

78 i‡(
ifd
 =
NULL
) ;

79 i‡(
ifd
->
ifde
 !
NULL
)

81 
	`‰ì
 (
ifd
->
ifde
);

82 
ifd
->
ifde
 = 
NULL
;

84 
	`‰ì
 (
ifd
);

85 
ifd
 = 
NULL
;

86 
	}
}

89 
	$add_ifd_íåy
 (
IFD
 *
ifd
, 
èg
, 
typ
, 
nvÆs
, 
vÆ
)

91 { 
IFD_ENTRY
 *
ifde
;

92 
add_íåõs
 = 10;

94 i‡(
ifd
 =
NULL
) ;

95 i‡(
ifd
->
¡ags
 =ifd->
maxègs
)

97 
ifde
 = (
IFD_ENTRY
 *)
	`ªÆloc
 (
ifd
->ifde,

98 (
ifd
->
maxègs
+
add_íåõs
)* (
IFD_ENTRY
));

99 i‡(
ifde
 =
NULL
) ;

100 
ifd
->
ifde
 = ifde;

101 
ifd
->
maxègs
 +
add_íåõs
;

103 
ifde
 = &(
ifd
->ifde[ifd->
¡ags
]);

104 
ifde
->
èg
 =Åag;

105 
ifde
->
typ
 =Åyp;

106 
ifde
->
nvÆs
 =Çvals;

107 
ifde
->
vÆ
 = val;

108 (
ifd
->
¡ags
)++;

109 
	}
}

112 
	$wrôe_i2
 (
FILE
 *
Âå
, 
vÆ
, 
mŸ‹ﬁa
)

114 i‡(
mŸ‹ﬁa
)

116 
	`putc
 ((
vÆ
 >> 8Ë& 0xff, 
Âå
);

117 
	`putc
 (
vÆ
 & 0xff, 
Âå
);

121 
	`putc
 (
vÆ
 & 0xff, 
Âå
);

122 
	`putc
 ((
vÆ
 >> 8Ë& 0xff, 
Âå
);

124 
	}
}

128 
	$wrôe_i4
 (
FILE
 *
Âå
, 
vÆ
, 
mŸ‹ﬁa
)

130 i‡(
mŸ‹ﬁa
)

132 
	`putc
 ((
vÆ
 >> 24Ë& 0xff, 
Âå
);

133 
	`putc
 ((
vÆ
 >> 16Ë& 0xff, 
Âå
);

134 
	`putc
 ((
vÆ
 >> 8Ë& 0xff, 
Âå
);

135 
	`putc
 (
vÆ
 & 0xff, 
Âå
);

139 
	`putc
 (
vÆ
 & 0xff, 
Âå
);

140 
	`putc
 ((
vÆ
 >> 8Ë& 0xff, 
Âå
);

141 
	`putc
 ((
vÆ
 >> 16Ë& 0xff, 
Âå
);

142 
	`putc
 ((
vÆ
 >> 24Ë& 0xff, 
Âå
);

144 
	}
}

147 
	$wrôe_ifd
 (
FILE
 *
Âå
, 
IFD
 *
ifd
, 
mŸ‹ﬁa
)

148 {
k
;

149 
IFD_ENTRY
 *
ifde
;

151 i‡(!
ifd
) ;

153 i‡(
mŸ‹ﬁa
Ë
	`putc
 ('M', 
Âå
),Öutc ('M', fptr);

154 
	`putc
 ('I', 
Âå
),Öutc ('I', fptr);

156 
	`wrôe_i2
 (
Âå
, 42, 
mŸ‹ﬁa
);

157 
	`wrôe_i4
 (
Âå
, 8, 
mŸ‹ﬁa
);

158 
	`wrôe_i2
 (
Âå
, 
ifd
->
¡ags
, 
mŸ‹ﬁa
);

160 
k
 = 0; k < 
ifd
->
¡ags
; k++)

162 
ifde
 = &(
ifd
->ifde[
k
]);

163 
	`wrôe_i2
 (
Âå
, 
ifde
->
èg
, 
mŸ‹ﬁa
);

164 
	`wrôe_i2
 (
Âå
, 
ifde
->
typ
, 
mŸ‹ﬁa
);

165 
	`wrôe_i4
 (
Âå
, 
ifde
->
nvÆs
, 
mŸ‹ﬁa
);

166 i‡((
ifde
->
typ
 =
IFDE_TYP_SHORT
Ë&& (ifde->
nvÆs
 == 1))

168 
	`wrôe_i2
 (
Âå
, 
ifde
->
vÆ
, 
mŸ‹ﬁa
);

169 
	`wrôe_i2
 (
Âå
, 0, 
mŸ‹ﬁa
);

173 
	`wrôe_i4
 (
Âå
, 
ifde
->
vÆ
, 
mŸ‹ﬁa
);

176 
	`wrôe_i4
 (
Âå
, 0, 
mŸ‹ﬁa
);

177 
	}
}

181 
	$wrôe_tiff_bw_hódî
 (
FILE
 *
Âå
, 
width
, 
height
, 
ªsﬁuti⁄
)

182 {
IFD
 *
ifd
;

183 
hódî_size
 = 8, 
ifd_size
;

184 
°rù_off£t
, 
d©a_off£t
, 
d©a_size
;

185 
°rù_byãcou¡
;

186 
¡ags
;

187 
mŸ‹ﬁa
;

189 
ifd
 = 
	`¸óã_ifd
 ();

191 
°rù_byãcou¡
 = ((
width
+7)/8Ë* 
height
;

194 
¡ags
 = 12;

195 
d©a_size
 = 0;

196 i‡(
ªsﬁuti⁄
 > 0)

198 
¡ags
 += 3;

199 
d©a_size
 += 2*4 + 2*4;

202 
ifd_size
 = 2 + 
¡ags
*12 + 4;

203 
d©a_off£t
 = 
hódî_size
 + 
ifd_size
;

204 
°rù_off£t
 = 
d©a_off£t
 + 
d©a_size
;

207 
	`add_ifd_íåy
 (
ifd
, 254, 
IFDE_TYP_LONG
, 1, 0);

209 
	`add_ifd_íåy
 (
ifd
, 256, (
width
 > 0xffffË? 
IFDE_TYP_LONG
 : 
IFDE_TYP_SHORT
,

210 1, 
width
);

212 
	`add_ifd_íåy
 (
ifd
, 257, (
height
 > 0xffffË? 
IFDE_TYP_LONG
 : 
IFDE_TYP_SHORT
,

213 1, 
height
);

215 
	`add_ifd_íåy
 (
ifd
, 258, 
IFDE_TYP_SHORT
, 1, 1);

217 
	`add_ifd_íåy
 (
ifd
, 259, 
IFDE_TYP_SHORT
, 1, 1);

219 
	`add_ifd_íåy
 (
ifd
, 262, 
IFDE_TYP_SHORT
, 1, 0);

221 
	`add_ifd_íåy
 (
ifd
, 266, 
IFDE_TYP_SHORT
, 1, 1);

223 
	`add_ifd_íåy
 (
ifd
, 273, 
IFDE_TYP_LONG
, 1, 
°rù_off£t
);

225 
	`add_ifd_íåy
 (
ifd
, 274, 
IFDE_TYP_SHORT
, 1, 1);

227 
	`add_ifd_íåy
 (
ifd
, 277, 
IFDE_TYP_SHORT
, 1, 1);

229 
	`add_ifd_íåy
 (
ifd
, 278, 
IFDE_TYP_LONG
, 1, 
height
);

231 
	`add_ifd_íåy
 (
ifd
, 279, 
IFDE_TYP_LONG
, 1, 
°rù_byãcou¡
);

232 i‡(
ªsﬁuti⁄
 > 0)

235 
	`add_ifd_íåy
 (
ifd
, 282, 
IFDE_TYP_RATIONAL
, 1, 
d©a_off£t
);

236 
d©a_off£t
 += 2*4;

238 
	`add_ifd_íåy
 (
ifd
, 283, 
IFDE_TYP_RATIONAL
, 1, 
d©a_off£t
);

239 
d©a_off£t
 += 2*4;

241 i‡(
ªsﬁuti⁄
 > 0)

244 
	`add_ifd_íåy
 (
ifd
, 296, 
IFDE_TYP_SHORT
, 1, 2);

248 
mŸ‹ﬁa
 = 1;

249 
	`wrôe_ifd
 (
Âå
, 
ifd
, 
mŸ‹ﬁa
);

252 i‡(
ªsﬁuti⁄
 > 0)

254 
	`wrôe_i4
 (
Âå
, 
ªsﬁuti⁄
, 
mŸ‹ﬁa
);

255 
	`wrôe_i4
 (
Âå
, 1, 
mŸ‹ﬁa
);

256 
	`wrôe_i4
 (
Âå
, 
ªsﬁuti⁄
, 
mŸ‹ﬁa
);

257 
	`wrôe_i4
 (
Âå
, 1, 
mŸ‹ﬁa
);

260 
	`‰ì_ifd
 (
ifd
);

261 
	}
}

264 
	$wrôe_tiff_gªy_hódî
 (
FILE
 *
Âå
, 
width
, 
height
, 
dïth
,

265 
ªsﬁuti⁄
, c⁄° *
icc_¥ofûe
)

266 {
IFD
 *
ifd
;

267 
hódî_size
 = 8, 
ifd_size
;

268 
°rù_off£t
, 
d©a_off£t
, 
d©a_size
;

269 
°rù_byãcou¡
;

270 
¡ags
;

271 
mŸ‹ﬁa
, 
bps
, 
maxßm∂evÆue
;

272 
FILE
 *
icc_fûe
 = 0;

273 
icc_Àn
 = -1;

275 i‡(
icc_¥ofûe
)

277 
icc_fûe
 = 
	`f›í
(
icc_¥ofûe
, "r");

279 i‡(!
icc_fûe
)

281 
	`Ârötf
(
°dîr
, "CouldÇŸ o≥¿ICCÖrofûê%s\n", 
icc_¥ofûe
);

285 
icc_Àn
 = 16777216 * 
	`fgëc
(
icc_fûe
) + 65536 * fgetc(icc_file) + 256 * fgetc(icc_file) + fgetc(icc_file);

286 
	`ªwöd
(
icc_fûe
);

290 
ifd
 = 
	`¸óã_ifd
 ();

292 
bps
 = (
dïth
 <= 8) ? 1 : 2;

293 
maxßm∂evÆue
 = (
dïth
 <= 8) ? 255 : 65535;

294 
°rù_byãcou¡
 = 
width
 * 
height
 * 
bps
;

297 
¡ags
 = 13;

298 
d©a_size
 = 0;

299 i‡(
ªsﬁuti⁄
 > 0)

301 
¡ags
 += 3;

302 
d©a_size
 += 2*4 + 2*4;

305 i‡(
icc_Àn
 > 0)

307 
¡ags
 += 1;

308 
d©a_size
 +
icc_Àn
;

311 
ifd_size
 = 2 + 
¡ags
*12 + 4;

312 
d©a_off£t
 = 
hódî_size
 + 
ifd_size
;

313 
°rù_off£t
 = 
d©a_off£t
 + 
d©a_size
;

316 
	`add_ifd_íåy
 (
ifd
, 254, 
IFDE_TYP_LONG
, 1, 0);

318 
	`add_ifd_íåy
 (
ifd
, 256, (
width
 > 0xffffË? 
IFDE_TYP_LONG
 : 
IFDE_TYP_SHORT
,

319 1, 
width
);

321 
	`add_ifd_íåy
 (
ifd
, 257, (
height
 > 0xffffË? 
IFDE_TYP_LONG
 : 
IFDE_TYP_SHORT
,

322 1, 
height
);

324 
	`add_ifd_íåy
 (
ifd
, 258, 
IFDE_TYP_SHORT
, 1, 
dïth
);

326 
	`add_ifd_íåy
 (
ifd
, 259, 
IFDE_TYP_SHORT
, 1, 1);

328 
	`add_ifd_íåy
 (
ifd
, 262, 
IFDE_TYP_SHORT
, 1, 1);

330 
	`add_ifd_íåy
 (
ifd
, 273, 
IFDE_TYP_LONG
, 1, 
°rù_off£t
);

332 
	`add_ifd_íåy
 (
ifd
, 274, 
IFDE_TYP_SHORT
, 1, 1);

334 
	`add_ifd_íåy
 (
ifd
, 277, 
IFDE_TYP_SHORT
, 1, 1);

336 
	`add_ifd_íåy
 (
ifd
, 278, 
IFDE_TYP_LONG
, 1, 
height
);

338 
	`add_ifd_íåy
 (
ifd
, 279, 
IFDE_TYP_LONG
, 1, 
°rù_byãcou¡
);

340 
	`add_ifd_íåy
 (
ifd
, 280, 
IFDE_TYP_SHORT
, 1, 0);

342 
	`add_ifd_íåy
 (
ifd
, 281, 
IFDE_TYP_SHORT
, 1, 
maxßm∂evÆue
);

343 i‡(
ªsﬁuti⁄
 > 0)

346 
	`add_ifd_íåy
 (
ifd
, 282, 
IFDE_TYP_RATIONAL
, 1, 
d©a_off£t
);

347 
d©a_off£t
 += 2*4;

349 
	`add_ifd_íåy
 (
ifd
, 283, 
IFDE_TYP_RATIONAL
, 1, 
d©a_off£t
);

350 
d©a_off£t
 += 2*4;

352 i‡(
ªsﬁuti⁄
 > 0)

355 
	`add_ifd_íåy
 (
ifd
, 296, 
IFDE_TYP_SHORT
, 1, 2);

358 i‡(
icc_Àn
 > 0)

360 
	`add_ifd_íåy
(
ifd
, 34675, 7, 
icc_Àn
, 
d©a_off£t
);

361 
d©a_off£t
 +
icc_Àn
;

366 i‡(
bps
 == 1)

368 
mŸ‹ﬁa
 = 1;

371 {
check
 = 1;

372 
mŸ‹ﬁa
 = ((*((*)&
check
)) == 0);

375 
	`wrôe_ifd
 (
Âå
, 
ifd
, 
mŸ‹ﬁa
);

378 i‡(
ªsﬁuti⁄
 > 0)

380 
	`wrôe_i4
 (
Âå
, 
ªsﬁuti⁄
, 
mŸ‹ﬁa
);

381 
	`wrôe_i4
 (
Âå
, 1, 
mŸ‹ﬁa
);

382 
	`wrôe_i4
 (
Âå
, 
ªsﬁuti⁄
, 
mŸ‹ﬁa
);

383 
	`wrôe_i4
 (
Âå
, 1, 
mŸ‹ﬁa
);

387 i‡(
icc_Àn
 > 0)

389 
i
;

390 
i
=0; i<
icc_Àn
; i++)

392 i‡(!
	`„of
(
icc_fûe
))

394 
	`Âutc
(
	`fgëc
(
icc_fûe
), 
Âå
);

398 
	`Ârötf
(
°dîr
, "ICCÖrofûê%†i†toÿsh‹t\n", 
icc_¥ofûe
);

404 i‡(
icc_fûe
)

406 
	`f˛o£
(
icc_fûe
);

409 
	`‰ì_ifd
 (
ifd
);

410 
	}
}

414 
	$wrôe_tiff_cﬁ‹_hódî
 (
FILE
 *
Âå
, 
width
, 
height
, 
dïth
,

415 
ªsﬁuti⁄
, c⁄° *
icc_¥ofûe
)

416 {
IFD
 *
ifd
;

417 
hódî_size
 = 8, 
ifd_size
;

418 
°rù_off£t
, 
d©a_off£t
, 
d©a_size
;

419 
°rù_byãcou¡
;

420 
¡ags
;

421 
mŸ‹ﬁa
, 
bps
, 
maxßm∂evÆue
;

422 
FILE
 *
icc_fûe
 = 0;

423 
icc_Àn
 = -1;

425 i‡(
icc_¥ofûe
)

427 
icc_fûe
 = 
	`f›í
(
icc_¥ofûe
, "r");

429 i‡(!
icc_fûe
)

431 
	`Ârötf
(
°dîr
, "CouldÇŸ o≥¿ICCÖrofûê%s\n", 
icc_¥ofûe
);

435 
icc_Àn
 = 16777216 * 
	`fgëc
(
icc_fûe
) + 65536 * fgetc(icc_file) + 256 * fgetc(icc_file) + fgetc(icc_file);

436 
	`ªwöd
(
icc_fûe
);

441 
ifd
 = 
	`¸óã_ifd
 ();

443 
bps
 = (
dïth
 <= 8) ? 1 : 2;

444 
maxßm∂evÆue
 = (
dïth
 <= 8) ? 255 : 65535;

445 
°rù_byãcou¡
 = 
width
 * 
height
 * 3 * 
bps
;

448 
¡ags
 = 13;

449 
d©a_size
 = 3*2 + 3*2 + 3*2;

451 i‡(
ªsﬁuti⁄
 > 0)

453 
¡ags
 += 3;

454 
d©a_size
 += 2*4 + 2*4;

457 i‡(
icc_Àn
 > 0)

459 
¡ags
 += 1;

460 
d©a_size
 +
icc_Àn
;

464 
ifd_size
 = 2 + 
¡ags
*12 + 4;

465 
d©a_off£t
 = 
hódî_size
 + 
ifd_size
;

466 
°rù_off£t
 = 
d©a_off£t
 + 
d©a_size
;

469 
	`add_ifd_íåy
 (
ifd
, 254, 
IFDE_TYP_LONG
, 1, 0);

471 
	`add_ifd_íåy
 (
ifd
, 256, (
width
 > 0xffffË? 
IFDE_TYP_LONG
 : 
IFDE_TYP_SHORT
,

472 1, 
width
);

474 
	`add_ifd_íåy
 (
ifd
, 257, (
height
 > 0xffffË? 
IFDE_TYP_LONG
 : 
IFDE_TYP_SHORT
,

475 1, 
height
);

477 
	`add_ifd_íåy
 (
ifd
, 258, 
IFDE_TYP_SHORT
, 3, 
d©a_off£t
);

478 
d©a_off£t
 += 3*2;

480 
	`add_ifd_íåy
 (
ifd
, 259, 
IFDE_TYP_SHORT
, 1, 1);

482 
	`add_ifd_íåy
 (
ifd
, 262, 
IFDE_TYP_SHORT
, 1, 2);

484 
	`add_ifd_íåy
 (
ifd
, 273, 
IFDE_TYP_LONG
, 1, 
°rù_off£t
);

486 
	`add_ifd_íåy
 (
ifd
, 274, 
IFDE_TYP_SHORT
, 1, 1);

488 
	`add_ifd_íåy
 (
ifd
, 277, 
IFDE_TYP_SHORT
, 1, 3);

490 
	`add_ifd_íåy
 (
ifd
, 278, 
IFDE_TYP_LONG
, 1, 
height
);

492 
	`add_ifd_íåy
 (
ifd
, 279, 
IFDE_TYP_LONG
, 1, 
°rù_byãcou¡
);

494 
	`add_ifd_íåy
 (
ifd
, 280, 
IFDE_TYP_SHORT
, 3, 
d©a_off£t
);

495 
d©a_off£t
 += 3*2;

497 
	`add_ifd_íåy
 (
ifd
, 281, 
IFDE_TYP_SHORT
, 3, 
d©a_off£t
);

498 
d©a_off£t
 += 3*2;

500 i‡(
ªsﬁuti⁄
 > 0)

503 
	`add_ifd_íåy
 (
ifd
, 282, 
IFDE_TYP_RATIONAL
, 1, 
d©a_off£t
);

504 
d©a_off£t
 += 2*4;

506 
	`add_ifd_íåy
 (
ifd
, 283, 
IFDE_TYP_RATIONAL
, 1, 
d©a_off£t
);

507 
d©a_off£t
 += 2*4;

510 i‡(
ªsﬁuti⁄
 > 0)

513 
	`add_ifd_íåy
 (
ifd
, 296, 
IFDE_TYP_SHORT
, 1, 2);

516 i‡(
icc_Àn
 > 0)

518 
	`add_ifd_íåy
(
ifd
, 34675, 7, 
icc_Àn
, 
d©a_off£t
);

519 
d©a_off£t
 +
icc_Àn
;

525 i‡(
bps
 == 1)

527 
mŸ‹ﬁa
 = 1;

530 {
check
 = 1;

531 
mŸ‹ﬁa
 = ((*((*)&
check
)) == 0);

534 
	`wrôe_ifd
 (
Âå
, 
ifd
, 
mŸ‹ﬁa
);

537 
	`wrôe_i2
 (
Âå
, 
dïth
, 
mŸ‹ﬁa
);

538 
	`wrôe_i2
 (
Âå
, 
dïth
, 
mŸ‹ﬁa
);

539 
	`wrôe_i2
 (
Âå
, 
dïth
, 
mŸ‹ﬁa
);

542 
	`wrôe_i2
 (
Âå
, 0, 
mŸ‹ﬁa
);

543 
	`wrôe_i2
 (
Âå
, 0, 
mŸ‹ﬁa
);

544 
	`wrôe_i2
 (
Âå
, 0, 
mŸ‹ﬁa
);

547 
	`wrôe_i2
 (
Âå
, 
maxßm∂evÆue
, 
mŸ‹ﬁa
);

548 
	`wrôe_i2
 (
Âå
, 
maxßm∂evÆue
, 
mŸ‹ﬁa
);

549 
	`wrôe_i2
 (
Âå
, 
maxßm∂evÆue
, 
mŸ‹ﬁa
);

552 i‡(
ªsﬁuti⁄
 > 0)

554 
	`wrôe_i4
 (
Âå
, 
ªsﬁuti⁄
, 
mŸ‹ﬁa
);

555 
	`wrôe_i4
 (
Âå
, 1, 
mŸ‹ﬁa
);

556 
	`wrôe_i4
 (
Âå
, 
ªsﬁuti⁄
, 
mŸ‹ﬁa
);

557 
	`wrôe_i4
 (
Âå
, 1, 
mŸ‹ﬁa
);

561 i‡(
icc_Àn
 > 0)

563 
i
;

564 
i
=0; i<
icc_Àn
; i++)

566 i‡(!
	`„of
(
icc_fûe
))

568 
	`Âutc
(
	`fgëc
(
icc_fûe
), 
Âå
);

572 
	`Ârötf
(
°dîr
, "ICCÖrofûê%†i†toÿsh‹t\n", 
icc_¥ofûe
);

578 i‡(
icc_fûe
)

580 
	`f˛o£
(
icc_fûe
);

583 
	`‰ì_ifd
 (
ifd
);

584 
	}
}

588 
	$ß√i_wrôe_tiff_hódî
 (
SANE_Føme
 
f‹m©
, 
width
, 
height
, 
dïth
,

589 
ªsﬁuti⁄
, c⁄° *
icc_¥ofûe
)

591 #ifde‡
__EMX__


592 
	`_f£tmode
(
°dout
, "b");

594 
f‹m©
)

596 
SANE_FRAME_RED
:

597 
SANE_FRAME_GREEN
:

598 
SANE_FRAME_BLUE
:

599 
SANE_FRAME_RGB
:

600 
	`wrôe_tiff_cﬁ‹_hódî
 (
°dout
, 
width
, 
height
, 
dïth
, 
ªsﬁuti⁄
, 
icc_¥ofûe
);

604 i‡(
dïth
 == 1)

605 
	`wrôe_tiff_bw_hódî
 (
°dout
, 
width
, 
height
, 
ªsﬁuti⁄
);

607 
	`wrôe_tiff_gªy_hódî
 (
°dout
, 
width
, 
height
, 
dïth
, 
ªsﬁuti⁄
, 
icc_¥ofûe
);

610 
	}
}

	@stiff.h

19 
ß√i_wrôe_tiff_hódî
 (
SANE_Føme
 
f‹m©
, 
width
, 
height
, 
dïth
,

20 
ªsﬁuti⁄
, c⁄° *
icc_¥ofûe
);

	@test.c

27 
	~<˘y≥.h
>

28 
	~<limôs.h
>

29 
	~<°dio.h
>

30 
	~<°dlib.h
>

31 
	~<°rög.h
>

32 
	~<uni°d.h
>

34 
	~<sys/sockë.h
>

35 
	~<sys/ty≥s.h
>

37 
	~<√tdb.h
>

38 
	~<√töë/ö.h
>

40 
	~"../ö˛ude/ß√/ß√.h
"

43 
	$auth_ˇŒback
 (
SANE_Såög_C⁄°
 
domaö
,

44 
SANE_Ch¨
 *
u£∫ame
,

45 
SANE_Ch¨
 *
∑ssw‹d
)

47 
	`¥ötf
 ("Clõ¡ '%s'Ñeque°edáuth‹iz©i⁄.\nU£r:\n", 
domaö
);

48 
	`sˇnf
 ("%s", 
u£∫ame
);

49 
	`¥ötf
 ("Password:\n");

50 
	`sˇnf
 ("%s", 
∑ssw‹d
);

52 
	}
}

55 
	$ã°ß√
 (c⁄° *
dev_«me
)

57 
hÕ
, 
x
;

58 
SANE_Sètus
 
bœ
;

59 
SANE_I¡
 
blubb
;

60 
SANE_H™dÀ
 
h™d
;

61 
SANE_P¨amëîs
 
∑rs
;

62 c⁄° 
SANE_O±i⁄_Des¸ùt‹
 *
sod
;

63 c⁄° 
SANE_Devi˚
 **
devi˚_li°
;

64 
buf„r
[2048];

66 
bœ
 = 
	`ß√_öô
 (&
blubb
, 
auth_ˇŒback
);

67 
	`Ârötf
 (
°dîr
, "Init : stat=%d ver=%x\nPress EnterÅo continue...",

68 
bœ
, 
blubb
);

69 
	`gëch¨
 ();

70 i‡(
bœ
 !
SANE_STATUS_GOOD
)

73 
bœ
 = 
	`ß√_gë_devi˚s
 (&
devi˚_li°
, 
SANE_FALSE
);

74 
	`Ârötf
 (
°dîr
, "GëDev : sèt=%s\n", 
	`ß√_°r°©us
 (
bœ
));

75 i‡(
bœ
 !
SANE_STATUS_GOOD
)

78 
bœ
 = 
	`ß√_›í
 (
dev_«me
, &
h™d
);

79 
	`Ârötf
 (
°dîr
, "O≥¿: sèt=%†h™d=%p\n", 
	`ß√_°r°©us
 (
bœ
), 
h™d
);

80 i‡(
bœ
 !
SANE_STATUS_GOOD
)

83 
bœ
 = 
	`ß√_£t_io_mode
 (
h™d
, 0);

84 
	`Ârötf
 (
°dîr
, "SëIoModê: sèt=%s\n", 
	`ß√_°r°©us
 (
bœ
));

86 
hÕ
 = 0; hlp < 9999; hlp++)

88 
sod
 = 
	`ß√_gë_›ti⁄_des¸ùt‹
 (
h™d
, 
hÕ
);

89 i‡(
sod
 =
NULL
)

91 
	`Ârötf
 (
°dîr
, "G›t(%dË: sèt=%p\n", 
hÕ
, 
sod
);

92 
	`Ârötf
 (
°dîr
, "«mê: %s\n", 
sod
->
«me
);

93 
	`Ârötf
 (
°dîr
, "tôÀ: %s\n", 
sod
->
tôÀ
);

94 
	`Ârötf
 (
°dîr
, "des¯: %s\n", 
sod
->
desc
);

96 
	`Ârötf
 (
°dîr
, "ty≥ : %d\n", 
sod
->
ty≥
);

97 
	`Ârötf
 (
°dîr
, "unô : %d\n", 
sod
->
unô
);

98 
	`Ârötf
 (
°dîr
, "sizê: %d\n", 
sod
->
size
);

99 
	`Ârötf
 (
°dîr
, "ˇ∞ : %d\n", 
sod
->
ˇp
);

100 
	`Ârötf
 (
°dîr
, "˘y∞: %d\n", 
sod
->
c⁄°øöt_ty≥
);

101 
sod
->
c⁄°øöt_ty≥
)

103 
SANE_CONSTRAINT_NONE
:

105 
SANE_CONSTRAINT_STRING_LIST
:

106 
	`Ârötf
 (
°dîr
, "stringlist:\n");

108 
SANE_CONSTRAINT_WORD_LIST
:

109 
	`Ârötf
 (
°dîr
, "w‹dli° (%dË: ", 
sod
->
c⁄°øöt
.
w‹d_li°
[0]);

110 
x
 = 1; x <
sod
->
c⁄°øöt
.
w‹d_li°
[0]; x++)

111 
	`Ârötf
 (
°dîr
, " %d ", 
sod
->
c⁄°øöt
.
w‹d_li°
[
x
]);

112 
	`Ârötf
 (
°dîr
, "\n");

114 
SANE_CONSTRAINT_RANGE
:

115 
	`Ârötf
 (
°dîr
, "ønge: %d-%d %d \n", 
sod
->
c⁄°øöt
.
ønge
->
mö
,

116 
sod
->
c⁄°øöt
.
ønge
->
max
, sod->c⁄°øöt.ønge->
qu™t
);

121 
bœ
 = 
	`ß√_gë_∑ømëîs
 (
h™d
, &
∑rs
);

122 
	`Ârötf
 (
°dîr
,

124 
	`ß√_°r°©us
 (
bœ
),

125 
∑rs
.
f‹m©
,Ö¨s.
œ°_‰ame
,

126 
∑rs
.
byãs_≥r_löe
,Ö¨s.
pixñs_≥r_löe
,

127 
∑rs
.
löes
,Ö¨s.
dïth
);

128 i‡(
bœ
 !
SANE_STATUS_GOOD
)

131 
bœ
 = 
	`ß√_°¨t
 (
h™d
);

132 
	`Ârötf
 (
°dîr
, "Sèπ : sèt=%s\n", 
	`ß√_°r°©us
 (
bœ
));

133 i‡(
bœ
 !
SANE_STATUS_GOOD
)

138 
bœ
 = 
	`ß√_ªad
 (
h™d
, 
buf„r
,  (buf„r), &
blubb
);

140 i‡(
bœ
 !
SANE_STATUS_GOOD
)

142 i‡(
bœ
 =
SANE_STATUS_EOF
)

146 
	`fwrôe
 (
buf„r
, 1, 
blubb
, 
°dout
);

150 
	`ß√_ˇn˚l
 (
h™d
);

151 
	`Ârötf
 (
°dîr
, "Cancel.\n");

153 
	`ß√_˛o£
 (
h™d
);

154 
	`Ârötf
 (
°dîr
, "Close\n");

156 
hÕ
 = 0; hlp < 20; hlp++)

157 
	`Ârötf
 (
°dîr
, "STRS %d=%s\n", 
hÕ
, 
	`ß√_°r°©us
 (hlp));

159 
	`Ârötf
 (
°dîr
, "Exit.\n");

160 
	}
}

163 
	$maö
 (
¨gc
, *
¨gv
[])

165 i‡(
¨gc
 != 2 &&árgc != 3)

167 
	`Ârötf
 (
°dîr
, "Ußge: %†devi˚«mê[ho°«me]\n", 
¨gv
[0]);

168 
	`exô
 (0);

170 i‡(
¨gc
 == 3)

172 
ívbuf
[1024];

173 
	`•rötf
 (
ívbuf
, "SANE_NET_HOST=%s", 
¨gv
[2]);

174 
	`puãnv
 (
ívbuf
);

177 
	`Ârötf
 (
°dîr
, "This isá SANEÅestápplication.\n"

178 "Now c⁄√˘ögÅÿdevi˚ %s.\n", 
¨gv
[1]);

179 
	`ã°ß√
 (
¨gv
[1]);

180 
	`ß√_exô
 ();

182 
	}
}

	@tstbackend.c

25 
	#BUILD
 18

	)

27 
	~"../ö˛ude/ß√/c⁄fig.h
"

29 
	~<as£π.h
>

30 
	~<gë›t.h
>

31 
	~<°dio.h
>

32 
	~<°dlib.h
>

33 
	~<°rög.h
>

34 
	~<uni°d.h
>

35 
	~<°d¨g.h
>

36 
	~<time.h
>

38 
	~<sys/ty≥s.h
>

39 
	~<sys/°©.h
>

41 
	~"../ö˛ude/ß√/ß√.h
"

42 
	~"../ö˛ude/ß√/ß√i.h
"

43 
	~"../ö˛ude/ß√/ß√›ts.h
"

45 
›ti⁄
 
	gbasic_›ti⁄s
[] = {

46 {"devi˚-«me", 
ªquúed_¨gumít
, 
NULL
, 'd'},

47 {"Àvñ", 
ªquúed_¨gumít
, 
NULL
, 'l'},

48 {"ªcursi⁄", 
ªquúed_¨gumít
, 
NULL
, 'r'},

49 {"hñp", 0, 
NULL
, 'h'}

53 
ã°_›ti⁄s
 (
SANE_Devi˚
 * 
devi˚
, 
ˇn_do_ªcursive
);

55 
	emesßge_Àvñ
 {

56 
	mMSG
,

57 
	mINF
,

58 
	mWRN
,

59 
	mERR
,

60 
	mFATAL
,

61 
	mBUG


64 
	gmesßge_numbî_w∫
 = 0;

65 
	gmesßge_numbî_îr
 = 0;

66 #ifde‡
HAVE_LONG_LONG


67 
	gchecks_d⁄e
 = 0;

70 
	gchecks_d⁄e
 = 0;

73 
	gã°_Àvñ
;

76 
	#SANE_OPTION_IS_GETTABLE
(
ˇp
Ë(((ˇpË& (
SANE_CAP_SOFT_DETECT
 | 
SANE_CAP_INACTIVE
)Ë=SANE_CAP_SOFT_DETECT)

	)

81 
	$di•œy_°©s
()

83 #ifde‡
HAVE_LONG_LONG


84 
	`¥ötf
("warnings: %dÉrror: %d checks: %lld\n",

85 
mesßge_numbî_w∫
, 
mesßge_numbî_îr
, 
checks_d⁄e
);

87 
	`¥ötf
("warnings: %dÉrror: %d checks: %ld\n",

88 
mesßge_numbî_w∫
, 
mesßge_numbî_îr
, 
checks_d⁄e
);

90 
	}
}

99 #ifde‡
__GNUC__


100 
	$check
(
mesßge_Àvñ
, 
c⁄dôi⁄
, c⁄° *
f‹m©
, ...Ë
	`__©åibuã__
 ((
	`f‹m©
 (
¥ötf
, 3, 4)));

102 
	$check
(
mesßge_Àvñ
 
Àvñ
, 
c⁄dôi⁄
, c⁄° *
f‹m©
, ...)

104 
°r
[1000];

105 
va_li°
 
¨gs
;

107 i‡(
Àvñ
 !
MSG
 &&Üevñ !
INF
Ë
checks_d⁄e
 ++;

109 i‡(
c⁄dôi⁄
 != 0)

110  
c⁄dôi⁄
;

112 
	`va_°¨t
(
¨gs
, 
f‹m©
);

113 
	`v•rötf
(
°r
, 
f‹m©
, 
¨gs
);

114 
	`va_íd
(
¨gs
);

116 
Àvñ
) {

117 
MSG
:

118 
	`¥ötf
(" %s\n", 
°r
);

120 
INF
:

121 
	`¥ötf
("öfÿ : %s\n", 
°r
);

123 
WRN
:

124 
	`¥ötf
("w¨nög : %s\n", 
°r
);

125 
mesßge_numbî_w∫
 ++;

127 
ERR
:

128 
	`¥ötf
("ERROR : %s\n", 
°r
);

129 
mesßge_numbî_îr
 ++;

131 
FATAL
:

132 
	`¥ötf
("FATAL ERROR : %s\n", 
°r
);

133 
mesßge_numbî_îr
 ++;

135 
BUG
:

136 
	`¥ötf
("t°backíd BUG : %s\n", 
°r
);

140 i‡(
Àvñ
 =
FATAL
 ||Üevñ =
BUG
) {

142 
	`di•œy_°©s
();

143 
	`ab‹t
();

146 
	`fÊush
(
°dout
);

149 
	}
}

153 
	#GUARDS_SIZE
 4

	)

154 
	#GUARD1
 ((
SANE_W‹d
)0x5abf8ó5)

	)

155 
	#GUARD2
 ((
SANE_W‹d
)0xa58ebf5a)

	)

158 *
	$gu¨ds_mÆloc
(
size_t
 
size
)

160 *
±r
;

162 
size
 +2*
GUARDS_SIZE
;

163 
±r
 = 
	`mÆloc
(
size
);

165 
	`as£π
(
±r
);

167 
±r
 +
GUARDS_SIZE
;

169 (
±r
);

170 
	}
}

173 
	$gu¨ds_‰ì
(*
±r
)

175 *
p
 = 
±r
;

177 
p
 -
GUARDS_SIZE
;

178 
	`‰ì
(
p
);

179 
	}
}

182 
	$gu¨ds_£t
(*
±r
, 
size_t
 
size
)

184 
SANE_W‹d
 *
p
;

186 
p
 = (
SANE_W‹d
 *)(((*)
±r
Ë- 
GUARDS_SIZE
);

187 *
p
 = 
GUARD1
;

189 
p
 = (
SANE_W‹d
 *)(((*)
±r
Ë+ 
size
);

190 *
p
 = 
GUARD2
;

191 
	}
}

194 
	$gu¨ds_check
(*
±r
, 
size_t
 
size
)

196 
SANE_W‹d
 *
p
;

198 
p
 = (
SANE_W‹d
 *)(((*)
±r
Ë- 
GUARDS_SIZE
);

199 
	`check
(
FATAL
, (*
p
 =
GUARD1
),

202 
p
 = (
SANE_W‹d
 *)(((*)
±r
Ë+ 
size
);

203 
	`check
(
FATAL
, (*
p
 =
GUARD2
),

205 
	}
}

210 
	$ã°_∑ømëîs
 (
SANE_Devi˚
 * 
devi˚
, 
SANE_P¨amëîs
 *
∑øms
)

212 
SANE_Sètus
 
°©us
;

213 
SANE_P¨amëîs
 
p
;

215 
°©us
 = 
	`ß√_gë_∑ømëîs
 (
devi˚
, &
p
);

216 
	`check
(
FATAL
, (
°©us
 =
SANE_STATUS_GOOD
),

217 "ˇ¬Ÿ gëÅhê∑ømëî†”º‹ %s)", 
	`ß√_°r°©us
(
°©us
));

219 
	`check
(
FATAL
, ((
p
.
f‹m©
 =
SANE_FRAME_GRAY
) ||

220 (
p
.
f‹m©
 =
SANE_FRAME_RGB
) ||

221 (
p
.
f‹m©
 =
SANE_FRAME_RED
) ||

222 (
p
.
f‹m©
 =
SANE_FRAME_GREEN
) ||

223 (
p
.
f‹m©
 =
SANE_FRAME_BLUE
)),

224 "∑ømëî f‹m© i†nŸá know¿SANE_FRAME_* (%d)", 
p
.
f‹m©
);

226 
	`check
(
FATAL
, ((
p
.
œ°_‰ame
 =
SANE_FALSE
) ||

227 (
p
.
œ°_‰ame
 =
SANE_TRUE
)),

228 "∑ømëîÜa°_‰amêi†√ôhî SANE_FALSE o∏SANE_TRUE (%d)", 
p
.
œ°_‰ame
);

230 
	`check
(
FATAL
, ((
p
.
dïth
 == 1) ||

231 (
p
.
dïth
 == 8) ||

232 (
p
.
dïth
 == 16)),

233 "∑ømëî dïth i†√ôhî 1, 8 o∏16 (%d)", 
p
.
dïth
);

235 i‡(
∑øms
) {

236 *
∑øms
 = 
p
;

238 
	}
}

242 
	$ã°_›ti⁄s_w‹d_li°
 (
SANE_Devi˚
 * 
devi˚
, 
›ti⁄_num
,

243 c⁄° 
SANE_O±i⁄_Des¸ùt‹
 *
›t
,

244 
ˇn_do_ªcursive
)

246 
SANE_Sètus
 
°©us
;

247 
i
;

248 
SANE_I¡
 
vÆ_öt
;

249 
SANE_I¡
 
öfo
;

251 
	`check
(
FATAL
, (
›t
->
ty≥
 =
SANE_TYPE_INT
 ||

252 
›t
->
ty≥
 =
SANE_TYPE_FIXED
),

253 "ty≥ mu° bêSANE_TYPE_INT o∏SANE_TYPE_FIXED (%d)", 
›t
->
ty≥
);

255 i‡(!
	`SANE_OPTION_IS_SETTABLE
(
›t
->
ˇp
)) ;

257 
i
=1; i<
›t
->
c⁄°øöt
.
w‹d_li°
[0]; i++) {

259 
öfo
 = 0x1010;

261 
vÆ_öt
 = 
›t
->
c⁄°øöt
.
w‹d_li°
[
i
];

262 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
›ti⁄_num
,

263 
SANE_ACTION_SET_VALUE
, &
vÆ_öt
, &
öfo
);

265 
	`check
(
FATAL
, (
°©us
 =
SANE_STATUS_GOOD
),

266 "ˇ¬Ÿ sëá sëèbÀ o±i⁄ (°©us=%s)", 
	`ß√_°r°©us
(
°©us
));

268 
	`check
(
WRN
, ((
öfo
 & ~(
SANE_INFO_RELOAD_OPTIONS
 |

269 
SANE_INFO_RELOAD_PARAMS
)) == 0),

270 "ß√_c⁄åﬁ_›ti⁄ sëá¿övÆid infÿ(%d)", 
öfo
);

272 i‡((
öfo
 & 
SANE_INFO_RELOAD_OPTIONS
Ë&& 
ˇn_do_ªcursive
) {

273 
	`ã°_›ti⁄s
(
devi˚
, 
ˇn_do_ªcursive
-1);

275 i‡(
öfo
 & 
SANE_INFO_RELOAD_PARAMS
) {

276 
	`ã°_∑ømëîs
(
devi˚
, 
NULL
);

280 i‡(!
	`SANE_OPTION_IS_ACTIVE
(
›t
->
ˇp
) ||

281 !
	`SANE_OPTION_IS_SETTABLE
(
›t
->
ˇp
))

285 
	}
}

289 
	$ã°_›ti⁄s_°rög_li°
 (
SANE_Devi˚
 * 
devi˚
, 
›ti⁄_num
,

290 c⁄° 
SANE_O±i⁄_Des¸ùt‹
 *
›t
,

291 
ˇn_do_ªcursive
)

293 
SANE_I¡
 
öfo
;

294 
SANE_Sètus
 
°©us
;

295 
SANE_Såög
 
vÆ_°rög
;

296 
i
;

298 
	`check
(
FATAL
, (
›t
->
ty≥
 =
SANE_TYPE_STRING
),

299 "ty≥ mu° bêSANE_TYPE_STRING (%d)", 
›t
->
ty≥
);

301 i‡(!
	`SANE_OPTION_IS_SETTABLE
(
›t
->
ˇp
)) ;

303 
i
=0; 
›t
->
c⁄°øöt
.
°rög_li°
[i] !
NULL
; i++) {

305 
vÆ_°rög
 = 
	`°rdup
(
›t
->
c⁄°øöt
.
°rög_li°
[
i
]);

306 
	`as£π
(
vÆ_°rög
);

308 
	`check
(
WRN
, (
	`°æí
(
vÆ_°rög
Ë< (
size_t
)
›t
->
size
),

310 
vÆ_°rög
, 
›t
->
size
);

312 
öfo
 = 0xE1000;

313 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
›ti⁄_num
,

314 
SANE_ACTION_SET_VALUE
, 
vÆ_°rög
, &
öfo
);

316 
	`check
(
FATAL
, (
°©us
 =
SANE_STATUS_GOOD
),

317 "ˇ¬Ÿ sëá sëèbÀ o±i⁄ (°©us=%s)", 
	`ß√_°r°©us
(
°©us
));

319 
	`check
(
WRN
, ((
öfo
 & ~(
SANE_INFO_RELOAD_OPTIONS
 |

320 
SANE_INFO_RELOAD_PARAMS
)) == 0),

321 "ß√_c⁄åﬁ_›ti⁄ sëá¿övÆid infÿ(%d)", 
öfo
);

323 
	`‰ì
(
vÆ_°rög
);

325 i‡((
öfo
 & 
SANE_INFO_RELOAD_OPTIONS
Ë&& 
ˇn_do_ªcursive
) {

326 
	`ã°_›ti⁄s
(
devi˚
, 
ˇn_do_ªcursive
-1);

328 i‡(
öfo
 & 
SANE_INFO_RELOAD_PARAMS
) {

329 
	`ã°_∑ømëîs
(
devi˚
, 
NULL
);

333 i‡(!
	`SANE_OPTION_IS_ACTIVE
(
›t
->
ˇp
) ||

334 !
	`SANE_OPTION_IS_SETTABLE
(
›t
->
ˇp
))

337 
	}
}

341 
	$ã°_›ti⁄s
 (
SANE_Devi˚
 * 
devi˚
, 
ˇn_do_ªcursive
)

343 
SANE_W‹d
 
öfo
;

344 
SANE_I¡
 
num_dev_›ti⁄s
;

345 
SANE_Sètus
 
°©us
;

346 c⁄° 
SANE_O±i⁄_Des¸ùt‹
 *
›t
;

347 
›ti⁄_num
;

348 *
›tvÆ
;

349 
size_t
 
›tsize
;

354 
›t
 = 
	`ß√_gë_›ti⁄_des¸ùt‹
 (
devi˚
, 0);

355 
	`check
(
FATAL
, (
›t
 !
NULL
),

357 
	`check
(
INF
, (
›t
->
ˇp
 =
SANE_CAP_SOFT_DETECT
),

358 "övÆid c≠abûôõ†f‹ o±i⁄ 0 (%d)", 
›t
->
ˇp
);

359 
	`check
(
ERR
, (
›t
->
ty≥
 =
SANE_TYPE_INT
),

363 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 0, 
SANE_ACTION_GET_VALUE
, &
num_dev_›ti⁄s
, 0);

364 
	`check
(
FATAL
, (
°©us
 =
SANE_STATUS_GOOD
),

368 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 0, 
SANE_ACTION_SET_VALUE
,

369 &
num_dev_›ti⁄s
, &
öfo
);

370 
	`check
(
WRN
, (
°©us
 !
SANE_STATUS_GOOD
),

376 
›ti⁄_num
 = 0;

377 
›ti⁄_num
 = 0; o±i⁄_num < 
num_dev_›ti⁄s
; option_num++) {

380 
›t
 = 
	`ß√_gë_›ti⁄_des¸ùt‹
 (
devi˚
, 
›ti⁄_num
);

381 
	`check
(
FATAL
, (
›t
 !
NULL
),

382 "ˇ¬Ÿ gë o±i⁄ des¸ùt‹ f‹ o±i⁄ %d", 
›ti⁄_num
);

383 
	`check
(
WRN
, ((
›t
->
ˇp
 & ~(
SANE_CAP_SOFT_SELECT
 |

384 
SANE_CAP_HARD_SELECT
 |

385 
SANE_CAP_SOFT_DETECT
 |

386 
SANE_CAP_EMULATED
 |

387 
SANE_CAP_AUTOMATIC
 |

388 
SANE_CAP_INACTIVE
 |

389 
SANE_CAP_ADVANCED
)) == 0),

390 "övÆid c≠abûôõ†f‹ o±i⁄ [%d, %s] (%x)", 
›ti⁄_num
, 
›t
->
«me
, o±->
ˇp
);

391 
	`check
(
WRN
, (
›t
->
tôÀ
 !
NULL
),

392 "›ti⁄ [%d, %s] mu° havê®tôÀ", 
›ti⁄_num
, 
›t
->
«me
);

393 
	`check
(
WRN
, (
›t
->
desc
 !
NULL
),

394 "›ti⁄ [%d, %s] mu° havê®des¸ùti⁄", 
›ti⁄_num
, 
›t
->
«me
);

396 i‡(!
	`SANE_OPTION_IS_ACTIVE
 (
›t
->
ˇp
)) {

401 i‡(
›t
->
ty≥
 =
SANE_TYPE_GROUP
) {

402 
	`check
(
INF
, (
›t
->
«me
 =
NULL
 || *opt->name == 0),

403 "›ti⁄ [%d, %s] ha†®«me", 
›ti⁄_num
, 
›t
->
«me
);

405 i‡(
›ti⁄_num
 == 0) {

406 
	`check
(
ERR
, (
›t
->
«me
 !
NULL
 && *opt->name ==0),

409 
	`check
(
ERR
, (
›t
->
«me
 !
NULL
 && *opt->name !=0),

410 "›ti⁄ %d mu° havê®«me", 
›ti⁄_num
);

416 i‡(
›t
->
«me
 && opt->name[0]) {

417 c⁄° *
p
 = 
›t
->
«me
;

419 
	`check
(
ERR
, (*
p
 >= 'a' && *p <= 'z'),

421 
›ti⁄_num
, 
›t
->
«me
);

423 
p
++;

425 *
p
) {

426 
	`check
(
ERR
, ((*
p
 >= 'a' && *p <= 'z') ||

427 (*
p
 == '-') ||

428 (*
p
 >= '0' && *p <= '9')),

430 
›ti⁄_num
, 
›t
->
«me
);

431 
p
++;

435 
›tvÆ
 = 
NULL
;

436 
›tsize
 = 0;

438 
›t
->
ty≥
) {

439 
SANE_TYPE_BOOL
:

440 
	`check
(
WRN
, (
›t
->
size
 =(
SANE_W‹d
)),

441 "sizêo‡›ti⁄ %†i†öc‹ª˘", 
›t
->
«me
);

442 
›tvÆ
 = 
	`gu¨ds_mÆloc
(
›t
->
size
);

443 
›tsize
 = 
›t
->
size
;

444 
	`check
(
WRN
, (
›t
->
c⁄°øöt_ty≥
 =
SANE_CONSTRAINT_NONE
),

445 "övÆid c⁄°øöàty≥ f‹ o±i⁄ [%d, %s] (%d)", 
›ti⁄_num
, 
›t
->
«me
, o±->
c⁄°øöt_ty≥
);

448 
SANE_TYPE_INT
:

449 
SANE_TYPE_FIXED
:

450 
	`check
(
WRN
, (
›t
->
size
 > 0 && (›t->sizê% (
SANE_W‹d
) == 0)),

451 "övÆid sizêf‹ o±i⁄ %s", 
›t
->
«me
);

452 
›tvÆ
 = 
	`gu¨ds_mÆloc
(
›t
->
size
);

453 
›tsize
 = 
›t
->
size
;

454 
	`check
(
WRN
, (
›t
->
c⁄°øöt_ty≥
 =
SANE_CONSTRAINT_NONE
 ||

455 
›t
->
c⁄°øöt_ty≥
 =
SANE_CONSTRAINT_RANGE
 ||

456 
›t
->
c⁄°øöt_ty≥
 =
SANE_CONSTRAINT_WORD_LIST
),

457 "övÆid c⁄°øöàty≥ f‹ o±i⁄ [%d, %s] (%d)", 
›ti⁄_num
, 
›t
->
«me
, o±->
c⁄°øöt_ty≥
);

460 
SANE_TYPE_STRING
:

461 
	`check
(
WRN
, (
›t
->
size
 >= 1),

462 "sizêo‡›ti⁄ [%d, %s] mu° bê©Üó° 1 f‹ÅhêNULÅîmö©‹", 
›ti⁄_num
, 
›t
->
«me
);

463 
	`check
(
INF
, (
›t
->
unô
 =
SANE_UNIT_NONE
),

464 "unô o‡›ti⁄ [%d, %s] i†nŸ SANE_UNIT_NONE", 
›ti⁄_num
, 
›t
->
«me
);

465 
	`check
(
WRN
, (
›t
->
c⁄°øöt_ty≥
 =
SANE_CONSTRAINT_STRING_LIST
 ||

466 
›t
->
c⁄°øöt_ty≥
 =
SANE_CONSTRAINT_NONE
),

467 "övÆid c⁄°øöàty≥ f‹ o±i⁄ [%d, %s] (%d)", 
›ti⁄_num
, 
›t
->
«me
, o±->
c⁄°øöt_ty≥
);

468 
›tvÆ
 = 
	`gu¨ds_mÆloc
(
›t
->
size
);

469 
›tsize
 = 
›t
->
size
;

472 
SANE_TYPE_BUTTON
:

473 
SANE_TYPE_GROUP
:

474 
	`check
(
INF
, (
›t
->
unô
 =
SANE_UNIT_NONE
),

475 "›ti⁄ [%d, %s], unô i†nŸ SANE_UNIT_NONE", 
›ti⁄_num
, 
›t
->
«me
);

476 
	`check
(
INF
, (
›t
->
size
 == 0),

477 "›ti⁄ [%d, %s], sizêi†nŸ 0", 
›ti⁄_num
, 
›t
->
«me
);

478 
	`check
(
WRN
, (
›t
->
c⁄°øöt_ty≥
 =
SANE_CONSTRAINT_NONE
),

479 "övÆid c⁄°øöàty≥ f‹ o±i⁄ [%d, %s] (%d)", 
›ti⁄_num
, 
›t
->
«me
, o±->
c⁄°øöt_ty≥
);

483 
	`check
(
ERR
, 0,

485 
›t
->
ty≥
, o±->
«me
);

489 i‡(
›tvÆ
) {

500 
	`gu¨ds_£t
(
›tvÆ
, 
›tsize
);

501 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
›ti⁄_num
,

502 
SANE_ACTION_GET_VALUE
, 
›tvÆ
, 
NULL
);

503 
	`gu¨ds_check
(
›tvÆ
, 
›tsize
);

505 i‡(
	`SANE_OPTION_IS_GETTABLE
 (
›t
->
ˇp
)) {

506 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
),

507 "ˇ¬Ÿ gë o±i⁄ [%d, %s] vÆue,á…hough iài†a˘ivê(%s)", 
›ti⁄_num
, 
›t
->
«me
, 
	`ß√_°r°©us
(
°©us
));

509 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_INVAL
),

510 "wa†abÀÅÿgë o±i⁄ [%d, %s] vÆue,á…hough iài†nŸá˘ive", 
›ti⁄_num
, 
›t
->
«me
);

514 
	`gu¨ds_£t
(
›tvÆ
, 
›tsize
);

515 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
›ti⁄_num
,

516 
SANE_ACTION_SET_VALUE
, 
›tvÆ
, 
NULL
);

517 
	`gu¨ds_check
(
›tvÆ
, 
›tsize
);

518 i‡(
	`SANE_OPTION_IS_SETTABLE
 (
›t
->
ˇp
Ë&& 
	`SANE_OPTION_IS_ACTIVE
 (opt->cap)) {

519 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
),

520 "ˇ¬Ÿ së o±i⁄ [%d, %s] vÆue,á…hough iài†a˘ivê™d sëèbÀ (%s)", 
›ti⁄_num
, 
›t
->
«me
, 
	`ß√_°r°©us
(
°©us
));

522 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_INVAL
),

523 "wa†abÀÅÿ£à›ti⁄ [%d, %s] vÆue,á…hough iài†nŸá˘ivê‹ sëèbÀ", 
›ti⁄_num
, 
›t
->
«me
);

528 
öfo
 = 0xdeadbeef;

529 
	`gu¨ds_£t
(
›tvÆ
, 
›tsize
);

530 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
›ti⁄_num
, 
SANE_ACTION_GET_VALUE
,

531 
›tvÆ
, &
öfo
);

532 
	`gu¨ds_check
(
›tvÆ
, 
›tsize
);

533 i‡(
	`SANE_OPTION_IS_GETTABLE
 (
›t
->
ˇp
)) {

534 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
),

535 "ˇ¬Ÿ gë o±i⁄ [%d, %s] vÆue,á…hough iài†a˘ivê(%s)", 
›ti⁄_num
, 
›t
->
«me
, 
	`ß√_°r°©us
(
°©us
));

537 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_INVAL
),

538 "wa†abÀÅÿgë o±i⁄ [%d, %s] vÆue,á…hough iài†nŸá˘ive", 
›ti⁄_num
, 
›t
->
«me
);

540 
	`check
(
ERR
, ((
öfo
 =(
SANE_I¡
)0xdeadbeef) || (info == 0)),

541 "whí gëtög o±i⁄ [%d, %s], infÿwa†£àtÿ%x", 
›ti⁄_num
, 
›t
->
«me
, 
öfo
);

544 
öfo
 = 0x10000;

545 
	`gu¨ds_£t
(
›tvÆ
, 
›tsize
);

546 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
›ti⁄_num
,

547 
SANE_ACTION_SET_VALUE
, 
›tvÆ
, &
öfo
);

548 
	`gu¨ds_check
(
›tvÆ
, 
›tsize
);

549 i‡(
	`SANE_OPTION_IS_SETTABLE
 (
›t
->
ˇp
Ë&& 
	`SANE_OPTION_IS_ACTIVE
 (opt->cap)) {

550 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
),

551 "ˇ¬Ÿ së o±i⁄ [%d, %s] vÆue,á…hough iài†a˘ivê™d sëèbÀ (%s)", 
›ti⁄_num
, 
›t
->
«me
, 
	`ß√_°r°©us
(
°©us
));

553 
	`check
(
ERR
, ((
öfo
 & ~(
SANE_INFO_INEXACT
 |

554 
SANE_INFO_RELOAD_OPTIONS
 |

555 
SANE_INFO_RELOAD_PARAMS
)) == 0),

556 "ß√_c⁄åﬁ_›ti⁄ së somêwr⁄g bô i¿öfÿ(%d)", 
öfo
);

558 i‡(
öfo
 & 
SANE_INFO_RELOAD_PARAMS
) {

559 
	`ã°_∑ømëîs
(
devi˚
, 
NULL
);

562 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_INVAL
),

563 "wa†abÀÅÿ£à›ti⁄ [%d, %s] vÆue,á…hough iài†nŸá˘ivê‹ sëèbÀ", 
›ti⁄_num
, 
›t
->
«me
);

567 
	`gu¨ds_£t
(
›tvÆ
, 
›tsize
);

568 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
›ti⁄_num
,

569 
SANE_ACTION_SET_AUTO
, 
›tvÆ
, &
öfo
);

570 
	`gu¨ds_check
(
›tvÆ
, 
›tsize
);

571 i‡(
	`SANE_OPTION_IS_SETTABLE
 (
›t
->
ˇp
) &&

572 
	`SANE_OPTION_IS_ACTIVE
 (
›t
->
ˇp
) &&

573 (
›t
->
ˇp
 & 
SANE_CAP_AUTOMATIC
)) {

574 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
),

575 "ˇ¬Ÿ sëÅhê›ti⁄ [%d, %s]áutom©iˇŒy.", 
›ti⁄_num
, 
›t
->
«me
);

577 
	`check
(
ERR
, (
°©us
 !
SANE_STATUS_GOOD
),

578 "wa†abÀÅÿautom©iˇŒy së o±i⁄ [%d, %s],á…hough iài†nŸá˘ivê‹ sëèbÀ o∏autom©iˇŒy sëèbÀ", 
›ti⁄_num
, 
›t
->
«me
);

580 i‡(
öfo
 & 
SANE_INFO_RELOAD_PARAMS
) {

581 
	`ã°_∑ømëîs
(
devi˚
, 
NULL
);

585 i‡(
›tvÆ
) {

586 
	`gu¨ds_‰ì
(
›tvÆ
);

587 
›tvÆ
 = 
NULL
;

591 
	`check
(
ERR
, ((
›t
->
ˇp
 & (
SANE_CAP_HARD_SELECT
 | 
SANE_CAP_SOFT_SELECT
)) !=

592 (
SANE_CAP_HARD_SELECT
 | 
SANE_CAP_SOFT_SELECT
)),

593 "›ti⁄ [%d, %s], SANE_CAP_HARD_SELECTánd SANE_CAP_SOFT_SELECTáª mutuÆlyÉx˛usive", 
›ti⁄_num
, 
›t
->
«me
);

594 i‡(
›t
->
ˇp
 & 
SANE_CAP_SOFT_SELECT
) {

595 
	`check
(
ERR
, ((
›t
->
ˇp
 & 
SANE_CAP_SOFT_DETECT
) != 0),

596 "›ti⁄ [%d, %s], SANE_CAP_SOFT_DETECT mu° bê£ài‡SANE_CAP_SOFT_SELECT i†£t", 
›ti⁄_num
, 
›t
->
«me
);

598 i‡((
›t
->
ˇp
 & (
SANE_CAP_SOFT_SELECT
 |

599 
SANE_CAP_HARD_SELECT
 |

600 
SANE_CAP_SOFT_DETECT
)) == SANE_CAP_SOFT_DETECT) {

601 
	`check
(
ERR
, (!
	`SANE_OPTION_IS_SETTABLE
 (
›t
->
ˇp
)),

602 "›ti⁄ [%d, %s], mu°ÇŸ bê£âabÀ", 
›ti⁄_num
, 
›t
->
«me
);

605 i‡(!
	`SANE_OPTION_IS_SETTABLE
 (
›t
->
ˇp
)) {

612 i‡(
›t
->
ty≥
 =
SANE_TYPE_STRING
) {

613 
SANE_Såög
 
vÆ_°rög2
;

614 *
›t°r
;

616 
›t°r
 = 
	`gu¨ds_mÆloc
(
›t
->
size
);

617 
vÆ_°rög2
 = 
	`gu¨ds_mÆloc
(
›t
->
size
);

620 
	`°∫˝y
(
›t°r
, "-pOiSoN-", 
›t
->
size
-1);

621 
›t°r
[
›t
->
size
-1] = 0;

624 
	`gu¨ds_£t
(
›t°r
, 
›t
->
size
);

625 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
›ti⁄_num
, 
SANE_ACTION_GET_VALUE
,

626 
›t°r
, 
NULL
);

627 
	`gu¨ds_check
(
›t°r
, 
›t
->
size
);

628 
	`check
(
FATAL
, (
°©us
 =
SANE_STATUS_GOOD
),

629 "ˇ¬Ÿ gë o±i⁄ [%d, %s] vÆue", 
›ti⁄_num
, 
›t
->
«me
);

630 
	`check
(
FATAL
, (
	`°rcmp
(
›t°r
, "-pOiSoN-") != 0),

634 
	`gu¨ds_£t
(
›t°r
, 
›t
->
size
);

635 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
›ti⁄_num
,

636 
SANE_ACTION_SET_VALUE
, 
›t°r
, 
NULL
);

637 
	`gu¨ds_check
(
›t°r
, 
›t
->
size
);

638 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
),

639 "ˇ¬Ÿ së o±i⁄ [%d, %s] vÆue", 
›ti⁄_num
, 
›t
->
«me
);

642 
	`°∫˝y
(
›t°r
, "-pOiSoN-", 
›t
->
size
-1);

643 
›t°r
[
›t
->
size
-1] = 0;

646 
	`gu¨ds_£t
(
vÆ_°rög2
, 
›t
->
size
);

647 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
›ti⁄_num
, 
SANE_ACTION_GET_VALUE
,

648 
vÆ_°rög2
, 
NULL
);

649 
	`gu¨ds_check
(
vÆ_°rög2
, 
›t
->
size
);

650 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
),

651 "ˇ¬Ÿ gë o±i⁄ [%d, %s] vÆue", 
›ti⁄_num
, 
›t
->
«me
);

653 
	`check
(
FATAL
, (
	`°rcmp
(
›t°r
, 
vÆ_°rög2
) != 0),

654 "ß√_c⁄åﬁ_›ti⁄ didÇŸ c›yÅhê°rögÖ¨amëî f‹ o±i⁄ [%d, %s]", 
›ti⁄_num
, 
›t
->
«me
);

656 
	`gu¨ds_‰ì
(
›t°r
);

657 
	`gu¨ds_‰ì
(
vÆ_°rög2
);

661 i‡(
›t
->
ty≥
 =
SANE_TYPE_BOOL
) {

662 
SANE_Boﬁ
 
‹g_v
;

663 
SANE_Boﬁ
 
v
;

665 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
›ti⁄_num
, 
SANE_ACTION_GET_VALUE
,

666 &
‹g_v
, &
öfo
);

667 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
),

668 "ˇ¬Ÿ gë boﬁó¿›ti⁄ [%d, %s] vÆuê(%s)", 
›ti⁄_num
, 
›t
->
«me
, 
	`ß√_°r°©us
(
°©us
));

670 
‹g_v
) {

671 
SANE_FALSE
:

672 
v
 = 
SANE_TRUE
;

674 
SANE_TRUE
:

675 
v
 = 
SANE_FALSE
;

678 
	`check
(
ERR
, 0,

680 
‹g_v
, 
›ti⁄_num
, 
›t
->
«me
);

684 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
›ti⁄_num
,

685 
SANE_ACTION_SET_VALUE
, &
v
, &
öfo
);

686 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
),

687 "ˇ¬Ÿ së boﬁó¿›ti⁄ [%d, %s] vÆuê(%s)", 
›ti⁄_num
, 
›t
->
«me
, 
	`ß√_°r°©us
(
°©us
));

688 
	`check
(
ERR
, (
v
 !
‹g_v
),

691 i‡(
öfo
 & 
SANE_INFO_RELOAD_PARAMS
) {

692 
	`ã°_∑ømëîs
(
devi˚
, 
NULL
);

696 
v
 = 
‹g_v
;

697 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
›ti⁄_num
,

698 
SANE_ACTION_SET_VALUE
, &
v
, &
öfo
);

699 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
),

700 "ˇ¬Ÿ së boﬁó¿›ti⁄ [%d, %s] vÆuê(%s)", 
›ti⁄_num
, 
›t
->
«me
, 
	`ß√_°r°©us
(
°©us
));

701 
	`check
(
ERR
, (
v
 =
‹g_v
),

704 i‡(
öfo
 & 
SANE_INFO_RELOAD_PARAMS
) {

705 
	`ã°_∑ømëîs
(
devi˚
, 
NULL
);

710 
›t
->
ty≥
) {

711 
SANE_TYPE_BOOL
: {

712 
SANE_W‹d
 
v
;

714 
v
 = -1;

715 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
›ti⁄_num
,

716 
SANE_ACTION_SET_VALUE
, &
v
, 
NULL
);

717 
	`check
(
ERR
, (
°©us
 !
SANE_STATUS_GOOD
),

718 "wa†abÀÅÿ£à™ invÆid vÆuêf‹ boﬁó¿›ti⁄ [%d, %s]", 
›ti⁄_num
, 
›t
->
«me
);

720 
v
 = 2;

721 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
›ti⁄_num
,

722 
SANE_ACTION_SET_VALUE
, &
v
, 
NULL
);

723 
	`check
(
ERR
, (
°©us
 !
SANE_STATUS_GOOD
),

724 "wa†abÀÅÿ£à™ invÆid vÆuêf‹ boﬁó¿›ti⁄ [%d, %s]", 
›ti⁄_num
, 
›t
->
«me
);

728 
SANE_TYPE_FIXED
:

729 
SANE_TYPE_INT
: {

730 
SANE_I¡
 *
v
;

731 
i
;

733 
v
 = 
	`gu¨ds_mÆloc
(
›t
->
size
);

738 i‡(
›t
->
c⁄°øöt_ty≥
 =
SANE_CONSTRAINT_RANGE
) {

739 
i
=0; i<
›t
->
size
 / (
SANE_I¡
); i++)

740 
v
[
i
] = 
›t
->
c⁄°øöt
.
ønge
->
mö
 - 1;

742 
	`gu¨ds_£t
(
v
, 
›t
->
size
);

743 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
›ti⁄_num
,

744 
SANE_ACTION_SET_VALUE
, 
v
, &
öfo
);

745 
	`gu¨ds_check
(
v
, 
›t
->
size
);

746 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
 && (
öfo
 & 
SANE_INFO_INEXACT
) ),

747 "öc‹ª˘Ñëu∫ whí sëtögá¿övÆidÑ™gêvÆuêf‹ o±i⁄ [%d, %s] (°©u†%s, infÿ%x)", 
›ti⁄_num
, 
›t
->
«me
, 
	`ß√_°r°©us
(
°©us
), 
öfo
);

750 
	`gu¨ds_£t
(
v
, 
›t
->
size
);

751 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
›ti⁄_num
,

752 
SANE_ACTION_SET_VALUE
, 
v
, &
öfo
);

753 
	`gu¨ds_check
(
v
, 
›t
->
size
);

754 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
 && !(
öfo
 & 
SANE_INFO_INEXACT
) ),

755 "öc‹ª˘Ñëu∫ whí sëtögá¿övÆidÑ™gêvÆuêf‹ o±i⁄ [%d, %s] (°©u†%s, infÿ%x)", 
›ti⁄_num
, 
›t
->
«me
, 
	`ß√_°r°©us
(
°©us
), 
öfo
);

758 
i
=0; i<
›t
->
size
 / (
SANE_I¡
); i++)

759 
v
[
i
] = 
›t
->
c⁄°øöt
.
ønge
->
max
 + 1;

761 
	`gu¨ds_£t
(
v
, 
›t
->
size
);

762 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
›ti⁄_num
,

763 
SANE_ACTION_SET_VALUE
, 
v
, &
öfo
);

764 
	`gu¨ds_check
(
v
, 
›t
->
size
);

765 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
 && (
öfo
 & 
SANE_INFO_INEXACT
) ),

766 "öc‹ª˘Ñëu∫ whí sëtögá¿övÆidÑ™gêvÆuêf‹ o±i⁄ [%d, %s] (°©u†%s, infÿ%x)", 
›ti⁄_num
, 
›t
->
«me
, 
	`ß√_°r°©us
(
°©us
), 
öfo
);

769 
	`gu¨ds_£t
(
v
, 
›t
->
size
);

770 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
›ti⁄_num
,

771 
SANE_ACTION_SET_VALUE
, 
v
, &
öfo
);

772 
	`gu¨ds_check
(
v
, 
›t
->
size
);

773 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
 && !(
öfo
 & 
SANE_INFO_INEXACT
) ),

774 "öc‹ª˘Ñëu∫ whí sëtögá vÆidÑ™gêvÆuêf‹ o±i⁄ [%d, %s] (°©u†%s, infÿ%x)", 
›ti⁄_num
, 
›t
->
«me
, 
	`ß√_°r°©us
(
°©us
), 
öfo
);

777 
	`gu¨ds_‰ì
(
v
);

794 
›t
->
c⁄°øöt_ty≥
) {

795 
SANE_CONSTRAINT_WORD_LIST
:

796 
	`check
(
FATAL
, (
›t
->
c⁄°øöt
.
w‹d_li°
 !
NULL
),

797 "nÿc⁄°øöàli° f‹ o±i⁄ [%d, %s]", 
›ti⁄_num
, 
›t
->
«me
);

798 
	`ã°_›ti⁄s_w‹d_li°
 (
devi˚
, 
›ti⁄_num
, 
›t
, 
ˇn_do_ªcursive
);

801 
SANE_CONSTRAINT_STRING_LIST
:

802 
	`check
(
FATAL
, (
›t
->
c⁄°øöt
.
°rög_li°
 !
NULL
),

803 "nÿc⁄°øöàli° f‹ o±i⁄ [%d, %s]", 
›ti⁄_num
, 
›t
->
«me
);

804 
	`ã°_›ti⁄s_°rög_li°
 (
devi˚
, 
›ti⁄_num
, 
›t
, 
ˇn_do_ªcursive
);

807 
SANE_CONSTRAINT_RANGE
:

808 
	`check
(
FATAL
, (
›t
->
c⁄°øöt
.
ønge
 !
NULL
),

809 "nÿc⁄°øöàøngêf‹ o±i⁄ [%d, %s]", 
›ti⁄_num
, 
›t
->
«me
);

810 
	`check
(
FATAL
, (
›t
->
c⁄°øöt
.
ønge
->
max
 >›t->c⁄°øöt.ønge->
mö
),

812 
›ti⁄_num
, 
›t
->
«me
, o±->
c⁄°øöt
.
ønge
->
mö
, o±->c⁄°øöt.ønge->
max
);

814 i‡(
ˇn_do_ªcursive
) {

815 
	`ã°_›ti⁄s
(
devi˚
, 
ˇn_do_ªcursive
-1);

819 
SANE_CONSTRAINT_NONE
:

820 
	`check
(
INF
, (
›t
->
c⁄°øöt
.
ønge
 =
NULL
),

821 "›ti⁄ [%d, %s] ha†somêc⁄°øöàvÆuê£t", 
›ti⁄_num
, 
›t
->
«me
);

824 i‡(
ˇn_do_ªcursive
) {

825 
	`ã°_›ti⁄s
(
devi˚
, 
ˇn_do_ªcursive
-1);

834 
›t
 = 
	`ß√_gë_›ti⁄_des¸ùt‹
 (
devi˚
, -1);

835 
	`check
(
ERR
, (
›t
 =
NULL
),

838 
›t
 = 
	`ß√_gë_›ti⁄_des¸ùt‹
 (
devi˚
, 
num_dev_›ti⁄s
+1);

839 
	`check
(
ERR
, (
›t
 =
NULL
),

840 "wa†abÀÅÿgë o±i⁄ des¸ùt‹ f‹ o±i⁄ %d", 
num_dev_›ti⁄s
+1);

842 
›t
 = 
	`ß√_gë_›ti⁄_des¸ùt‹
 (
devi˚
, 
num_dev_›ti⁄s
+2);

843 
	`check
(
ERR
, (
›t
 =
NULL
),

844 "wa†abÀÅÿgë o±i⁄ des¸ùt‹ f‹ o±i⁄ %d", 
num_dev_›ti⁄s
+2);

846 
›t
 = 
	`ß√_gë_›ti⁄_des¸ùt‹
 (
devi˚
, 
num_dev_›ti⁄s
+50);

847 
	`check
(
ERR
, (
›t
 =
NULL
),

848 "wa†abÀÅÿgë o±i⁄ des¸ùt‹ f‹ o±i⁄ %d", 
num_dev_›ti⁄s
+50);

849 
	}
}

852 c⁄° 
SANE_O±i⁄_Des¸ùt‹
 *
	$gë_›tdesc_by_«me
(
SANE_H™dÀ
 
devi˚
, c⁄° *
«me
, *
›ti⁄_num
)

854 c⁄° 
SANE_O±i⁄_Des¸ùt‹
 *
›t
;

855 
SANE_I¡
 
num_dev_›ti⁄s
;

856 
SANE_Sètus
 
°©us
;

859 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 0, 
SANE_ACTION_GET_VALUE
, &
num_dev_›ti⁄s
, 0);

860 
	`check
(
FATAL
, (
°©us
 =
SANE_STATUS_GOOD
),

861 "ˇ¬Ÿ gë o±i⁄ 0 vÆuê(%s)", 
	`ß√_°r°©us
(
°©us
));

863 *
›ti⁄_num
 = 0; *›ti⁄_num < 
num_dev_›ti⁄s
; (*option_num)++) {

866 
›t
 = 
	`ß√_gë_›ti⁄_des¸ùt‹
 (
devi˚
, *
›ti⁄_num
);

867 
	`check
(
FATAL
, (
›t
 !
NULL
),

868 "ˇ¬Ÿ gë o±i⁄ des¸ùt‹ f‹ o±i⁄ %d", *
›ti⁄_num
);

870 i‡(
›t
->
«me
 && 
	`°rcmp
(opt->name,Çame) == 0) {

871 (
›t
);

874 (
NULL
);

875 
	}
}

879 
	$£t_mö_vÆue
(
SANE_H™dÀ
 
devi˚
, 
›ti⁄_num
,

880 c⁄° 
SANE_O±i⁄_Des¸ùt‹
 *
›t
)

882 
SANE_Sètus
 
°©us
;

883 
SANE_Såög
 
vÆ_°rög
;

884 
SANE_I¡
 
vÆ_öt
;

885 
rc
;

887 
	`check
(
BUG
, (
	`SANE_OPTION_IS_SETTABLE
(
›t
->
ˇp
)),

890 
›t
->
c⁄°øöt_ty≥
) {

891 
SANE_CONSTRAINT_WORD_LIST
:

892 
rc
 = 
	`check
(
ERR
, (
›t
->
c⁄°øöt
.
w‹d_li°
[0] > 0),

893 "nÿvÆuêöÅhêli° f‹ o±i⁄ %s", 
›t
->
«me
);

894 i‡(!
rc
) ;

895 
vÆ_öt
 = 
›t
->
c⁄°øöt
.
w‹d_li°
[1];

896 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
›ti⁄_num
,

897 
SANE_ACTION_SET_VALUE
, &
vÆ_öt
, 
NULL
);

898 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
),

899 "ˇ¬Ÿ së o±i⁄ %†tÿ%d (%s)", 
›t
->
«me
, 
vÆ_öt
, 
	`ß√_°r°©us
(
°©us
));

902 
SANE_CONSTRAINT_STRING_LIST
:

903 
rc
 = 
	`check
(
ERR
, (
›t
->
c⁄°øöt
.
°rög_li°
[0] !
NULL
),

904 "nÿvÆuêöÅhêli° f‹ o±i⁄ %s", 
›t
->
«me
);

905 i‡(!
rc
) ;

906 
vÆ_°rög
 = 
	`°rdup
(
›t
->
c⁄°øöt
.
°rög_li°
[0]);

907 
	`as£π
(
vÆ_°rög
);

908 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
›ti⁄_num
,

909 
SANE_ACTION_SET_VALUE
, 
vÆ_°rög
, 
NULL
);

910 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
),

911 "ˇ¬Ÿ së o±i⁄ %†tÿ[%s] (%s)", 
›t
->
«me
, 
vÆ_°rög
, 
	`ß√_°r°©us
(
°©us
));

912 
	`‰ì
(
vÆ_°rög
);

915 
SANE_CONSTRAINT_RANGE
:

916 
vÆ_öt
 = 
›t
->
c⁄°øöt
.
ønge
->
mö
;

917 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
›ti⁄_num
,

918 
SANE_ACTION_SET_VALUE
, &
vÆ_öt
, 
NULL
);

919 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
),

920 "ˇ¬Ÿ së o±i⁄ %†tÿ%d (%s)", 
›t
->
«me
, 
vÆ_öt
, 
	`ß√_°r°©us
(
°©us
));

924 
	`ab‹t
();

926 
	}
}

930 
	$£t_max_vÆue
(
SANE_H™dÀ
 
devi˚
, 
›ti⁄_num
,

931 c⁄° 
SANE_O±i⁄_Des¸ùt‹
 *
›t
)

933 
SANE_Sètus
 
°©us
;

934 
SANE_Såög
 
vÆ_°rög
;

935 
SANE_I¡
 
vÆ_öt
;

936 
i
;

937 
rc
;

939 
	`check
(
BUG
, (
	`SANE_OPTION_IS_SETTABLE
(
›t
->
ˇp
)),

942 
›t
->
c⁄°øöt_ty≥
) {

943 
SANE_CONSTRAINT_WORD_LIST
:

944 
rc
 = 
	`check
(
ERR
, (
›t
->
c⁄°øöt
.
w‹d_li°
[0] > 0),

945 "nÿvÆuêöÅhêli° f‹ o±i⁄ %s", 
›t
->
«me
);

946 i‡(!
rc
) ;

947 
vÆ_öt
 = 
›t
->
c⁄°øöt
.
w‹d_li°
[opt->constraint.word_list[0]];

948 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
›ti⁄_num
,

949 
SANE_ACTION_SET_VALUE
, &
vÆ_öt
, 
NULL
);

950 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
),

951 "ˇ¬Ÿ së o±i⁄ %†tÿ%d (%s)", 
›t
->
«me
, 
vÆ_öt
, 
	`ß√_°r°©us
(
°©us
));

954 
SANE_CONSTRAINT_STRING_LIST
:

955 
rc
 = 
	`check
(
ERR
, (
›t
->
c⁄°øöt
.
°rög_li°
[0] !
NULL
),

956 "nÿvÆuêöÅhêli° f‹ o±i⁄ %s", 
›t
->
«me
);

957 i‡(!
rc
) ;

958 
i
=1; 
›t
->
c⁄°øöt
.
°rög_li°
[i] !
NULL
; i++);

959 
vÆ_°rög
 = 
	`°rdup
(
›t
->
c⁄°øöt
.
°rög_li°
[
i
-1]);

960 
	`as£π
(
vÆ_°rög
);

961 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
›ti⁄_num
,

962 
SANE_ACTION_SET_VALUE
, 
vÆ_°rög
, 
NULL
);

963 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
),

964 "ˇ¬Ÿ së o±i⁄ %†tÿ[%s] (%s)", 
›t
->
«me
, 
vÆ_°rög
, 
	`ß√_°r°©us
(
°©us
));

965 
	`‰ì
(
vÆ_°rög
);

968 
SANE_CONSTRAINT_RANGE
:

969 
vÆ_öt
 = 
›t
->
c⁄°øöt
.
ønge
->
max
;

970 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
›ti⁄_num
,

971 
SANE_ACTION_SET_VALUE
, &
vÆ_öt
, 
NULL
);

972 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
),

973 "ˇ¬Ÿ së o±i⁄ %†tÿ%d (%s)", 
›t
->
«me
, 
vÆ_öt
, 
	`ß√_°r°©us
(
°©us
));

977 
	`ab‹t
();

979 
	}
}

982 
	$£t_øndom_vÆue
(
SANE_H™dÀ
 
devi˚
, 
›ti⁄_num
,

983 c⁄° 
SANE_O±i⁄_Des¸ùt‹
 *
›t
)

985 
SANE_Sètus
 
°©us
;

986 
SANE_Såög
 
vÆ_°rög
;

987 
SANE_I¡
 
vÆ_öt
;

988 
i
;

989 
rc
;

991 
	`check
(
BUG
, (
	`SANE_OPTION_IS_SETTABLE
(
›t
->
ˇp
)),

994 
›t
->
c⁄°øöt_ty≥
) {

995 
SANE_CONSTRAINT_WORD_LIST
:

996 
rc
 = 
	`check
(
ERR
, (
›t
->
c⁄°øöt
.
w‹d_li°
[0] > 0),

997 "nÿvÆuêöÅhêli° f‹ o±i⁄ %s", 
›t
->
«me
);

998 i‡(!
rc
) ;

999 
i
=1+(
	`ønd
(Ë% 
›t
->
c⁄°øöt
.
w‹d_li°
[0]);

1000 
vÆ_öt
 = 
›t
->
c⁄°øöt
.
w‹d_li°
[
i
];

1001 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
›ti⁄_num
,

1002 
SANE_ACTION_SET_VALUE
, &
vÆ_öt
, 
NULL
);

1003 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
),

1004 "ˇ¬Ÿ së o±i⁄ %†tÿ%d (%s)", 
›t
->
«me
, 
vÆ_öt
, 
	`ß√_°r°©us
(
°©us
));

1007 
SANE_CONSTRAINT_STRING_LIST
:

1008 
rc
 = 
	`check
(
ERR
, (
›t
->
c⁄°øöt
.
°rög_li°
[0] !
NULL
),

1009 "nÿvÆuêöÅhêli° f‹ o±i⁄ %s", 
›t
->
«me
);

1010 i‡(!
rc
) ;

1011 
i
=0; 
›t
->
c⁄°øöt
.
°rög_li°
[i] !
NULL
; i++);

1012 
i
 = 
	`ønd
() % i;

1013 
vÆ_°rög
 = 
	`°rdup
(
›t
->
c⁄°øöt
.
°rög_li°
[0]);

1014 
	`as£π
(
vÆ_°rög
);

1015 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
›ti⁄_num
,

1016 
SANE_ACTION_SET_VALUE
, 
vÆ_°rög
, 
NULL
);

1017 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
),

1018 "ˇ¬Ÿ së o±i⁄ %†tÿ[%s] (%s)", 
›t
->
«me
, 
vÆ_°rög
, 
	`ß√_°r°©us
(
°©us
));

1019 
	`‰ì
(
vÆ_°rög
);

1022 
SANE_CONSTRAINT_RANGE
:

1023 
i
 = 
›t
->
c⁄°øöt
.
ønge
->
max
 - o±->c⁄°øöt.ønge->
mö
;

1024 
i
 = 
	`ønd
() % i;

1025 
vÆ_öt
 = 
›t
->
c⁄°øöt
.
ønge
->
mö
 + 
i
;

1026 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
›ti⁄_num
,

1027 
SANE_ACTION_SET_VALUE
, &
vÆ_öt
, 
NULL
);

1028 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
),

1029 "ˇ¬Ÿ së o±i⁄ %†tÿ%d (%s)", 
›t
->
«me
, 
vÆ_öt
, 
	`ß√_°r°©us
(
°©us
));

1033 
	`ab‹t
();

1035 
	}
}

1040 *
	$gë_›ti⁄_vÆue
(
SANE_H™dÀ
 
devi˚
, c⁄° *
›ti⁄_«me
)

1042 c⁄° 
SANE_O±i⁄_Des¸ùt‹
 *
›t
;

1043 *
›tvÆ
;

1044 
›äum
;

1045 
°r
[100];

1046 
SANE_Sètus
 
°©us
;

1048 
›t
 = 
	`gë_›tdesc_by_«me
(
devi˚
, 
›ti⁄_«me
, &
›äum
);

1049 i‡(
›t
) {

1051 
›tvÆ
 = 
	`gu¨ds_mÆloc
(
›t
->
size
);

1052 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
›äum
,

1053 
SANE_ACTION_GET_VALUE
, 
›tvÆ
, 
NULL
);

1055 i‡(
°©us
 =
SANE_STATUS_GOOD
) {

1056 
›t
->
ty≥
) {

1058 
SANE_TYPE_BOOL
:

1059 i‡(*(
SANE_W‹d
*Ë
›tvÆ
 =
SANE_FALSE
) {

1060 
	`°r˝y
(
°r
, "FALSE");

1062 
	`°r˝y
(
°r
, "TRUE");

1066 
SANE_TYPE_INT
:

1067 
	`•rötf
(
°r
, "%d", *(
SANE_W‹d
*Ë
›tvÆ
);

1070 
SANE_TYPE_FIXED
: {

1071 
i
;

1072 
i
 = 
	`SANE_UNFIX
(*(
SANE_W‹d
*Ë
›tvÆ
);

1073 
	`•rötf
(
°r
, "%d", 
i
);

1077 
SANE_TYPE_STRING
:

1078 
	`°r˝y
(
°r
, 
›tvÆ
);

1082 
°r
[0] = 0;

1086 
	`°r˝y
(
°r
, "backend default");

1089 
	`gu¨ds_‰ì
(
›tvÆ
);

1093 
	`°r˝y
(
°r
, "backend default");

1096 (
°r
);

1097 
	}
}

1100 *
	$di•œy_sˇn_∑ømëîs
(
SANE_H™dÀ
 
devi˚
)

1102 
°r
[150];

1103 *
p
 = 
°r
;

1105 *
p
 = 0;

1107 
p
 +
	`•rötf
’, "sˇ¿mode=[%s] ", 
	`gë_›ti⁄_vÆue
(
devi˚
, 
SANE_NAME_SCAN_MODE
));

1108 
p
 +
	`•rötf
’, "ªsﬁuti⁄=[%s] ", 
	`gë_›ti⁄_vÆue
(
devi˚
, 
SANE_NAME_SCAN_RESOLUTION
));

1110 
p
 +
	`•rötf
’, "é_x=[%s] ", 
	`gë_›ti⁄_vÆue
(
devi˚
, 
SANE_NAME_SCAN_TL_X
));

1111 
p
 +
	`•rötf
’, "é_y=[%s] ", 
	`gë_›ti⁄_vÆue
(
devi˚
, 
SANE_NAME_SCAN_TL_Y
));

1112 
p
 +
	`•rötf
’, "br_x=[%s] ", 
	`gë_›ti⁄_vÆue
(
devi˚
, 
SANE_NAME_SCAN_BR_X
));

1113 
p
 +
	`•rötf
’, "br_y=[%s] ", 
	`gë_›ti⁄_vÆue
(
devi˚
, 
SANE_NAME_SCAN_BR_Y
));

1115 (
°r
);

1116 
	}
}

1119 
	$ã°_sˇn
(
SANE_H™dÀ
 
devi˚
)

1121 c⁄° 
SANE_O±i⁄_Des¸ùt‹
 *
›t
;

1122 
SANE_Sètus
 
°©us
;

1123 
›ti⁄_num
;

1124 
SANE_I¡
 
vÆ_öt
;

1125 *
image
 = 
NULL
;

1126 
SANE_P¨amëîs
 
∑øms
;

1127 
size_t
 
to_ªad
;

1128 
SANE_I¡
 
Àn
;

1129 
ask_Àn
;

1130 
rc
;

1131 
fd
;

1139 
›t
 = 
	`gë_›tdesc_by_«me
(
devi˚
, 
SANE_NAME_SCAN_TL_X
, &
›ti⁄_num
);

1140 i‡(
›t
Ë
	`£t_mö_vÆue
(
devi˚
, 
›ti⁄_num
, opt);

1142 
›t
 = 
	`gë_›tdesc_by_«me
(
devi˚
, 
SANE_NAME_SCAN_TL_Y
, &
›ti⁄_num
);

1143 i‡(
›t
Ë
	`£t_mö_vÆue
(
devi˚
, 
›ti⁄_num
, opt);

1145 
›t
 = 
	`gë_›tdesc_by_«me
(
devi˚
, 
SANE_NAME_SCAN_BR_X
, &
›ti⁄_num
);

1146 i‡(
›t
Ë
	`£t_max_vÆue
(
devi˚
, 
›ti⁄_num
, opt);

1148 
›t
 = 
	`gë_›tdesc_by_«me
(
devi˚
, 
SANE_NAME_SCAN_BR_Y
, &
›ti⁄_num
);

1149 i‡(
›t
Ë
	`£t_max_vÆue
(
devi˚
, 
›ti⁄_num
, opt);

1151 
	#IMAGE_SIZE
 (512 * 1024)

	)

1152 
image
 = 
	`gu¨ds_mÆloc
(
IMAGE_SIZE
);

1155 
°©us
 = 
	`ß√_ªad
 (
devi˚
, 
image
, 
Àn
, &len);

1156 
	`check
(
ERR
, (
°©us
 !
SANE_STATUS_GOOD
),

1160 
°©us
 = 
	`ß√_£t_io_mode
 (
devi˚
, 
SANE_FALSE
);

1161 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_INVAL
),

1163 
°©us
 = 
	`ß√_£t_io_mode
 (
devi˚
, 
SANE_TRUE
);

1164 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_INVAL
 ||

1165 
°©us
 =
SANE_STATUS_UNSUPPORTED
),

1169 
°©us
 = 
	`ß√_gë_£À˘_fd
(
devi˚
, &
fd
);

1170 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_INVAL
 ||

1171 
°©us
 =
SANE_STATUS_UNSUPPORTED
),

1173 
	`ß√_°r°©us
 (
°©us
));

1175 i‡(
ã°_Àvñ
 > 2) {

1177 
	`check
(
MSG
, 0, "TEST: sˇ¿byãÖî byã - %s", 
	`di•œy_sˇn_∑ømëîs
(
devi˚
));

1179 
	`ã°_∑ømëîs
(
devi˚
, &
∑øms
);

1180 
°©us
 = 
	`ß√_°¨t
 (
devi˚
);

1181 
rc
 = 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
),

1182 "ˇ¬Ÿ sèπÅhêsˇ¿(%s)", 
	`ß√_°r°©us
 (
°©us
));

1183 i‡(!
rc
Ë
the_íd
;

1186 
°©us
 = 
	`ß√_£t_io_mode
 (
devi˚
, 
SANE_FALSE
);

1187 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
),

1191 
°©us
 = 
	`ß√_£t_io_mode
 (
devi˚
, 
SANE_TRUE
);

1192 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
 ||

1193 
°©us
 =
SANE_STATUS_UNSUPPORTED
),

1195 
	`ß√_°r°©us
 (
°©us
));

1198 
°©us
 = 
	`ß√_£t_io_mode
 (
devi˚
, 
SANE_FALSE
);

1199 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
),

1203 
fd
 = 0x76575;

1204 
°©us
 = 
	`ß√_gë_£À˘_fd
(
devi˚
, &
fd
);

1205 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
 ||

1206 
°©us
 =
SANE_STATUS_UNSUPPORTED
),

1208 
	`ß√_°r°©us
 (
°©us
));

1209 i‡(
°©us
 =
SANE_STATUS_GOOD
) {

1210 
	`check
(
ERR
, (
fd
 != 0x76575),

1212 
	`check
(
ERR
, (
fd
 >= 0),

1220 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
›ti⁄_num
,

1221 
SANE_ACTION_SET_VALUE
,

1222 &
vÆ_öt
 , 
NULL
);

1223 
	`check
(
WRN
, (
°©us
 !
SANE_STATUS_GOOD
),

1226 
	`ã°_∑ømëîs
(
devi˚
, &
∑øms
);

1228 i‡(
∑øms
.
byãs_≥r_löe
 !0 &&Ö¨ams.
löes
 != 0) {

1230 
to_ªad
 = 
∑øms
.
byãs_≥r_löe
 *Ö¨ams.
löes
;

1231 
SANE_TRUE
) {

1232 
Àn
 = 76457645;

1233 
	`gu¨ds_£t
(
image
, 1);

1234 
°©us
 = 
	`ß√_ªad
 (
devi˚
, 
image
, 1, &
Àn
);

1235 
	`gu¨ds_check
(
image
, 1);

1237 i‡(
°©us
 =
SANE_STATUS_EOF
) {

1239 
	`check
(
ERR
, (
Àn
 == 0),

1244 
rc
 = 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
),

1245 "sˇ¿°›≥d - sètu†i†%s", 
	`ß√_°r°©us
 (
°©us
));

1246 i‡(!
rc
) {

1247 
	`check
(
ERR
, (
Àn
 == 0),

1254 
rc
 = 
	`check
(
ERR
, (
Àn
 == 1),

1256 i‡(!
rc
) {

1260 
to_ªad
 -
Àn
;

1263 i‡(
∑øms
.
löes
 != -1) {

1264 
	`check
(
ERR
, (
to_ªad
 == 0),

1269 
	`ß√_ˇn˚l
(
devi˚
);

1273 
ask_Àn
 = 1;

1274 
	`gu¨ds_£t
(
image
, 
ask_Àn
);

1275 
°©us
 = 
	`ß√_ªad
 (
devi˚
, 
image
, 
ask_Àn
, &
Àn
);

1276 
	`gu¨ds_check
(
image
, 
ask_Àn
);

1277 
	`check
(
ERR
, (
°©us
 !
SANE_STATUS_GOOD
),

1284 
	`check
(
MSG
, 0, "TEST:Ö¨tü»sˇ¿- %s", 
	`di•œy_sˇn_∑ømëîs
(
devi˚
));

1286 
°©us
 = 
	`ß√_°¨t
 (
devi˚
);

1287 
rc
 = 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
),

1288 "ˇ¬Ÿ sèπÅhêsˇ¿(%s)", 
	`ß√_°r°©us
 (
°©us
));

1289 i‡(!
rc
Ë
the_íd
;

1291 
	`ã°_∑ømëîs
(
devi˚
, &
∑øms
);

1293 i‡(
∑øms
.
byãs_≥r_löe
 !0 &&Ö¨ams.
löes
 != 0) {

1295 
Àn
 = 10;

1297 
	`gu¨ds_£t
(
image
, 1);

1298 
°©us
 = 
	`ß√_ªad
 (
devi˚
, 
image
, 1, &
Àn
);

1299 
	`gu¨ds_check
(
image
, 1);

1301 
	`check
(
ERR
, (
Àn
 == 1),

1305 
	`ß√_ˇn˚l
(
devi˚
);

1311 
	`check
(
MSG
, 0, "TEST: sˇ¿øndomÜígth - %s", 
	`di•œy_sˇn_∑ømëîs
(
devi˚
));

1313 
	`ã°_∑ømëîs
(
devi˚
, &
∑øms
);

1316 
ask_Àn
 = 20;

1317 
	`gu¨ds_£t
(
image
, 
ask_Àn
);

1318 
°©us
 = 
	`ß√_ªad
 (
devi˚
, 
image
, 
ask_Àn
, &
Àn
);

1319 
	`gu¨ds_check
(
image
, 
ask_Àn
);

1320 
	`check
(
ERR
, (
°©us
 !
SANE_STATUS_GOOD
),

1323 
°©us
 = 
	`ß√_°¨t
 (
devi˚
);

1324 
rc
 = 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
),

1325 "ˇ¬Ÿ sèπÅhêsˇ¿(%s)", 
	`ß√_°r°©us
 (
°©us
));

1326 i‡(!
rc
Ë
the_íd
;

1329 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
›ti⁄_num
,

1330 
SANE_ACTION_SET_VALUE
,

1331 &
vÆ_öt
 , 
NULL
);

1332 
	`check
(
WRN
, (
°©us
 !
SANE_STATUS_GOOD
),

1335 
	`ã°_∑ømëîs
(
devi˚
, &
∑øms
);

1337 i‡(
∑øms
.
byãs_≥r_löe
 !0 &&Ö¨ams.
löes
 != 0) {

1339 
to_ªad
 = 
∑øms
.
byãs_≥r_löe
 *Ö¨ams.
löes
;

1340 
	`§™dom
(
	`time
(
NULL
));

1342 
SANE_TRUE
) {

1344 
ask_Àn
 = 
	`ønd
() & 0x7ffff;

1345 i‡(
ask_Àn
 =0Ë
Àn
 = 1;

1346 
Àn
 = 
ask_Àn
 + 4978;

1348 
	`gu¨ds_£t
(
image
, 
ask_Àn
);

1349 
°©us
 = 
	`ß√_ªad
 (
devi˚
, 
image
, 
ask_Àn
, &
Àn
);

1350 
	`gu¨ds_check
(
image
, 
ask_Àn
);

1352 i‡(
°©us
 =
SANE_STATUS_EOF
) {

1354 
	`check
(
ERR
, (
Àn
 == 0),

1359 
rc
 = 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
),

1360 "sˇ¿°›≥d - sètu†i†%s", 
	`ß√_°r°©us
 (
°©us
));

1361 i‡(!
rc
) {

1362 
	`check
(
ERR
, (
Àn
 == 0),

1369 
rc
 = 
	`check
(
ERR
, (
Àn
 > 0),

1371 i‡(!
rc
) {

1374 
rc
 = 
	`check
(
ERR
, (
Àn
 <
ask_Àn
),

1376 
Àn
, 
ask_Àn
);

1377 i‡(!
rc
) {

1381 
to_ªad
 -
Àn
;

1384 i‡(
∑øms
.
löes
 != -1) {

1385 
	`check
(
ERR
, (
to_ªad
 == 0),

1390 
	`ß√_ˇn˚l
(
devi˚
);

1393 
ask_Àn
 = 30;

1394 
	`gu¨ds_£t
(
image
, 
ask_Àn
);

1395 
°©us
 = 
	`ß√_ªad
 (
devi˚
, 
image
, 
ask_Àn
, &
Àn
);

1396 
	`gu¨ds_check
(
image
, 
ask_Àn
);

1397 
	`check
(
ERR
, (
°©us
 !
SANE_STATUS_GOOD
),

1403 
	`check
(
MSG
, 0, "TEST: sˇ¿wôhá big max_À¿- %s", 
	`di•œy_sˇn_∑ømëîs
(
devi˚
));

1405 
	`ã°_∑ømëîs
(
devi˚
, &
∑øms
);

1407 
°©us
 = 
	`ß√_°¨t
 (
devi˚
);

1408 
rc
 = 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
),

1409 "ˇ¬Ÿ sèπÅhêsˇ¿(%s)", 
	`ß√_°r°©us
 (
°©us
));

1410 i‡(!
rc
Ë
the_íd
;

1412 
	`ã°_∑ømëîs
(
devi˚
, &
∑øms
);

1414 i‡(
∑øms
.
byãs_≥r_löe
 !0 &&Ö¨ams.
löes
 != 0) {

1416 
to_ªad
 = 
∑øms
.
byãs_≥r_löe
 *Ö¨ams.
löes
;

1417 
SANE_TRUE
) {

1418 
ask_Àn
 = 
IMAGE_SIZE
;

1419 
Àn
 = 
	`ønd
();

1421 
	`gu¨ds_£t
(
image
, 
ask_Àn
);

1422 
°©us
 = 
	`ß√_ªad
 (
devi˚
, 
image
, 
ask_Àn
, &
Àn
);

1423 
	`gu¨ds_check
(
image
, 
ask_Àn
);

1425 i‡(
°©us
 =
SANE_STATUS_EOF
) {

1427 
	`check
(
ERR
, (
Àn
 == 0),

1432 
rc
 = 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
),

1433 "sˇ¿°›≥d - sètu†i†%s", 
	`ß√_°r°©us
 (
°©us
));

1434 i‡(!
rc
) {

1435 
	`check
(
ERR
, (
Àn
 == 0),

1441 
rc
 = 
	`check
(
ERR
, (
Àn
 > 0),

1443 i‡(!
rc
) {

1447 
rc
 = 
	`check
(
ERR
, (
Àn
 <
ask_Àn
),

1449 
Àn
, 
ask_Àn
);

1450 i‡(!
rc
) {

1454 
to_ªad
 -
Àn
;

1457 i‡(
∑øms
.
löes
 != -1) {

1458 
	`check
(
ERR
, (
to_ªad
 == 0),

1463 
	`ß√_ˇn˚l
(
devi˚
);

1465 
the_íd
:

1466 i‡(
image
Ë
	`gu¨ds_‰ì
(image);

1467 
	}
}

1470 
	$ã°_sˇns
(
SANE_Devi˚
 * 
devi˚
)

1472 c⁄° 
SANE_O±i⁄_Des¸ùt‹
 *
sˇn_mode_›t
;

1473 c⁄° 
SANE_O±i⁄_Des¸ùt‹
 *
ªsﬁuti⁄_mode_›t
;

1474 
SANE_Sètus
 
°©us
;

1475 
sˇn_mode_›äum
;

1476 
ªsﬁuti⁄_mode_›äum
;

1477 
SANE_Såög
 
vÆ_°rög
;

1478 
i
;

1479 
rc
;

1488 
sˇn_mode_›t
 = 
	`gë_›tdesc_by_«me
(
devi˚
, 
SANE_NAME_SCAN_MODE
, &
sˇn_mode_›äum
);

1489 i‡(
sˇn_mode_›t
) {

1491 
rc
 = 
	`check
(
INF
, (
sˇn_mode_›t
->
ty≥
 =
SANE_TYPE_STRING
),

1492 "›ti⁄ [%s] i†nŸá SANE_TYPE_STRING - skùpögÅe°", 
SANE_NAME_SCAN_MODE
);

1493 i‡(!
rc
) ;

1494 
rc
 = 
	`check
(
INF
, (
sˇn_mode_›t
->
c⁄°øöt_ty≥
 =
SANE_CONSTRAINT_STRING_LIST
),

1495 "c⁄°øöàf‹ o±i⁄ [%s] i†nŸ SANE_CONSTRAINT_STRING_LIST - skùpögÅe°", 
SANE_NAME_SCAN_MODE
);

1496 i‡(!
rc
) ;

1497 
rc
 = 
	`check
(
INF
, (
	`SANE_OPTION_IS_SETTABLE
(
sˇn_mode_›t
->
ˇp
)),

1498 "›ti⁄ [%s] i†nŸ sëèbÀ - skùpögÅe°", 
SANE_NAME_SCAN_MODE
);

1499 i‡(!
rc
) ;

1502 
ªsﬁuti⁄_mode_›t
 = 
	`gë_›tdesc_by_«me
(
devi˚
, 
SANE_NAME_SCAN_RESOLUTION
, &
ªsﬁuti⁄_mode_›äum
);

1503 i‡(
ªsﬁuti⁄_mode_›t
) {

1504 
rc
 = 
	`check
(
INF
, (
	`SANE_OPTION_IS_SETTABLE
(
ªsﬁuti⁄_mode_›t
->
ˇp
)),

1505 "›ti⁄ [%s] i†nŸ sëèbÀ - skùpögÅe°", 
SANE_NAME_SCAN_RESOLUTION
);

1506 i‡(!
rc
) ;

1509 i‡(
sˇn_mode_›t
) {

1511 
i
=0; 
sˇn_mode_›t
->
c⁄°øöt
.
°rög_li°
[i] !
NULL
; i++) {

1513 
vÆ_°rög
 = 
	`°rdup
(
sˇn_mode_›t
->
c⁄°øöt
.
°rög_li°
[
i
]);

1514 
	`as£π
(
vÆ_°rög
);

1516 
°©us
 = 
	`ß√_c⁄åﬁ_›ti⁄
 (
devi˚
, 
sˇn_mode_›äum
,

1517 
SANE_ACTION_SET_VALUE
, 
vÆ_°rög
, 
NULL
);

1518 
	`check
(
FATAL
, (
°©us
 =
SANE_STATUS_GOOD
),

1519 "ˇ¬Ÿ sëá sëèbÀ o±i⁄ (°©us=%s)", 
	`ß√_°r°©us
(
°©us
));

1521 
	`‰ì
(
vÆ_°rög
);

1523 i‡(
ªsﬁuti⁄_mode_›t
) {

1524 
	`£t_mö_vÆue
(
devi˚
, 
ªsﬁuti⁄_mode_›äum
,

1525 
ªsﬁuti⁄_mode_›t
);

1526 
	`ã°_sˇn
(
devi˚
);

1528 
	`£t_max_vÆue
(
devi˚
, 
ªsﬁuti⁄_mode_›äum
,

1529 
ªsﬁuti⁄_mode_›t
);

1530 
	`ã°_sˇn
(
devi˚
);

1532 
	`£t_øndom_vÆue
(
devi˚
, 
ªsﬁuti⁄_mode_›äum
,

1533 
ªsﬁuti⁄_mode_›t
);

1534 
	`ã°_sˇn
(
devi˚
);

1536 
	`ã°_sˇn
(
devi˚
);

1540 i‡(
ªsﬁuti⁄_mode_›t
) {

1541 
	`£t_mö_vÆue
(
devi˚
, 
ªsﬁuti⁄_mode_›äum
,

1542 
ªsﬁuti⁄_mode_›t
);

1543 
	`ã°_sˇn
(
devi˚
);

1545 
	`£t_max_vÆue
(
devi˚
, 
ªsﬁuti⁄_mode_›äum
,

1546 
ªsﬁuti⁄_mode_›t
);

1547 
	`ã°_sˇn
(
devi˚
);

1549 
	`£t_øndom_vÆue
(
devi˚
, 
ªsﬁuti⁄_mode_›äum
,

1550 
ªsﬁuti⁄_mode_›t
);

1551 
	`ã°_sˇn
(
devi˚
);

1553 
	`ã°_sˇn
(
devi˚
);

1556 
	}
}

1558 
	$ußge
(c⁄° *
exe˙ame
)

1560 
	`¥ötf
("Ußge: %†[-d backíd_«me] [-»ã°_Àvñ] [-∏ªcursi⁄_Àvñ]\n", 
exe˙ame
);

1561 
	`¥ötf
("\t-d\tbackendÇame\n");

1562 
	`¥ötf
("\t-l\tlevel ofÅesting (0=some, 1=0+options, 2=1+scans, 3=longestÅests)\n");

1563 
	`¥ötf
("\t-r\trecursionÜevel for optionÅesting (the higher,ÅheÜonger)\n");

1564 
	}
}

1567 
	$maö
 (
¨gc
, **
¨gv
)

1569 *
dev«me
 = 
NULL
;

1570 
SANE_Sètus
 
°©us
;

1571 
SANE_I¡
 
vîsi⁄_code
;

1572 
SANE_H™dÀ
 
devi˚
;

1573 
ch
;

1574 
ödex
;

1575 
i
;

1576 c⁄° 
SANE_Devi˚
 **
devi˚_li°
;

1577 c⁄° 
SANE_Devi˚
 *
dev
;

1578 
rc
;

1579 
ªcursi⁄_Àvñ
;

1581 
	`¥ötf
("tstbackend, Copyright (C) 2002 Frank Zago\n");

1582 
	`¥ötf
("tstbackend comes with ABSOLUTELY NO WARRANTY\n");

1583 
	`¥ötf
("This is free software,ánd youáre welcomeÅoÑedistribute it\n");

1584 
	`¥ötf
("under certain conditions. See COPYING file for details\n\n");

1585 
	`¥ötf
("Thi†i†t°backíd buûd %d\n\n", 
BUILD
);

1588 
›ãº
 = 0;

1589 
ªcursi⁄_Àvñ
 = 5;

1590 
ã°_Àvñ
 = 0;

1592 (
ch
 = 
	`gë›t_l⁄g
 (
¨gc
, 
¨gv
, "-d:l:r:h", 
basic_›ti⁄s
,

1593 &
ödex
)Ë!
EOF
) {

1594 
ch
) {

1596 
dev«me
 = 
	`°rdup
(
›èrg
);

1600 
ã°_Àvñ
 = 
	`©oi
(
›èrg
);

1601 i‡(
ã°_Àvñ
 < 0 ||Åest_level > 4) {

1602 
	`Ârötf
(
°dîr
, "invalidÅest_level\n");

1608 
ªcursi⁄_Àvñ
 = 
	`©oi
(
›èrg
);

1612 
	`ußge
(
¨gv
[0]);

1616 
	`Ârötf
(
°dîr
, "invalid option\n");

1620 
	`Ârötf
(
°dîr
, "bug inÅstbackend\n");

1626 
	`check
(
MSG
, 0, "TEST: init/exit");

1627 
i
=0; i<10; i++) {

1629 
°©us
 = 
	`ß√_öô
(&
vîsi⁄_code
, 
NULL
);

1630 
	`check
(
FATAL
, (
°©us
 =
SANE_STATUS_GOOD
),

1631 "ß√_öô faûed wôh %s", 
	`ß√_°r°©us
 (
°©us
));

1632 
	`check
(
FATAL
, (
	`SANE_VERSION_MAJOR
(
vîsi⁄_code
) == 1),

1634 
	`ß√_exô
();

1637 
°©us
 = 
	`ß√_öô
(
NULL
, NULL);

1638 
	`check
(
FATAL
, (
°©us
 =
SANE_STATUS_GOOD
),

1639 "ß√_öô faûed wôh %s", 
	`ß√_°r°©us
 (
°©us
));

1640 
	`ß√_exô
();

1643 
°©us
 = 
	`ß√_öô
(
NULL
, NULL);

1644 
	`check
(
FATAL
, (
°©us
 =
SANE_STATUS_GOOD
),

1645 "ß√_öô faûed wôh %s", 
	`ß√_°r°©us
 (
°©us
));

1647 
°©us
 = 
	`ß√_gë_devi˚s
 (&
devi˚_li°
, 
SANE_TRUE
);

1648 
	`check
(
FATAL
, (
°©us
 =
SANE_STATUS_GOOD
),

1649 "ß√_gë_devi˚s(ËÁûed (%s)", 
	`ß√_°r°©us
 (
°©us
));

1651 
°©us
 = 
	`ß√_›í
 ("›ihndv£s75bvt6fg", &
devi˚
);

1652 
	`check
(
WRN
, (
°©us
 =
SANE_STATUS_INVAL
),

1653 "ß√_›í(ËÁûed (%s)", 
	`ß√_°r°©us
 (
°©us
));

1655 i‡(
°©us
 =
SANE_STATUS_GOOD
)

1656 
	`ß√_˛o£
(
devi˚
);

1658 
	`ß√_exô
();

1661 
°©us
 = 
	`ß√_öô
(
NULL
, NULL);

1662 
	`check
(
FATAL
, (
°©us
 =
SANE_STATUS_GOOD
),

1663 "ß√_öô faûed wôh %s", 
	`ß√_°r°©us
 (
°©us
));

1665 
°©us
 = 
	`ß√_gë_devi˚s
 (&
devi˚_li°
, 
SANE_TRUE
);

1666 
	`check
(
FATAL
, (
°©us
 =
SANE_STATUS_GOOD
),

1667 "ß√_gë_devi˚s(ËÁûed (%s)", 
	`ß√_°r°©us
 (
°©us
));

1669 
°©us
 = 
	`ß√_›í
 ("", &
devi˚
);

1670 i‡(
°©us
 =
SANE_STATUS_GOOD
)

1671 
	`ß√_˛o£
(
devi˚
);

1673 
	`ß√_exô
();

1676 
°©us
 = 
	`ß√_öô
 (&
vîsi⁄_code
, 
NULL
);

1677 
	`check
(
FATAL
, (
°©us
 =
SANE_STATUS_GOOD
),

1678 "ß√_öô faûed wôh %s", 
	`ß√_°r°©us
 (
°©us
));

1681 
°©us
 = 
	`ß√_gë_devi˚s
 (&
devi˚_li°
, 
SANE_TRUE
);

1682 
	`check
(
FATAL
, (
°©us
 =
SANE_STATUS_GOOD
),

1683 "ß√_gë_devi˚s(ËÁûed (%s)", 
	`ß√_°r°©us
 (
°©us
));

1686 
i
=0; 
devi˚_li°
[i] !
NULL
; i++) {

1688 
dev
 = 
devi˚_li°
[
i
];

1690 
	`check
(
FATAL
, (
dev
->
«me
 !
NULL
),

1692 
	`check
(
FATAL
, (
dev
->
víd‹
 !
NULL
),

1694 
	`check
(
FATAL
, (
dev
->
ty≥
 !
NULL
),

1696 
	`check
(
FATAL
, (
dev
->
modñ
 !
NULL
),

1699 
	`check
(
INF
, ((
	`°rcmp
(
dev
->
ty≥
, "flatbed scanner") == 0) ||

1700 (
	`°rcmp
(
dev
->
ty≥
, "frame grabber") == 0) ||

1701 (
	`°rcmp
(
dev
->
ty≥
, "handheld scanner") == 0) ||

1702 (
	`°rcmp
(
dev
->
ty≥
, "still camera") == 0) ||

1703 (
	`°rcmp
(
dev
->
ty≥
, "video camera") == 0) ||

1704 (
	`°rcmp
(
dev
->
ty≥
, "virtual device") == 0) ||

1705 (
	`°rcmp
(
dev
->
ty≥
, "film scanner") == 0) ||

1706 (
	`°rcmp
(
dev
->
ty≥
, "multi-functionÖeripheral") == 0) ||

1707 (
	`°rcmp
(
dev
->
ty≥
, "sheetfed scanner") == 0)),

1708 "unknow¿devi˚Åy≥ [%s]. Upd©êSANE do¯£˘i⁄ \"Ty≥ Såögs\"", 
dev
->
ty≥
);

1710 
	`check
(
INF
, (

1711 (
	`°rcmp
(
dev
->
víd‹
, "AGFA") == 0) ||

1712 (
	`°rcmp
(
dev
->
víd‹
, "Abaton") == 0) ||

1713 (
	`°rcmp
(
dev
->
víd‹
, "Acer") == 0) ||

1714 (
	`°rcmp
(
dev
->
víd‹
, "Apple") == 0) ||

1715 (
	`°rcmp
(
dev
->
víd‹
, "Artec") == 0) ||

1716 (
	`°rcmp
(
dev
->
víd‹
, "Avision") == 0) ||

1717 (
	`°rcmp
(
dev
->
víd‹
, "CANON") == 0) ||

1718 (
	`°rcmp
(
dev
->
víd‹
, "Connectix") == 0) ||

1719 (
	`°rcmp
(
dev
->
víd‹
, "Epson") == 0) ||

1720 (
	`°rcmp
(
dev
->
víd‹
, "Fujitsu") == 0) ||

1721 (
	`°rcmp
(
dev
->
víd‹
, "Gphoto2") == 0) ||

1722 (
	`°rcmp
(
dev
->
víd‹
, "Hewlett-Packard") == 0) ||

1723 (
	`°rcmp
(
dev
->
víd‹
, "IBM") == 0) ||

1724 (
	`°rcmp
(
dev
->
víd‹
, "Kodak") == 0) ||

1725 (
	`°rcmp
(
dev
->
víd‹
, "Lexmark") == 0) ||

1726 (
	`°rcmp
(
dev
->
víd‹
, "Logitech") == 0) ||

1727 (
	`°rcmp
(
dev
->
víd‹
, "Microtek") == 0) ||

1728 (
	`°rcmp
(
dev
->
víd‹
, "Minolta") == 0) ||

1729 (
	`°rcmp
(
dev
->
víd‹
, "Mitsubishi") == 0) ||

1730 (
	`°rcmp
(
dev
->
víd‹
, "Mustek") == 0) ||

1731 (
	`°rcmp
(
dev
->
víd‹
, "NEC") == 0) ||

1732 (
	`°rcmp
(
dev
->
víd‹
, "Nikon") == 0) ||

1733 (
	`°rcmp
(
dev
->
víd‹
, "Noname") == 0) ||

1734 (
	`°rcmp
(
dev
->
víd‹
, "Plustek") == 0) ||

1735 (
	`°rcmp
(
dev
->
víd‹
, "Polaroid") == 0) ||

1736 (
	`°rcmp
(
dev
->
víd‹
, "Relisys") == 0) ||

1737 (
	`°rcmp
(
dev
->
víd‹
, "Ricoh") == 0) ||

1738 (
	`°rcmp
(
dev
->
víd‹
, "Sharp") == 0) ||

1739 (
	`°rcmp
(
dev
->
víd‹
, "Siemens") == 0) ||

1740 (
	`°rcmp
(
dev
->
víd‹
, "Tamarack") == 0) ||

1741 (
	`°rcmp
(
dev
->
víd‹
, "UMAX") == 0)),

1742 "unknow¿devi˚ víd‹ [%s]. Upd©êSANE do¯£˘i⁄ \"Víd‹ Såögs\"", 
dev
->
víd‹
);

1745 i‡(!
dev«me
) {

1749 
dev«me
 = 
	`gëív
 ("SANE_DEFAULT_DEVICE");

1750 i‡(
dev«me
Ëdev«mê
	`°rdup
(devname);

1753 i‡(!
dev«me
) {

1754 i‡(
devi˚_li°
[0]) {

1755 
dev«me
 = 
	`°rdup
(
devi˚_li°
[0]->
«me
);

1759 
rc
 = 
	`check
(
ERR
, (
dev«me
 !
NULL
),

1761 i‡(!
rc
Ë
the_exô
;

1763 
	`check
(
MSG
, 0, "usög devi˚ %s", 
dev«me
);

1766 
	`check
(
MSG
, 0, "TEST: open/close");

1767 
i
=0; i<10; i++) {

1768 
°©us
 = 
	`ß√_›í
 (
dev«me
, &
devi˚
);

1769 
rc
 = 
	`check
(
ERR
, (
°©us
 =
SANE_STATUS_GOOD
),

1770 "ß√_›í faûed wôh %†f‹ devi˚ %s", 
	`ß√_°r°©us
 (
°©us
), 
dev«me
);

1771 i‡(!
rc
Ë
the_exô
;

1772 
	`ß√_˛o£
 (
devi˚
);

1775 i‡(
ã°_Àvñ
 < 1) {

1776 
	`ß√_exô
();

1777 
the_exô
;

1782 
	`check
(
MSG
, 0, "TEST: options consistency");

1783 
°©us
 = 
	`ß√_›í
 (
dev«me
, &
devi˚
);

1784 
	`check
(
FATAL
, (
°©us
 =
SANE_STATUS_GOOD
),

1785 "ß√_›í faûed wôh %†f‹ devi˚ %s", 
	`ß√_°r°©us
 (
°©us
), 
dev«me
);

1787 
	`ã°_∑ømëîs
(
devi˚
, 
NULL
);

1788 
	`ã°_›ti⁄s
(
devi˚
, 
ªcursi⁄_Àvñ
);

1789 
	`ß√_˛o£
 (
devi˚
);

1790 
	`ß√_exô
();

1792 i‡(
ã°_Àvñ
 < 2) {

1793 
the_exô
;

1798 
	`check
(
MSG
, 0, "TEST: scanÅest");

1799 
°©us
 = 
	`ß√_öô
 (&
vîsi⁄_code
, 
NULL
);

1800 
	`check
(
FATAL
, (
°©us
 =
SANE_STATUS_GOOD
),

1801 "ß√_öô faûed wôh %s", 
	`ß√_°r°©us
 (
°©us
));

1802 
°©us
 = 
	`ß√_›í
 (
dev«me
, &
devi˚
);

1803 
	`check
(
FATAL
, (
°©us
 =
SANE_STATUS_GOOD
),

1804 "ß√_›í faûed wôh %†f‹ devi˚ %s", 
	`ß√_°r°©us
 (
°©us
), 
dev«me
);

1805 
	`ã°_sˇns
(
devi˚
);

1806 
	`ß√_˛o£
 (
devi˚
);

1807 
	`ß√_exô
();

1809 
the_exô
:

1810 i‡(
dev«me
Ë
	`‰ì
(devname);

1811 
	`di•œy_°©s
();

1813 
	}
}

	@../include/_stdint.h

1 #i‚de‡
_SANE_BACKENDS_INCLUDE__STDINT_H


2 
	#_SANE_BACKENDS_INCLUDE__STDINT_H
 1

	)

3 #i‚de‡
_GENERATED_STDINT_H


4 
	#_GENERATED_STDINT_H
 "ß√-backíd†1.0.23"

	)

6 
	#_STDINT_HAVE_STDINT_H
 1

	)

7 
	~<°döt.h
>

	@../include/lalloca.h

44 #i‚de‡
œŒoˇ_h


45 
	#œŒoˇ_h


	)

50 #i‡
deföed
(
__GNUC__
)

51 
	#Æloˇ
 
__buûtö_Æloˇ


	)

53 #i‡
HAVE_ALLOCA_H


54 
	~<Æloˇ.h
>

56 #ifde‡
_AIX


57 #¥agm®
Æloˇ


59 #i‚de‡
Æloˇ


63 
	#Æloˇ
 
ß√i_Æloˇ


	)

64 #i‡
__STDC__


65 *
Æloˇ
 ();

67 *
Æloˇ
 ();

	@../include/md5.h

21 #i‚de‡
_MD5_H


22 
	#_MD5_H
 1

	)

24 
	~<°dio.h
>

26 #i‡
deföed
 
HAVE_LIMITS_H
 || 
_LIBC


27 
	~<limôs.h
>

37 #ifde‡
_LIBC


38 
	~<°döt.h
>

39 
uöt32_t
 
	tmd5_uöt32
;

40 
uöçå_t
 
	tmd5_uöçå
;

42 #i‡
deföed
 
__STDC__
 && __STDC__

43 
	#UINT_MAX_32_BITS
 4294967295U

	)

45 
	#UINT_MAX_32_BITS
 0xFFFFFFFF

	)

53 #i‚de‡
UINT_MAX


54 
	#UINT_MAX
 
UINT_MAX_32_BITS


	)

57 #i‡
UINT_MAX
 =
UINT_MAX_32_BITS


58 
	tmd5_uöt32
;

60 #i‡
USHRT_MAX
 =
UINT_MAX_32_BITS


61 
	tmd5_uöt32
;

63 #i‡
ULONG_MAX
 =
UINT_MAX_32_BITS


64 
	tmd5_uöt32
;

74 
	tmd5_uöçå
;

77 #unde‡
__P


78 #i‡
deföed
 (
__STDC__
) && __STDC__

79 
	#__P
(
x
Ë
	)
x

81 
	#__P
(
x
Ë()

	)

84 
	#__md5_buf„r
 
md5_buf„r


	)

86 #i‡
deföed
 
__GNUC__


87 
	#ALIGN
 
	`__©åibuã__
 ((
	`__Æig√d__
 (4)))

	)

89 
	#ALIGN


	)

93 
	smd5_˘x


95 
md5_uöt32
 
	mA
;

96 
md5_uöt32
 
	mB
;

97 
md5_uöt32
 
	mC
;

98 
md5_uöt32
 
	mD
;

100 
md5_uöt32
 
	mtŸÆ
[2];

101 
md5_uöt32
 
	mbuÊí
;

102 
	mbuf„r
[128] 
	mALIGN
;

112 
__md5_öô_˘x
 
__P
 ((
md5_˘x
 *
˘x
));

118 
__md5_¥o˚ss_block
 
__P
 ((c⁄° *
buf„r
, 
size_t
 
Àn
,

119 
md5_˘x
 *
˘x
));

125 
__md5_¥o˚ss_byãs
 
__P
 ((c⁄° *
buf„r
, 
size_t
 
Àn
,

126 
md5_˘x
 *
˘x
));

135 *
__md5_föish_˘x
 
__P
 ((
md5_˘x
 *
˘x
, *
ªsbuf
));

144 *
__md5_ªad_˘x
 
__P
 ((c⁄° 
md5_˘x
 *
˘x
, *
ªsbuf
));

150 
__md5_°ªam
 
__P
 ((
FILE
 *
°ªam
, *
ªsblock
));

156 *
__md5_buf„r
 
__P
 ((c⁄° *
buf„r
, 
size_t
 
Àn
,

157 *
ªsblock
));

	@../include/sane/config.h

19 
	#ENABLE_IPV6
 1

	)

25 
	#HAS_SS_FAMILY
 1

	)

32 
	#HAVE_ALLOCA
 1

	)

36 
	#HAVE_ALLOCA_H
 1

	)

45 
	#HAVE_ASM_TYPES_H
 1

	)

48 
	#HAVE_ATEXIT
 1

	)

63 
	#HAVE_CFMAKERAW
 1

	)

75 
	#HAVE_DEV_URANDOM
 1

	)

78 
	#HAVE_DLFCN_H
 1

	)

81 
	#HAVE_DLOPEN
 1

	)

87 
	#HAVE_FCNTL_H
 1

	)

90 
	#HAVE_GETADDRINFO
 1

	)

93 
	#HAVE_GETENV
 1

	)

96 
	#HAVE_GETNAMEINFO
 1

	)

99 
	#HAVE_GETOPT_H
 1

	)

102 
	#HAVE_GETOPT_LONG
 1

	)

105 
	#HAVE_GETPAGESIZE
 1

	)

108 
	#HAVE_GETPASS
 1

	)

111 
	#HAVE_GETUID
 1

	)

123 
	#HAVE_IFADDRS_H
 1

	)

126 
	#HAVE_INET_ADDR
 1

	)

129 
	#HAVE_INET_ATON
 1

	)

132 
	#HAVE_INET_NTOA
 1

	)

135 
	#HAVE_INET_NTOP
 1

	)

138 
	#HAVE_INET_PTON
 1

	)

141 
	#HAVE_INTTYPES_H
 1

	)

158 
	#HAVE_IOPERM
 1

	)

161 
	#HAVE_IOPL
 1

	)

167 
	#HAVE_ISFDTYPE
 1

	)

182 
	#HAVE_LIBUSB
 1

	)

188 
	#HAVE_LIMITS_H
 1

	)

191 
	#HAVE_LINUX_PPDEV_H
 1

	)

194 
	#HAVE_LONG_LONG
 1

	)

206 
	#HAVE_MEMORY_H
 1

	)

209 
	#HAVE_MKDIR
 1

	)

212 
	#HAVE_MMAP
 1

	)

215 
	#HAVE_NETINET_IN_H
 1

	)

227 
	#HAVE_POLL
 1

	)

251 
	#HAVE_PWD_H
 1

	)

269 
	#HAVE_SCSI_SG_H
 1

	)

272 
	#HAVE_SETITIMER
 1

	)

275 
	#HAVE_SG_TARGET_STATUS
 1

	)

281 
	#HAVE_SIGPROCMASK
 1

	)

284 
	#HAVE_SLEEP
 1

	)

287 
	#HAVE_SNPRINTF
 1

	)

290 
	#HAVE_STDINT_H
 1

	)

293 
	#HAVE_STDLIB_H
 1

	)

296 
	#HAVE_STRCASECMP
 1

	)

299 
	#HAVE_STRCASESTR
 1

	)

302 
	#HAVE_STRDUP
 1

	)

305 
	#HAVE_STRFTIME
 1

	)

308 
	#HAVE_STRINGS_H
 1

	)

311 
	#HAVE_STRING_H
 1

	)

314 
	#HAVE_STRNCASECMP
 1

	)

317 
	#HAVE_STRNDUP
 1

	)

320 
	#HAVE_STRSEP
 1

	)

323 
	#HAVE_STRSTR
 1

	)

326 
	#HAVE_STRTOD
 1

	)

329 
	#HAVE_STRUCT_FLOCK
 1

	)

332 
	#HAVE_SYSLOG
 1

	)

335 
	#HAVE_SYS_BITYPES_H
 1

	)

344 
	#HAVE_SYS_IOCTL_H
 1

	)

347 
	#HAVE_SYS_IO_H
 1

	)

350 
	#HAVE_SYS_IPC_H
 1

	)

353 
	#HAVE_SYS_PARAM_H
 1

	)

359 
	#HAVE_SYS_POLL_H
 1

	)

386 
	#HAVE_SYS_SELECT_H
 1

	)

389 
	#HAVE_SYS_SEM_H
 1

	)

392 
	#HAVE_SYS_SHM_H
 1

	)

395 
	#HAVE_SYS_SIGNAL_H
 1

	)

398 
	#HAVE_SYS_SOCKET_H
 1

	)

401 
	#HAVE_SYS_STAT_H
 1

	)

404 
	#HAVE_SYS_TIME_H
 1

	)

407 
	#HAVE_SYS_TYPES_H
 1

	)

410 
	#HAVE_TCSENDBREAK
 1

	)

419 
	#HAVE_UNISTD_H
 1

	)

425 
	#HAVE_USLEEP
 1

	)

428 
	#HAVE_U_CHAR
 1

	)

431 
	#HAVE_U_INT
 1

	)

434 
	#HAVE_U_LONG
 1

	)

437 
	#HAVE_U_SHORT
 1

	)

440 
	#HAVE_VSYSLOG
 1

	)

453 
	#LT_OBJDIR
 ".libs/"

	)

459 
	#PACKAGE
 "ß√-backíds"

	)

462 
	#PACKAGE_BUGREPORT
 "ß√-devñ@li°s.ÆiŸh.debün.‹g"

	)

465 
	#PACKAGE_NAME
 "ß√-backíds"

	)

468 
	#PACKAGE_STRING
 "ß√-backíd†1.0.23"

	)

471 
	#PACKAGE_TARNAME
 "ß√-backíds"

	)

474 
	#PACKAGE_URL
 ""

	)

477 
	#PACKAGE_VERSION
 "1.0.23"

	)

480 
	#RETSIGTYPE
 

	)

483 
	#SANE_DLL_V_BUILD
 23

	)

486 
	#SANE_DLL_V_MAJOR
 1

	)

489 
	#SANE_DLL_V_MINOR
 0

	)

492 
	#SCSIBUFFERSIZE
 131072

	)

518 
	#STDC_HEADERS
 1

	)

524 #i‚de‡
_ALL_SOURCE


525 
	#_ALL_SOURCE
 1

	)

528 #i‚de‡
_GNU_SOURCE


529 
	#_GNU_SOURCE
 1

	)

532 #i‚de‡
_POSIX_PTHREAD_SEMANTICS


533 
	#_POSIX_PTHREAD_SEMANTICS
 1

	)

536 #i‚de‡
_TANDEM_SOURCE


537 
	#_TANDEM_SOURCE
 1

	)

540 #i‚de‡
__EXTENSIONS__


541 
	#__EXTENSIONS__
 1

	)

546 
	#VERSION
 "1.0.23"

	)

553 #i‡
deföed
 
AC_APPLE_UNIVERSAL_BUILD


554 #i‡
deföed
 
__BIG_ENDIAN__


555 
	#WORDS_BIGENDIAN
 1

	)

558 #i‚de‡
WORDS_BIGENDIAN


578 #i‚de‡
__˝lu•lus


605 #i‡
deföed
(
__MINGW32__
)

606 
	#_BSDTYPES_DEFINED


	)

609 #i‚de‡
HAVE_U_CHAR


610 
	#u_ch¨
 

	)

612 #i‚de‡
HAVE_U_SHORT


613 
	#u_sh‹t
 

	)

615 #i‚de‡
HAVE_U_INT


616 
	#u_öt
 

	)

618 #i‚de‡
HAVE_U_LONG


619 
	#u_l⁄g
 

	)

623 #i‚de‡
HAVE_GETENV


624 
	#gëív
 
ß√i_gëív


	)

625 * 
gëív
(c⁄° *
«me
);

629 #i‚de‡
HAVE_INET_NTOP


630 
	#öë_¡›
 
ß√i_öë_¡›


	)

631 
	~<sys/ty≥s.h
>

632 c⁄° * 
öë_¡›
 (
af
, c⁄° *
§c
, *
d°
, 
size_t
 
˙t
);

636 #i‚de‡
HAVE_INET_PTON


637 
	#öë_±⁄
 
ß√i_öë_±⁄


	)

638 
öë_±⁄
 (
af
, c⁄° *
§c
, *
d°
);

642 #i‚de‡
HAVE_ISFDTYPE


643 
	#isfdty≥
 
ß√i_isfdty≥


	)

644 
isfdty≥
(
fd
, 
fdty≥
);

648 #i‚de‡
HAVE_SIGPROCMASK


649 
	#sig¥ocmask
 
ß√i_sig¥ocmask


	)

650 
sig¥ocmask
 (
how
, *
√w
, *
ﬁd
);

654 #i‚de‡
HAVE_SNPRINTF


655 
	#¢¥ötf
 
ß√i_¢¥ötf


	)

656 
	~<sys/ty≥s.h
>

657 
¢¥ötf
 (*
°r
,
size_t
 
cou¡
,c⁄° *
fmt
,...);

661 #i‚de‡
HAVE_STRCASESTR


662 
	#°rˇ£°r
 
ß√i_°rˇ£°r


	)

663 * 
°rˇ£°r
 (c⁄° *
phay°ack
, c⁄° *
≤ìdÀ
);

667 #i‚de‡
HAVE_STRDUP


668 
	#°rdup
 
ß√i_°rdup


	)

669 *
°rdup
 (c⁄° * 
s
);

673 #i‚de‡
HAVE_STRNDUP


674 
	#°∫dup
 
ß√i_°∫dup


	)

675 
	~<sys/ty≥s.h
>

676 *
°∫dup
(c⁄° * 
s
, 
size_t
 
n
);

680 #i‚de‡
HAVE_STRSEP


681 
	#°r£p
 
ß√i_°r£p


	)

682 *
°r£p
(**
°rögp
, c⁄° *
dñim
);

686 #i‚de‡
HAVE_USLEEP


687 
	#u¶ìp
 
ß√i_u¶ìp


	)

688 
u¶ìp
 (
u£c⁄ds
);

692 #i‚de‡
HAVE_VSYSLOG


693 
	~<°d¨g.h
>

694 
vsy¶og
(
¥i‹ôy
, c⁄° *
f‹m©
, 
va_li°
 
¨gs
);

	@../include/sane/sane.h

16 #i‚de‡
ß√_h


17 
	#ß√_h


	)

19 #ifde‡
__˝lu•lus


27 
	#SANE_CURRENT_MAJOR
 1

	)

28 
	#SANE_CURRENT_MINOR
 0

	)

30 
	#SANE_VERSION_CODE
(
maj‹
, 
mö‹
, 
buûd
) \

31 –(((
SANE_W‹d
Ë(
maj‹
) & 0xff) << 24) \

32 | (((
SANE_W‹d
Ë(
mö‹
) & 0xff) << 16) \

33 | (((
SANE_W‹d
Ë(
buûd
Ë& 0xffffË<< 0))

	)

35 
	#SANE_VERSION_MAJOR
(
code
Ë((((
SANE_W‹d
)(code)Ë>> 24Ë& 0xff)

	)

36 
	#SANE_VERSION_MINOR
(
code
Ë((((
SANE_W‹d
)(code)Ë>> 16Ë& 0xff)

	)

37 
	#SANE_VERSION_BUILD
(
code
Ë((((
SANE_W‹d
)(code)Ë>> 0Ë& 0xffff)

	)

39 
	#SANE_FALSE
 0

	)

40 
	#SANE_TRUE
 1

	)

42 
	tSANE_Byã
;

43 
	tSANE_W‹d
;

44 
SANE_W‹d
 
	tSANE_Boﬁ
;

45 
SANE_W‹d
 
	tSANE_I¡
;

46 
	tSANE_Ch¨
;

47 
SANE_Ch¨
 *
	tSANE_Såög
;

48 c⁄° 
	tSANE_Ch¨
 *
	tSANE_Såög_C⁄°
;

49 *
	tSANE_H™dÀ
;

50 
SANE_W‹d
 
	tSANE_Fixed
;

52 
	#SANE_FIXED_SCALE_SHIFT
 16

	)

53 
	#SANE_FIX
(
v
Ë((
SANE_W‹d
Ë((vË* (1 << 
SANE_FIXED_SCALE_SHIFT
)))

	)

54 
	#SANE_UNFIX
(
v
Ë(()(vË/ (1 << 
SANE_FIXED_SCALE_SHIFT
))

	)

58 
SANE_STATUS_GOOD
 = 0,

59 
SANE_STATUS_UNSUPPORTED
,

60 
SANE_STATUS_CANCELLED
,

61 
SANE_STATUS_DEVICE_BUSY
,

62 
SANE_STATUS_INVAL
,

63 
SANE_STATUS_EOF
,

64 
SANE_STATUS_JAMMED
,

65 
SANE_STATUS_NO_DOCS
,

66 
SANE_STATUS_COVER_OPEN
,

67 
SANE_STATUS_IO_ERROR
,

68 
SANE_STATUS_NO_MEM
,

69 
SANE_STATUS_ACCESS_DENIED


71 
	tSANE_Sètus
;

75 
	#SANE_STATUS_WARMING_UP
 12

	)

76 
	#SANE_STATUS_HW_LOCKED
 13

	)

81 
SANE_TYPE_BOOL
 = 0,

82 
SANE_TYPE_INT
,

83 
SANE_TYPE_FIXED
,

84 
SANE_TYPE_STRING
,

85 
SANE_TYPE_BUTTON
,

86 
SANE_TYPE_GROUP


88 
	tSANE_VÆue_Ty≥
;

92 
SANE_UNIT_NONE
 = 0,

93 
SANE_UNIT_PIXEL
,

94 
SANE_UNIT_BIT
,

95 
SANE_UNIT_MM
,

96 
SANE_UNIT_DPI
,

97 
SANE_UNIT_PERCENT
,

98 
SANE_UNIT_MICROSECOND


100 
	tSANE_Unô
;

104 
SANE_Såög_C⁄°
 
«me
;

105 
SANE_Såög_C⁄°
 
víd‹
;

106 
SANE_Såög_C⁄°
 
modñ
;

107 
SANE_Såög_C⁄°
 
ty≥
;

109 
	tSANE_Devi˚
;

111 
	#SANE_CAP_SOFT_SELECT
 (1 << 0)

	)

112 
	#SANE_CAP_HARD_SELECT
 (1 << 1)

	)

113 
	#SANE_CAP_SOFT_DETECT
 (1 << 2)

	)

114 
	#SANE_CAP_EMULATED
 (1 << 3)

	)

115 
	#SANE_CAP_AUTOMATIC
 (1 << 4)

	)

116 
	#SANE_CAP_INACTIVE
 (1 << 5)

	)

117 
	#SANE_CAP_ADVANCED
 (1 << 6)

	)

119 
	#SANE_OPTION_IS_ACTIVE
(
ˇp
Ë(((ˇpË& 
SANE_CAP_INACTIVE
Ë=0)

	)

120 
	#SANE_OPTION_IS_SETTABLE
(
ˇp
Ë(((ˇpË& 
SANE_CAP_SOFT_SELECT
Ë!0)

	)

122 
	#SANE_INFO_INEXACT
 (1 << 0)

	)

123 
	#SANE_INFO_RELOAD_OPTIONS
 (1 << 1)

	)

124 
	#SANE_INFO_RELOAD_PARAMS
 (1 << 2)

	)

128 
SANE_CONSTRAINT_NONE
 = 0,

129 
SANE_CONSTRAINT_RANGE
,

130 
SANE_CONSTRAINT_WORD_LIST
,

131 
SANE_CONSTRAINT_STRING_LIST


133 
	tSANE_C⁄°øöt_Ty≥
;

137 
SANE_W‹d
 
mö
;

138 
SANE_W‹d
 
max
;

139 
SANE_W‹d
 
qu™t
;

141 
	tSANE_R™ge
;

145 
SANE_Såög_C⁄°
 
«me
;

146 
SANE_Såög_C⁄°
 
tôÀ
;

147 
SANE_Såög_C⁄°
 
desc
;

148 
SANE_VÆue_Ty≥
 
ty≥
;

149 
SANE_Unô
 
unô
;

150 
SANE_I¡
 
size
;

151 
SANE_I¡
 
ˇp
;

153 
SANE_C⁄°øöt_Ty≥
 
c⁄°øöt_ty≥
;

156 c⁄° 
SANE_Såög_C⁄°
 *
°rög_li°
;

157 c⁄° 
SANE_W‹d
 *
w‹d_li°
;

158 c⁄° 
SANE_R™ge
 *
ønge
;

160 
c⁄°øöt
;

162 
	tSANE_O±i⁄_Des¸ùt‹
;

166 
SANE_ACTION_GET_VALUE
 = 0,

167 
SANE_ACTION_SET_VALUE
,

168 
SANE_ACTION_SET_AUTO


170 
	tSANE_A˘i⁄
;

174 
SANE_FRAME_GRAY
,

175 
SANE_FRAME_RGB
,

176 
SANE_FRAME_RED
,

177 
SANE_FRAME_GREEN
,

178 
SANE_FRAME_BLUE


180 
	tSANE_Føme
;

186 
	#SANE_FRAME_TEXT
 0x0A

	)

187 
	#SANE_FRAME_JPEG
 0x0B

	)

188 
	#SANE_FRAME_G31D
 0x0C

	)

189 
	#SANE_FRAME_G32D
 0x0D

	)

190 
	#SANE_FRAME_G42D
 0x0E

	)

192 
	#SANE_FRAME_IR
 0x0F

	)

193 
	#SANE_FRAME_RGBI
 0x10

	)

194 
	#SANE_FRAME_GRAYI
 0x11

	)

195 
	#SANE_FRAME_XML
 0x12

	)

200 
SANE_Føme
 
f‹m©
;

201 
SANE_Boﬁ
 
œ°_‰ame
;

202 
SANE_I¡
 
byãs_≥r_löe
;

203 
SANE_I¡
 
pixñs_≥r_löe
;

204 
SANE_I¡
 
löes
;

205 
SANE_I¡
 
dïth
;

207 
	tSANE_P¨amëîs
;

209 
SANE_Auth_D©a
;

211 
	#SANE_MAX_USERNAME_LEN
 128

	)

212 
	#SANE_MAX_PASSWORD_LEN
 128

	)

214 (*
SANE_Auth_CÆlback
Ë(
	tSANE_Såög_C⁄°
 
	tªsour˚
,

215 
	tSANE_Ch¨
 *
	tu£∫ame
,

216 
	tSANE_Ch¨
 *
	t∑ssw‹d
);

218 
SANE_Sètus
 
ß√_öô
 (
SANE_I¡
 * 
vîsi⁄_code
,

219 
SANE_Auth_CÆlback
 
auth‹ize
);

220 
ß√_exô
 ();

221 
SANE_Sètus
 
ß√_gë_devi˚s
 (c⁄° 
SANE_Devi˚
 *** 
devi˚_li°
,

222 
SANE_Boﬁ
 
loˇl_⁄ly
);

223 
SANE_Sètus
 
ß√_›í
 (
SANE_Såög_C⁄°
 
devi˚«me
,

224 
SANE_H™dÀ
 * 
h™dÀ
);

225 
ß√_˛o£
 (
SANE_H™dÀ
 
h™dÀ
);

226 c⁄° 
SANE_O±i⁄_Des¸ùt‹
 *

227 
ß√_gë_›ti⁄_des¸ùt‹
 (
SANE_H™dÀ
 
h™dÀ
, 
SANE_I¡
 
›ti⁄
);

228 
SANE_Sètus
 
ß√_c⁄åﬁ_›ti⁄
 (
SANE_H™dÀ
 
h™dÀ
, 
SANE_I¡
 
›ti⁄
,

229 
SANE_A˘i⁄
 
a˘i⁄
, *
vÆue
,

230 
SANE_I¡
 * 
öfo
);

231 
SANE_Sètus
 
ß√_gë_∑ømëîs
 (
SANE_H™dÀ
 
h™dÀ
,

232 
SANE_P¨amëîs
 * 
∑øms
);

233 
SANE_Sètus
 
ß√_°¨t
 (
SANE_H™dÀ
 
h™dÀ
);

234 
SANE_Sètus
 
ß√_ªad
 (
SANE_H™dÀ
 
h™dÀ
, 
SANE_Byã
 * 
d©a
,

235 
SANE_I¡
 
max_Àngth
, SANE_I¡ * 
Àngth
);

236 
ß√_ˇn˚l
 (
SANE_H™dÀ
 
h™dÀ
);

237 
SANE_Sètus
 
ß√_£t_io_mode
 (
SANE_H™dÀ
 
h™dÀ
,

238 
SANE_Boﬁ
 
n⁄_blockög
);

239 
SANE_Sètus
 
ß√_gë_£À˘_fd
 (
SANE_H™dÀ
 
h™dÀ
,

240 
SANE_I¡
 * 
fd
);

241 
SANE_Såög_C⁄°
 
ß√_°r°©us
 (
SANE_Sètus
 
°©us
);

243 #ifde‡
__˝lu•lus


	@../include/sane/sanei.h

87 #i‚de‡
ß√i_h


88 
	#ß√i_h


	)

90 
	~<ß√/ß√.h
>

141 
	#NELEMS
(
a
Ë(()( (aË/  (a[0])))

	)

144 
	#STRINGIFY1
(
x
Ë#x

	)

146 
	#STRINGIFY
(
x
Ë
	`STRINGIFY1
(x)

	)

149 
	#PASTE1
(
x
,
y
Ëx##
	)
y

151 
	#PASTE
(
x
,
y
Ë
	`PASTE1
(x,y)

	)

153 
SANE_Sètus
 
ß√i_check_vÆue
 (c⁄° 
SANE_O±i⁄_Des¸ùt‹
 * 
›t
,

154 * 
vÆue
);

156 
SANE_Sètus
 
ß√i_c⁄°øö_vÆue
 (c⁄° 
SANE_O±i⁄_Des¸ùt‹
 * 
›t
,

157 * 
vÆue
, 
SANE_W‹d
 * 
öfo
);

	@../include/sane/sanei_auth.h

52 #i‚de‡
ß√i_auth_h


53 
	#ß√i_auth_h


	)

55 
	~"../ö˛ude/ß√/ß√.h
"

94 
SANE_Sètus


95 
ß√i_auth‹ize
 (c⁄° *
ªsour˚
,

96 c⁄° *
backíd
, 
SANE_Auth_CÆlback
 
auth‹ize
);

	@../include/sane/sanei_codec_bin.h

50 #i‚de‡
ß√i_codec_bö_h


51 
	#ß√i_codec_bö_h


	)

59 
ß√i_codec_bö_öô
 (
Wúe
 *
w
);

	@../include/sane/sanei_config.h

49 #i‚de‡
ß√i_c⁄fig_h


50 
	#ß√i_c⁄fig_h
 1

	)

52 
	~<°dio.h
>

53 
	~<ß√/ß√.h
>

67 
FILE
 *
ß√i_c⁄fig_›í
 (c⁄° *
«me
);

80 *
ß√i_c⁄fig_ªad
 (*
°r
, 
n
, 
FILE
 *
°ªam
);

89 c⁄° *
ß√i_c⁄fig_skù_whôe•a˚
 (c⁄° *
°r
);

105 c⁄° *
ß√i_c⁄fig_gë_°rög
 (c⁄° *
°r
,

106 **
°rög_c⁄°
);

125 
ß√i_c⁄fig_©èch_m©chög_devi˚s
 (c⁄° *
«me
,

126 
	$SANE_Sètus
 (*
©èch
)

127 (c⁄° *
dev
));

137 
SANE_I¡
 
cou¡
;

140 
SANE_O±i⁄_Des¸ùt‹
 **
des¸ùt‹s
;

143 **
vÆues
;

145 } 
	tSANEI_C⁄fig
;

162 
SANE_Sètus
 
	`ß√i_c⁄figuª_©èch
 (

163 c⁄° *
c⁄fig_fûe
,

164 
SANEI_C⁄fig
 *
c⁄fig
,

165 
	$SANE_Sètus
 (*
c⁄fig_©èch
)(
SANEI_C⁄fig
 *
c⁄fig
, c⁄° *
dev«me
)

173 c⁄° *
	`ß√i_c⁄fig_gë_∑ths
 ();

	@../include/sane/sanei_net.h

17 #i‚de‡
ß√i_√t_h


18 
	#ß√i_√t_h


	)

20 
	~<ß√/ß√.h
>

21 
	~<ß√/ß√i_wúe.h
>

23 
	#SANEI_NET_PROTOCOL_VERSION
 3

	)

27 
	mSANE_NET_LITTLE_ENDIAN
 = 0x1234,

28 
	mSANE_NET_BIG_ENDIAN
 = 0x4321

30 
	tSANE_Në_Byã_Ordî
;

34 
	mSANE_NET_INIT
 = 0,

35 
	mSANE_NET_GET_DEVICES
,

36 
	mSANE_NET_OPEN
,

37 
	mSANE_NET_CLOSE
,

38 
	mSANE_NET_GET_OPTION_DESCRIPTORS
,

39 
	mSANE_NET_CONTROL_OPTION
,

40 
	mSANE_NET_GET_PARAMETERS
,

41 
	mSANE_NET_START
,

42 
	mSANE_NET_CANCEL
,

43 
	mSANE_NET_AUTHORIZE
,

44 
	mSANE_NET_EXIT


46 
	tSANE_Në_Pro˚duª_Numbî
;

50 
SANE_W‹d
 
	mvîsi⁄_code
;

51 
SANE_Såög
 
	mu£∫ame
;

53 
	tSANE_Inô_Req
;

57 
SANE_Sètus
 
	m°©us
;

58 
SANE_W‹d
 
	mvîsi⁄_code
;

60 
	tSANE_Inô_Rïly
;

64 
SANE_Sètus
 
	m°©us
;

65 
SANE_Devi˚
 **
	mdevi˚_li°
;

67 
	tSANE_Gë_Devi˚s_Rïly
;

71 
SANE_Sètus
 
	m°©us
;

72 
SANE_W‹d
 
	mh™dÀ
;

73 
SANE_Såög
 
	mªsour˚_to_auth‹ize
;

75 
	tSANE_O≥n_Rïly
;

79 
SANE_W‹d
 
	mnum_›ti⁄s
;

80 
SANE_O±i⁄_Des¸ùt‹
 **
	mdesc
;

82 
	tSANE_O±i⁄_Des¸ùt‹_Aºay
;

86 
SANE_W‹d
 
	mh™dÀ
;

87 
SANE_W‹d
 
	m›ti⁄
;

88 
SANE_W‹d
 
	ma˘i⁄
;

89 
SANE_W‹d
 
	mvÆue_ty≥
;

90 
SANE_W‹d
 
	mvÆue_size
;

91 *
	mvÆue
;

93 
	tSANE_C⁄åﬁ_O±i⁄_Req
;

97 
SANE_Sètus
 
	m°©us
;

98 
SANE_W‹d
 
	möfo
;

99 
SANE_W‹d
 
	mvÆue_ty≥
;

100 
SANE_W‹d
 
	mvÆue_size
;

101 *
	mvÆue
;

102 
SANE_Såög
 
	mªsour˚_to_auth‹ize
;

104 
	tSANE_C⁄åﬁ_O±i⁄_Rïly
;

108 
SANE_Sètus
 
	m°©us
;

109 
SANE_P¨amëîs
 
	m∑øms
;

111 
	tSANE_Gë_P¨amëîs_Rïly
;

115 
SANE_Sètus
 
	m°©us
;

116 
SANE_W‹d
 
	mp‹t
;

117 
SANE_W‹d
 
	mbyã_‹dî
;

118 
SANE_Såög
 
	mªsour˚_to_auth‹ize
;

120 
	tSANE_Sèπ_Rïly
;

124 
SANE_Såög
 
	mªsour˚
;

125 
SANE_Såög
 
	mu£∫ame
;

126 
SANE_Såög
 
	m∑ssw‹d
;

128 
	tSANE_Auth‹iz©i⁄_Req
;

130 
ß√i_w_öô_ªq
 (
Wúe
 *
w
, 
SANE_Inô_Req
 *
ªq
);

131 
ß√i_w_öô_ª∂y
 (
Wúe
 *
w
, 
SANE_Inô_Rïly
 *
ª∂y
);

132 
ß√i_w_gë_devi˚s_ª∂y
 (
Wúe
 *
w
, 
SANE_Gë_Devi˚s_Rïly
 *
ª∂y
);

133 
ß√i_w_›í_ª∂y
 (
Wúe
 *
w
, 
SANE_O≥n_Rïly
 *
ª∂y
);

134 
ß√i_w_›ti⁄_des¸ùt‹_¨øy
 (
Wúe
 *
w
,

135 
SANE_O±i⁄_Des¸ùt‹_Aºay
 *
›t
);

136 
ß√i_w_c⁄åﬁ_›ti⁄_ªq
 (
Wúe
 *
w
, 
SANE_C⁄åﬁ_O±i⁄_Req
 *
ªq
);

137 
ß√i_w_c⁄åﬁ_›ti⁄_ª∂y
 (
Wúe
 *
w
,

138 
SANE_C⁄åﬁ_O±i⁄_Rïly
 *
ª∂y
);

139 
ß√i_w_gë_∑ømëîs_ª∂y
 (
Wúe
 *
w
,

140 
SANE_Gë_P¨amëîs_Rïly
 *
ª∂y
);

141 
ß√i_w_°¨t_ª∂y
 (
Wúe
 *
w
, 
SANE_Sèπ_Rïly
 *
ª∂y
);

142 
ß√i_w_auth‹iz©i⁄_ªq
 (
Wúe
 *
w
, 
SANE_Auth‹iz©i⁄_Req
 *
ªq
);

	@../include/sane/saneopts.h

53 #i‚de‡
ß√›ts_h


54 
	#ß√›ts_h


	)

56 #i‚de‡
SANE_I18N


57 
	#SANE_I18N
(
ãxt
Ë
	)
text

61 
	#SANE_NAME_NUM_OPTIONS
 ""

	)

64 
	#SANE_NAME_STANDARD
 "°™d¨d"

	)

65 
	#SANE_NAME_GEOMETRY
 "geomëry"

	)

66 
	#SANE_NAME_ENHANCEMENT
 "íh™˚mít"

	)

67 
	#SANE_NAME_ADVANCED
 "adv™˚d"

	)

68 
	#SANE_NAME_SENSORS
 "£ns‹s"

	)

70 
	#SANE_NAME_PREVIEW
 "¥evõw"

	)

71 
	#SANE_NAME_GRAY_PREVIEW
 "¥evõw-ö-gøy"

	)

72 
	#SANE_NAME_BIT_DEPTH
 "dïth"

	)

73 
	#SANE_NAME_SCAN_MODE
 "mode"

	)

74 
	#SANE_NAME_SCAN_SPEED
 "•ìd"

	)

75 
	#SANE_NAME_SCAN_SOURCE
 "sour˚"

	)

76 
	#SANE_NAME_BACKTRACK
 "backåack"

	)

82 
	#SANE_NAME_SCAN_TL_X
 "é-x"

	)

83 
	#SANE_NAME_SCAN_TL_Y
 "é-y"

	)

84 
	#SANE_NAME_SCAN_BR_X
 "br-x"

	)

85 
	#SANE_NAME_SCAN_BR_Y
 "br-y"

	)

86 
	#SANE_NAME_SCAN_RESOLUTION
 "ªsﬁuti⁄"

	)

87 
	#SANE_NAME_SCAN_X_RESOLUTION
 "x-ªsﬁuti⁄"

	)

88 
	#SANE_NAME_SCAN_Y_RESOLUTION
 "y-ªsﬁuti⁄"

	)

89 
	#SANE_NAME_PAGE_WIDTH
 "∑ge-width"

	)

90 
	#SANE_NAME_PAGE_HEIGHT
 "∑ge-height"

	)

91 
	#SANE_NAME_CUSTOM_GAMMA
 "cu°om-gamma"

	)

92 
	#SANE_NAME_GAMMA_VECTOR
 "gamma-èbÀ"

	)

93 
	#SANE_NAME_GAMMA_VECTOR_R
 "ªd-gamma-èbÀ"

	)

94 
	#SANE_NAME_GAMMA_VECTOR_G
 "gªí-gamma-èbÀ"

	)

95 
	#SANE_NAME_GAMMA_VECTOR_B
 "blue-gamma-èbÀ"

	)

96 
	#SANE_NAME_BRIGHTNESS
 "brighäess"

	)

97 
	#SANE_NAME_CONTRAST
 "c⁄åa°"

	)

98 
	#SANE_NAME_GRAIN_SIZE
 "gøö"

	)

99 
	#SANE_NAME_HALFTONE
 "hÆ·⁄ög"

	)

100 
	#SANE_NAME_BLACK_LEVEL
 "bœck-Àvñ"

	)

101 
	#SANE_NAME_WHITE_LEVEL
 "whôe-Àvñ"

	)

102 
	#SANE_NAME_WHITE_LEVEL_R
 "whôe-Àvñ-r"

	)

103 
	#SANE_NAME_WHITE_LEVEL_G
 "whôe-Àvñ-g"

	)

104 
	#SANE_NAME_WHITE_LEVEL_B
 "whôe-Àvñ-b"

	)

105 
	#SANE_NAME_SHADOW
 "shadow"

	)

106 
	#SANE_NAME_SHADOW_R
 "shadow-r"

	)

107 
	#SANE_NAME_SHADOW_G
 "shadow-g"

	)

108 
	#SANE_NAME_SHADOW_B
 "shadow-b"

	)

109 
	#SANE_NAME_HIGHLIGHT
 "highlight"

	)

110 
	#SANE_NAME_HIGHLIGHT_R
 "highlight-r"

	)

111 
	#SANE_NAME_HIGHLIGHT_G
 "highlight-g"

	)

112 
	#SANE_NAME_HIGHLIGHT_B
 "highlight-b"

	)

113 
	#SANE_NAME_HUE
 "hue"

	)

114 
	#SANE_NAME_SATURATION
 "ßtuøti⁄"

	)

115 
	#SANE_NAME_FILE
 "fûíame"

	)

116 
	#SANE_NAME_HALFTONE_DIMENSION
 "hÆ·⁄e-size"

	)

117 
	#SANE_NAME_HALFTONE_PATTERN
 "hÆ·⁄e-∑âîn"

	)

118 
	#SANE_NAME_RESOLUTION_BIND
 "ªsﬁuti⁄-böd"

	)

119 
	#SANE_NAME_NEGATIVE
 "√g©ive"

	)

120 
	#SANE_NAME_QUALITY_CAL
 "quÆôy-ˇl"

	)

121 
	#SANE_NAME_DOR
 "doubÀ-ªs"

	)

122 
	#SANE_NAME_RGB_BIND
 "rgb-böd"

	)

123 
	#SANE_NAME_THRESHOLD
 "thªshﬁd"

	)

124 
	#SANE_NAME_ANALOG_GAMMA
 "™Æog-gamma"

	)

125 
	#SANE_NAME_ANALOG_GAMMA_R
 "™Æog-gamma-r"

	)

126 
	#SANE_NAME_ANALOG_GAMMA_G
 "™Æog-gamma-g"

	)

127 
	#SANE_NAME_ANALOG_GAMMA_B
 "™Æog-gamma-b"

	)

128 
	#SANE_NAME_ANALOG_GAMMA_BIND
 "™Æog-gamma-böd"

	)

129 
	#SANE_NAME_WARMUP
 "w¨mup"

	)

130 
	#SANE_NAME_CAL_EXPOS_TIME
 "ˇl-exposuª-time"

	)

131 
	#SANE_NAME_CAL_EXPOS_TIME_R
 "ˇl-exposuª-time-r"

	)

132 
	#SANE_NAME_CAL_EXPOS_TIME_G
 "ˇl-exposuª-time-g"

	)

133 
	#SANE_NAME_CAL_EXPOS_TIME_B
 "ˇl-exposuª-time-b"

	)

134 
	#SANE_NAME_SCAN_EXPOS_TIME
 "sˇn-exposuª-time"

	)

135 
	#SANE_NAME_SCAN_EXPOS_TIME_R
 "sˇn-exposuª-time-r"

	)

136 
	#SANE_NAME_SCAN_EXPOS_TIME_G
 "sˇn-exposuª-time-g"

	)

137 
	#SANE_NAME_SCAN_EXPOS_TIME_B
 "sˇn-exposuª-time-b"

	)

138 
	#SANE_NAME_SELECT_EXPOSURE_TIME
 "£À˘-exposuª-time"

	)

139 
	#SANE_NAME_CAL_LAMP_DEN
 "ˇl-œmp-dísôy"

	)

140 
	#SANE_NAME_SCAN_LAMP_DEN
 "sˇn-œmp-dísôy"

	)

141 
	#SANE_NAME_SELECT_LAMP_DENSITY
 "£À˘-œmp-dísôy"

	)

142 
	#SANE_NAME_LAMP_OFF_AT_EXIT
 "œmp-off-©-exô"

	)

145 
	#SANE_NAME_SCAN
 "sˇn"

	)

146 
	#SANE_NAME_EMAIL
 "emaû"

	)

147 
	#SANE_NAME_FAX
 "Áx"

	)

148 
	#SANE_NAME_COPY
 "c›y"

	)

149 
	#SANE_NAME_PDF
 "pdf"

	)

150 
	#SANE_NAME_CANCEL
 "ˇn˚l"

	)

151 
	#SANE_NAME_PAGE_LOADED
 "∑ge-lﬂded"

	)

152 
	#SANE_NAME_COVER_OPEN
 "covî-›í"

	)

154 
	#SANE_TITLE_NUM_OPTIONS
 
	`SANE_I18N
("Numbî o‡›ti⁄s")

	)

156 
	#SANE_TITLE_STANDARD
 
	`SANE_I18N
("Sènd¨d")

	)

157 
	#SANE_TITLE_GEOMETRY
 
	`SANE_I18N
("Geomëry")

	)

158 
	#SANE_TITLE_ENHANCEMENT
 
	`SANE_I18N
("Enh™˚mít")

	)

159 
	#SANE_TITLE_ADVANCED
 
	`SANE_I18N
("Adv™˚d")

	)

160 
	#SANE_TITLE_SENSORS
 
	`SANE_I18N
("Sís‹s")

	)

162 
	#SANE_TITLE_PREVIEW
 
	`SANE_I18N
("Pªvõw")

	)

163 
	#SANE_TITLE_GRAY_PREVIEW
 
	`SANE_I18N
("F‹˚ m⁄ochromê¥evõw")

	)

164 
	#SANE_TITLE_BIT_DEPTH
 
	`SANE_I18N
("Bô dïth")

	)

165 
	#SANE_TITLE_SCAN_MODE
 
	`SANE_I18N
("Sˇ¿mode")

	)

166 
	#SANE_TITLE_SCAN_SPEED
 
	`SANE_I18N
("Sˇ¿•ìd")

	)

167 
	#SANE_TITLE_SCAN_SOURCE
 
	`SANE_I18N
("Sˇ¿sour˚")

	)

168 
	#SANE_TITLE_BACKTRACK
 
	`SANE_I18N
("F‹˚ backåackög")

	)

169 
	#SANE_TITLE_SCAN_TL_X
 
	`SANE_I18N
("T›-À· x")

	)

170 
	#SANE_TITLE_SCAN_TL_Y
 
	`SANE_I18N
("T›-À· y")

	)

171 
	#SANE_TITLE_SCAN_BR_X
 
	`SANE_I18N
("BŸtom-righàx")

	)

172 
	#SANE_TITLE_SCAN_BR_Y
 
	`SANE_I18N
("BŸtom-righày")

	)

173 
	#SANE_TITLE_SCAN_RESOLUTION
 
	`SANE_I18N
("Sˇ¿ªsﬁuti⁄")

	)

174 
	#SANE_TITLE_SCAN_X_RESOLUTION
 
	`SANE_I18N
("X-ªsﬁuti⁄")

	)

175 
	#SANE_TITLE_SCAN_Y_RESOLUTION
 
	`SANE_I18N
("Y-ªsﬁuti⁄")

	)

176 
	#SANE_TITLE_PAGE_WIDTH
 
	`SANE_I18N
("Pagêwidth")

	)

177 
	#SANE_TITLE_PAGE_HEIGHT
 
	`SANE_I18N
("Pagêheight")

	)

178 
	#SANE_TITLE_CUSTOM_GAMMA
 
	`SANE_I18N
("U£ cu°om gamm®èbÀ")

	)

179 
	#SANE_TITLE_GAMMA_VECTOR
 
	`SANE_I18N
("Imagêöãnsôy")

	)

180 
	#SANE_TITLE_GAMMA_VECTOR_R
 
	`SANE_I18N
("Red i¡ísôy")

	)

181 
	#SANE_TITLE_GAMMA_VECTOR_G
 
	`SANE_I18N
("Gªí i¡ísôy")

	)

182 
	#SANE_TITLE_GAMMA_VECTOR_B
 
	`SANE_I18N
("Bluêöãnsôy")

	)

183 
	#SANE_TITLE_BRIGHTNESS
 
	`SANE_I18N
("Brighäess")

	)

184 
	#SANE_TITLE_CONTRAST
 
	`SANE_I18N
("C⁄åa°")

	)

185 
	#SANE_TITLE_GRAIN_SIZE
 
	`SANE_I18N
("Gøö size")

	)

186 
	#SANE_TITLE_HALFTONE
 
	`SANE_I18N
("HÆ·⁄ög")

	)

187 
	#SANE_TITLE_BLACK_LEVEL
 
	`SANE_I18N
("BœckÜevñ")

	)

188 
	#SANE_TITLE_WHITE_LEVEL
 
	`SANE_I18N
("WhôêÀvñ")

	)

189 
	#SANE_TITLE_WHITE_LEVEL_R
 
	`SANE_I18N
("WhôêÀvñ f‹Ñed")

	)

190 
	#SANE_TITLE_WHITE_LEVEL_G
 
	`SANE_I18N
("WhôêÀvñ f‹ gªí")

	)

191 
	#SANE_TITLE_WHITE_LEVEL_B
 
	`SANE_I18N
("WhôêÀvñ f‹ blue")

	)

192 
	#SANE_TITLE_SHADOW
 
	`SANE_I18N
("Shadow")

	)

193 
	#SANE_TITLE_SHADOW_R
 
	`SANE_I18N
("Shadow f‹Ñed")

	)

194 
	#SANE_TITLE_SHADOW_G
 
	`SANE_I18N
("Shadow f‹ gªí")

	)

195 
	#SANE_TITLE_SHADOW_B
 
	`SANE_I18N
("Shadow f‹ blue")

	)

196 
	#SANE_TITLE_HIGHLIGHT
 
	`SANE_I18N
("Highlight")

	)

197 
	#SANE_TITLE_HIGHLIGHT_R
 
	`SANE_I18N
("Highlighàf‹Ñed")

	)

198 
	#SANE_TITLE_HIGHLIGHT_G
 
	`SANE_I18N
("Highlighàf‹ gªí")

	)

199 
	#SANE_TITLE_HIGHLIGHT_B
 
	`SANE_I18N
("Highlighàf‹ blue")

	)

200 
	#SANE_TITLE_HUE
 
	`SANE_I18N
("Hue")

	)

201 
	#SANE_TITLE_SATURATION
 
	`SANE_I18N
("S©uøti⁄")

	)

202 
	#SANE_TITLE_FILE
 
	`SANE_I18N
("Fûíame")

	)

203 
	#SANE_TITLE_HALFTONE_DIMENSION
 
	`SANE_I18N
("HÆ·⁄ê∑âî¿size")

	)

204 
	#SANE_TITLE_HALFTONE_PATTERN
 
	`SANE_I18N
("HÆ·⁄ê∑âîn")

	)

205 
	#SANE_TITLE_RESOLUTION_BIND
 
	`SANE_I18N
("Böd Xánd YÑesﬁuti⁄")

	)

206 
	#SANE_TITLE_NEGATIVE
 
	`SANE_I18N
("Neg©ive")

	)

207 
	#SANE_TITLE_QUALITY_CAL
 
	`SANE_I18N
("QuÆôy cÆibøti⁄")

	)

208 
	#SANE_TITLE_DOR
 
	`SANE_I18N
("DoubÀ O±iˇ»Resﬁuti⁄")

	)

209 
	#SANE_TITLE_RGB_BIND
 
	`SANE_I18N
("Böd RGB")

	)

210 
	#SANE_TITLE_THRESHOLD
 
	`SANE_I18N
("Thªshﬁd")

	)

211 
	#SANE_TITLE_ANALOG_GAMMA
 
	`SANE_I18N
("A«log gamm®c‹ª˘i⁄")

	)

212 
	#SANE_TITLE_ANALOG_GAMMA_R
 
	`SANE_I18N
("A«log gamm®ªd")

	)

213 
	#SANE_TITLE_ANALOG_GAMMA_G
 
	`SANE_I18N
("A«log gamm®gªí")

	)

214 
	#SANE_TITLE_ANALOG_GAMMA_B
 
	`SANE_I18N
("A«log gamm®blue")

	)

215 
	#SANE_TITLE_ANALOG_GAMMA_BIND
 
	`SANE_I18N
("Bödá«log gamma")

	)

216 
	#SANE_TITLE_WARMUP
 
	`SANE_I18N
("W¨mu∞œmp")

	)

217 
	#SANE_TITLE_CAL_EXPOS_TIME
 
	`SANE_I18N
("CÆ.Éxposuª-time")

	)

218 
	#SANE_TITLE_CAL_EXPOS_TIME_R
 
	`SANE_I18N
("CÆ.Éxposuª-timêf‹Ñed")

	)

219 
	#SANE_TITLE_CAL_EXPOS_TIME_G
 
	`SANE_I18N
("Cal.Éxposure-time for " \

220 "gªí")

	)

221 
	#SANE_TITLE_CAL_EXPOS_TIME_B
 
	`SANE_I18N
("CÆ.Éxposuª-timêf‹ blue")

	)

222 
	#SANE_TITLE_SCAN_EXPOS_TIME
 
	`SANE_I18N
("Sˇ¿exposuª-time")

	)

223 
	#SANE_TITLE_SCAN_EXPOS_TIME_R
 
	`SANE_I18N
("Sˇ¿exposuª-timêf‹Ñed")

	)

224 
	#SANE_TITLE_SCAN_EXPOS_TIME_G
 
	`SANE_I18N
("ScanÉxposure-time for " \

225 "gªí")

	)

226 
	#SANE_TITLE_SCAN_EXPOS_TIME_B
 
	`SANE_I18N
("Sˇ¿exposuª-timêf‹ blue")

	)

227 
	#SANE_TITLE_SELECT_EXPOSURE_TIME
 
	`SANE_I18N
("SëÉxposuª-time")

	)

228 
	#SANE_TITLE_CAL_LAMP_DEN
 
	`SANE_I18N
("CÆ.Üam∞dísôy")

	)

229 
	#SANE_TITLE_SCAN_LAMP_DEN
 
	`SANE_I18N
("Sˇ¿œm∞dísôy")

	)

230 
	#SANE_TITLE_SELECT_LAMP_DENSITY
 
	`SANE_I18N
("SëÜam∞dísôy")

	)

231 
	#SANE_TITLE_LAMP_OFF_AT_EXIT
 
	`SANE_I18N
("Lam∞of‡©Éxô")

	)

234 
	#SANE_TITLE_SCAN
 "Sˇ¿buâ⁄"

	)

235 
	#SANE_TITLE_EMAIL
 "Emaû buâ⁄"

	)

236 
	#SANE_TITLE_FAX
 "Fax buâ⁄"

	)

237 
	#SANE_TITLE_COPY
 "C›y buâ⁄"

	)

238 
	#SANE_TITLE_PDF
 "PDF buâ⁄"

	)

239 
	#SANE_TITLE_CANCEL
 "C™˚»buâ⁄"

	)

240 
	#SANE_TITLE_PAGE_LOADED
 "Pagêlﬂded"

	)

241 
	#SANE_TITLE_COVER_OPEN
 "Covî o≥n"

	)

244 
	#SANE_DESC_NUM_OPTIONS
 \

245 
	`SANE_I18N
("Read-only optionÅhat specifies how many optionsá specific " \

246 "devi˚†suµ‹ts.")

	)

248 
	#SANE_DESC_STANDARD
 
	`SANE_I18N
("Sour˚, modê™dÑesﬁuti⁄ o±i⁄s")

	)

249 
	#SANE_DESC_GEOMETRY
 
	`SANE_I18N
("Sˇ¿¨óánd medü sizê›ti⁄s")

	)

250 
	#SANE_DESC_ENHANCEMENT
 
	`SANE_I18N
("Imagêmodifiˇti⁄ o±i⁄s")

	)

251 
	#SANE_DESC_ADVANCED
 
	`SANE_I18N
("H¨dw¨ê•ecifi¯›ti⁄s")

	)

252 
	#SANE_DESC_SENSORS
 
	`SANE_I18N
("Sˇ¬î sís‹†™d buâ⁄s")

	)

254 
	#SANE_DESC_PREVIEW
 \

255 
	`SANE_I18N
("Reque°áÖªvõw-quÆôy sˇn.")

	)

257 
	#SANE_DESC_GRAY_PREVIEW
 \

258 
	`SANE_I18N
("RequestÅhatállÖreviewsáre done in monochrome mode. Oná " \

261 "¥evõw.")

	)

263 
	#SANE_DESC_BIT_DEPTH
 \

264 
	`SANE_I18N
("Number of bitsÖer sample,Åypical valuesáre 1 for \"line-art\" " \

265 "™d 8 f‹ mu…ibô sˇns.")

	)

267 
	#SANE_DESC_SCAN_MODE
 \

268 
	`SANE_I18N
("Sñe˘†thêsˇ¿modê”.g.,Üöóπ, m⁄ochrome, o∏cﬁ‹).")

	)

270 
	#SANE_DESC_SCAN_SPEED
 \

271 
	`SANE_I18N
("Dëîmöe†thê•ìdáàwhichÅhêsˇ¿¥o˚eds.")

	)

273 
	#SANE_DESC_SCAN_SOURCE
 \

274 
	`SANE_I18N
("Sñe˘†thêsˇ¿sour˚ (suchá†®documít-„edî).")

	)

276 
	#SANE_DESC_BACKTRACK
 \

277 
	`SANE_I18N
("C⁄åﬁ†whëhî backåackög i†f‹˚d.")

	)

279 
	#SANE_DESC_SCAN_TL_X
 \

280 
	`SANE_I18N
("T›-À· xÖosôi⁄ o‡sˇ¿¨ó.")

	)

282 
	#SANE_DESC_SCAN_TL_Y
 \

283 
	`SANE_I18N
("T›-À· yÖosôi⁄ o‡sˇ¿¨ó.")

	)

285 
	#SANE_DESC_SCAN_BR_X
 \

286 
	`SANE_I18N
("BŸtom-righàxÖosôi⁄ o‡sˇ¿¨ó.")

	)

288 
	#SANE_DESC_SCAN_BR_Y
 \

289 
	`SANE_I18N
("BŸtom-righàyÖosôi⁄ o‡sˇ¿¨ó.")

	)

291 
	#SANE_DESC_SCAN_RESOLUTION
 \

292 
	`SANE_I18N
("Së†thêªsﬁuti⁄ o‡thêsˇ¬ed image.")

	)

294 
	#SANE_DESC_SCAN_X_RESOLUTION
 \

295 
	`SANE_I18N
("Së†thêh‹iz⁄è»ªsﬁuti⁄ o‡thêsˇ¬ed image.")

	)

297 
	#SANE_DESC_SCAN_Y_RESOLUTION
 \

298 
	`SANE_I18N
("Së†thêvîtiˇ»ªsﬁuti⁄ o‡thêsˇ¬ed image.")

	)

300 
	#SANE_DESC_PAGE_WIDTH
 \

301 
	`SANE_I18N
("SpecifiesÅhe width ofÅhe media. Required foráutomatic " \

302 "˚¡îög o‡shìt-„d sˇns.")

	)

304 
	#SANE_DESC_PAGE_HEIGHT
 \

305 
	`SANE_I18N
("S≥cifõ†thêheighào‡thêmedü.")

	)

307 
	#SANE_DESC_CUSTOM_GAMMA
 \

308 
	`SANE_I18N
("Determines whetherá builtin orá custom gamma-table should be " \

309 "u£d.")

	)

311 
	#SANE_DESC_GAMMA_VECTOR
 \

312 
	`SANE_I18N
("Gamma-correctionÅable. In color modeÅhis optionÉqually " \

314 "öãnsôy gamm®èbÀ).")

	)

316 
	#SANE_DESC_GAMMA_VECTOR_R
 \

317 
	`SANE_I18N
("Gamma-c‹ª˘i⁄ÅabÀ f‹Åhêªd b™d.")

	)

319 
	#SANE_DESC_GAMMA_VECTOR_G
 \

320 
	`SANE_I18N
("Gamma-c‹ª˘i⁄ÅabÀ f‹Åhêgªí b™d.")

	)

322 
	#SANE_DESC_GAMMA_VECTOR_B
 \

323 
	`SANE_I18N
("Gamma-c‹ª˘i⁄ÅabÀ f‹Åhêbluêb™d.")

	)

325 
	#SANE_DESC_BRIGHTNESS
 \

326 
	`SANE_I18N
("C⁄åﬁ†thêbrighäes†o‡thêacquúed image.")

	)

328 
	#SANE_DESC_CONTRAST
 \

329 
	`SANE_I18N
("C⁄åﬁ†thêc⁄åa° o‡thêacquúed image.")

	)

331 
	#SANE_DESC_GRAIN_SIZE
 \

332 
	`SANE_I18N
("SelectsÅhe \"graininess\" ofÅheácquired image. Smaller values " \

333 "ªsu… i¿sh¨≥∏images.")

	)

335 
	#SANE_DESC_HALFTONE
 \

336 
	`SANE_I18N
("Sñe˘†whëhîÅhêacquúed imagêshould bêhÆ·⁄ed (dôhîed).")

	)

338 
	#SANE_DESC_BLACK_LEVEL
 \

339 
	`SANE_I18N
("Sñe˘†wh©Ñadün˚Üevñ should bêc⁄sidîed \"bœck\".")

	)

341 
	#SANE_DESC_WHITE_LEVEL
 \

342 
	`SANE_I18N
("Sñe˘†wh©Ñadün˚Üevñ should bêc⁄sidîed \"whôe\".")

	)

344 
	#SANE_DESC_WHITE_LEVEL_R
 \

345 
	`SANE_I18N
("Sñe˘†wh©ÑedÑadün˚Üevñ should bêc⁄sidîed \"whôe\".")

	)

347 
	#SANE_DESC_WHITE_LEVEL_G
 \

348 
	`SANE_I18N
("Sñe˘†wh© gªíÑadün˚Üevñ should bêc⁄sidîed \"whôe\".")

	)

350 
	#SANE_DESC_WHITE_LEVEL_B
 \

351 
	`SANE_I18N
("Sñe˘†wh© bluêødün˚Üevñ should bêc⁄sidîed \"whôe\".")

	)

353 
	#SANE_DESC_SHADOW
 \

354 
	`SANE_I18N
("Sñe˘†wh©Ñadün˚Üevñ should bêc⁄sidîed \"bœck\".")

	)

355 
	#SANE_DESC_SHADOW_R
 \

356 
	`SANE_I18N
("Sñe˘†wh©ÑedÑadün˚Üevñ should bêc⁄sidîed \"bœck\".")

	)

357 
	#SANE_DESC_SHADOW_G
 \

358 
	`SANE_I18N
("Sñe˘†wh© gªíÑadün˚Üevñ should bêc⁄sidîed \"bœck\".")

	)

359 
	#SANE_DESC_SHADOW_B
 \

360 
	`SANE_I18N
("Sñe˘†wh© bluêødün˚Üevñ should bêc⁄sidîed \"bœck\".")

	)

362 
	#SANE_DESC_HIGHLIGHT
 \

363 
	`SANE_I18N
("Sñe˘†wh©Ñadün˚Üevñ should bêc⁄sidîed \"whôe\".")

	)

364 
	#SANE_DESC_HIGHLIGHT_R
 \

365 
	`SANE_I18N
("Sñe˘†wh©ÑedÑadün˚Üevñ should bêc⁄sidîed \"fuŒÑed\".")

	)

366 
	#SANE_DESC_HIGHLIGHT_G
 \

367 
	`SANE_I18N
("Selects what greenÑadianceÜevel should be considered \"full " \

368 "gªí\".")

	)

369 
	#SANE_DESC_HIGHLIGHT_B
 \

370 
	`SANE_I18N
("Selects what blueÑadianceÜevel should be considered \"full " \

371 "blue\".")

	)

373 
	#SANE_DESC_HUE
 \

374 
	`SANE_I18N
("C⁄åﬁ†thê\"hue\" (blue-ÀvñËo‡thêacquúed image.")

	)

376 
	#SANE_DESC_SATURATION
 \

377 
	`SANE_I18N
("The saturationÜevel controlsÅheámount of \"blooming\"Åhat " \

379 "bloomög.")

	)

381 
	#SANE_DESC_FILE
 \

382 
	`SANE_I18N
("Thêfûíamêo‡thêimagêtÿbêlﬂded.")

	)

384 
	#SANE_DESC_HALFTONE_DIMENSION
 \

385 
	`SANE_I18N
("SetsÅhe size ofÅhe halftoning (dithering)Öattern used when " \

386 "sˇ¬ög hÆ·⁄ed images.")

	)

388 
	#SANE_DESC_HALFTONE_PATTERN
 \

389 
	`SANE_I18N
("DefinesÅhe halftoning (dithering)Öattern for scanning " \

390 "hÆ·⁄ed images.")

	)

392 
	#SANE_DESC_RESOLUTION_BIND
 \

393 
	`SANE_I18N
("U£ samêvÆue†f‹ Xánd YÑesﬁuti⁄")

	)

394 
	#SANE_DESC_NEGATIVE
 \

395 
	`SANE_I18N
("Sw≠ bœckánd whôe")

	)

396 
	#SANE_DESC_QUALITY_CAL
 \

397 
	`SANE_I18N
("Dÿ®quÆôy whôe-ˇlibøti⁄")

	)

398 
	#SANE_DESC_DOR
 \

399 
	`SANE_I18N
("U£Üí†th© doubÀ†›tiˇ»ªsﬁuti⁄")

	)

400 
	#SANE_DESC_RGB_BIND
 \

401 
	`SANE_I18N
("I¿RGB-modêu£ samêvÆue†f‹Éach cﬁ‹")

	)

402 
	#SANE_DESC_THRESHOLD
 \

403 
	`SANE_I18N
("Sñe˘ möimum-brighäes†tÿgëá whôêpoöt")

	)

404 
	#SANE_DESC_ANALOG_GAMMA
 \

405 
	`SANE_I18N
("A«log gamma-c‹ª˘i⁄")

	)

406 
	#SANE_DESC_ANALOG_GAMMA_R
 \

407 
	`SANE_I18N
("A«log gamma-c‹ª˘i⁄ f‹Ñed")

	)

408 
	#SANE_DESC_ANALOG_GAMMA_G
 \

409 
	`SANE_I18N
("A«log gamma-c‹ª˘i⁄ f‹ gªí")

	)

410 
	#SANE_DESC_ANALOG_GAMMA_B
 \

411 
	`SANE_I18N
("A«log gamma-c‹ª˘i⁄ f‹ blue")

	)

412 
	#SANE_DESC_ANALOG_GAMMA_BIND
 \

413 
	`SANE_I18N
("I¿RGB-modêu£ samêvÆue†f‹Éach cﬁ‹")

	)

414 
	#SANE_DESC_WARMUP
 \

415 
	`SANE_I18N
("W¨mu∞œm∞bef‹êsˇ¬ög")

	)

416 
	#SANE_DESC_CAL_EXPOS_TIME
 \

417 
	`SANE_I18N
("Deföêexposuª-timêf‹ cÆibøti⁄")

	)

418 
	#SANE_DESC_CAL_EXPOS_TIME_R
 \

419 
	`SANE_I18N
("Deföêexposuª-timêf‹Ñed cÆibøti⁄")

	)

420 
	#SANE_DESC_CAL_EXPOS_TIME_G
 \

421 
	`SANE_I18N
("Deföêexposuª-timêf‹ gªí cÆibøti⁄")

	)

422 
	#SANE_DESC_CAL_EXPOS_TIME_B
 \

423 
	`SANE_I18N
("Deföêexposuª-timêf‹ bluêˇlibøti⁄")

	)

424 
	#SANE_DESC_SCAN_EXPOS_TIME
 \

425 
	`SANE_I18N
("Deföêexposuª-timêf‹ sˇn")

	)

426 
	#SANE_DESC_SCAN_EXPOS_TIME_R
 \

427 
	`SANE_I18N
("Deföêexposuª-timêf‹Ñed sˇn")

	)

428 
	#SANE_DESC_SCAN_EXPOS_TIME_G
 \

429 
	`SANE_I18N
("Deföêexposuª-timêf‹ gªí sˇn")

	)

430 
	#SANE_DESC_SCAN_EXPOS_TIME_B
 \

431 
	`SANE_I18N
("Deföêexposuª-timêf‹ bluêsˇn")

	)

432 
	#SANE_DESC_SELECT_EXPOSURE_TIME
 \

433 
	`SANE_I18N
("E«bÀ sñe˘i⁄ o‡exposuª-time")

	)

434 
	#SANE_DESC_CAL_LAMP_DEN
 \

435 
	`SANE_I18N
("Deföêœm∞dísôy f‹ cÆibøti⁄")

	)

436 
	#SANE_DESC_SCAN_LAMP_DEN
 \

437 
	`SANE_I18N
("Deföêœm∞dísôy f‹ sˇn")

	)

438 
	#SANE_DESC_SELECT_LAMP_DENSITY
 \

439 
	`SANE_I18N
("E«bÀ sñe˘i⁄ o‡œm∞dísôy")

	)

440 
	#SANE_DESC_LAMP_OFF_AT_EXIT
 \

441 
	`SANE_I18N
("Tu∫ of‡œm∞whíÖrogømÉxôs")

	)

444 
	#SANE_DESC_SCAN
 
	`SANE_I18N
("Sˇ¿buâ⁄")

	)

445 
	#SANE_DESC_EMAIL
 
	`SANE_I18N
("Emaû buâ⁄")

	)

446 
	#SANE_DESC_FAX
 
	`SANE_I18N
("Fax buâ⁄")

	)

447 
	#SANE_DESC_COPY
 
	`SANE_I18N
("C›y buâ⁄")

	)

448 
	#SANE_DESC_PDF
 
	`SANE_I18N
("PDF buâ⁄")

	)

449 
	#SANE_DESC_CANCEL
 
	`SANE_I18N
("C™˚»buâ⁄")

	)

450 
	#SANE_DESC_PAGE_LOADED
 
	`SANE_I18N
("Pagêlﬂded")

	)

451 
	#SANE_DESC_COVER_OPEN
 
	`SANE_I18N
("Covî o≥n")

	)

454 
	#SANE_VALUE_SCAN_MODE_COLOR
 
	`SANE_I18N
("Cﬁ‹")

	)

455 
	#SANE_VALUE_SCAN_MODE_COLOR_LINEART
 
	`SANE_I18N
("Cﬁ‹ Löóπ")

	)

456 
	#SANE_VALUE_SCAN_MODE_COLOR_HALFTONE
 
	`SANE_I18N
("Cﬁ‹ HÆ·⁄e")

	)

457 
	#SANE_VALUE_SCAN_MODE_GRAY
 
	`SANE_I18N
("Gøy")

	)

458 
	#SANE_VALUE_SCAN_MODE_HALFTONE
 
	`SANE_I18N
("HÆ·⁄e")

	)

459 
	#SANE_VALUE_SCAN_MODE_LINEART
 
	`SANE_I18N
("Löóπ")

	)

	@/usr/include/arpa/inet.h

19 #i‚de‡
_ARPA_INET_H


20 
	#_ARPA_INET_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<√töë/ö.h
>

26 #i‚de‡
__sockÀn_t_deföed


27 
__sockÀn_t
 
	tsockÀn_t
;

28 
	#__sockÀn_t_deföed


	)

31 
__BEGIN_DECLS


35 
ö_addr_t
 
	$öë_addr
 (
__c⁄°
 *
__˝
Ë
__THROW
;

38 
ö_addr_t
 
	$öë_ aof
 (
ö_addr
 
__ö
Ë
__THROW
;

42 
ö_addr
 
	$öë_makóddr
 (
ö_addr_t
 
__√t
, in_addr_à
__ho°
)

43 
__THROW
;

46 
ö_addr_t
 
	$öë_√tof
 (
ö_addr
 
__ö
Ë
__THROW
;

50 
ö_addr_t
 
	$öë_√tw‹k
 (
__c⁄°
 *
__˝
Ë
__THROW
;

54 *
	$öë_¡ﬂ
 (
ö_addr
 
__ö
Ë
__THROW
;

59 
	$öë_±⁄
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

60 *
__ª°ri˘
 
__buf
Ë
__THROW
;

65 
__c⁄°
 *
	$öë_¡›
 (
__af
, 
__c⁄°
 *
__ª°ri˘
 
__˝
,

66 *
__ª°ri˘
 
__buf
, 
sockÀn_t
 
__Àn
)

67 
__THROW
;

71 #ifde‡
__USE_MISC


74 
	$öë_©⁄
 (
__c⁄°
 *
__˝
, 
ö_addr
 *
__öp
Ë
__THROW
;

78 *
	$öë_√è
 (
ö_addr_t
 
__√t
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

83 *
	$öë_√t_¡›
 (
__af
, 
__c⁄°
 *
__˝
, 
__bôs
,

84 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

89 
	$öë_√t_±⁄
 (
__af
, 
__c⁄°
 *
__˝
,

90 *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

95 
	$öë_nßp_addr
 (
__c⁄°
 *
__˝
,

96 *
__buf
, 
__Àn
Ë
__THROW
;

100 *
	$öë_nßp_¡ﬂ
 (
__Àn
, 
__c⁄°
 *
__˝
,

101 *
__buf
Ë
__THROW
;

104 
__END_DECLS


	@/usr/include/assert.h

24 #ifdef 
_ASSERT_H


26 #unde‡
_ASSERT_H


27 #unde‡
as£π


28 #unde‡
__ASSERT_VOID_CAST


30 #ifdef 
__USE_GNU


31 #unde‡
as£π_≥º‹


36 
	#_ASSERT_H
 1

	)

37 
	~<„©uªs.h
>

39 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

40 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

42 
	#__ASSERT_VOID_CAST
 ()

	)

50 #ifdef 
NDEBUG


52 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

60 #ifdef 
__USE_GNU


61 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

66 #i‚de‡
_ASSERT_H_DECLS


67 
	#_ASSERT_H_DECLS


	)

68 
__BEGIN_DECLS


71 
	$__as£π_Áû
 (
__c⁄°
 *
__as£πi⁄
, __c⁄° *
__fûe
,

72 
__löe
, 
__c⁄°
 *
__fun˘i⁄
)

73 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

76 
	$__as£π_≥º‹_Áû
 (
__î∫um
, 
__c⁄°
 *
__fûe
,

77 
__löe
,

78 
__c⁄°
 *
__fun˘i⁄
)

79 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

84 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

85 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

88 
__END_DECLS


91 
	#as£π
(
ex¥
) \

92 ((
ex¥
) \

93 ? 
	`__ASSERT_VOID_CAST
 (0) \

94 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

96 #ifdef 
__USE_GNU


97 
	#as£π_≥º‹
(
î∫um
) \

98 (!(
î∫um
) \

99 ? 
	`__ASSERT_VOID_CAST
 (0) \

100 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

108 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

109 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

111 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

112 
	#__ASSERT_FUNCTION
 
__func__


	)

114 
	#__ASSERT_FUNCTION
 ((
__c⁄°
 *Ë0)

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__exã∫_ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__exã∫_ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_XOPEN2K8


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

24 #i‚def 
_FCNTL_H


25 
	#_FCNTL_H
 1

	)

27 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/f˙é.h
>

37 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


38 
	~<bôs/ty≥s.h
>

39 
	#__√ed_time•ec


	)

40 
	~<time.h
>

41 
	~<bôs/°©.h
>

43 
	#S_IFMT
 
__S_IFMT


	)

44 
	#S_IFDIR
 
__S_IFDIR


	)

45 
	#S_IFCHR
 
__S_IFCHR


	)

46 
	#S_IFBLK
 
__S_IFBLK


	)

47 
	#S_IFREG
 
__S_IFREG


	)

48 #ifde‡
__S_IFIFO


49 
	#S_IFIFO
 
__S_IFIFO


	)

51 #ifde‡
__S_IFLNK


52 
	#S_IFLNK
 
__S_IFLNK


	)

54 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


55 
	#S_IFSOCK
 
__S_IFSOCK


	)

60 
	#S_ISUID
 
__S_ISUID


	)

61 
	#S_ISGID
 
__S_ISGID


	)

63 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


65 
	#S_ISVTX
 
__S_ISVTX


	)

68 
	#S_IRUSR
 
__S_IREAD


	)

69 
	#S_IWUSR
 
__S_IWRITE


	)

70 
	#S_IXUSR
 
__S_IEXEC


	)

72 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

74 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

75 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

76 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

78 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

80 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

81 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

82 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

84 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

87 #ifdef 
__USE_MISC


88 #i‚de‡
R_OK


91 
	#R_OK
 4

	)

92 
	#W_OK
 2

	)

93 
	#X_OK
 1

	)

94 
	#F_OK
 0

	)

99 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


100 
	#SEEK_SET
 0

	)

101 
	#SEEK_CUR
 1

	)

102 
	#SEEK_END
 2

	)

110 
f˙é
 (
__fd
, 
__cmd
, ...);

118 #i‚de‡
__USE_FILE_OFFSET64


119 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

121 #ifde‡
__REDIRECT


122 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

123 
	`__n⁄nuŒ
 ((1));

125 
	#›í
 
›í64


	)

128 #ifde‡
__USE_LARGEFILE64


129 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

132 #ifde‡
__USE_ATFILE


142 #i‚de‡
__USE_FILE_OFFSET64


143 
	$›í©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

144 
	`__n⁄nuŒ
 ((2));

146 #ifde‡
__REDIRECT


147 
	`__REDIRECT
 (
›í©
, (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
,

148 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

150 
	#›í©
 
›í©64


	)

153 #ifde‡
__USE_LARGEFILE64


154 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

155 
	`__n⁄nuŒ
 ((2));

164 #i‚de‡
__USE_FILE_OFFSET64


165 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

167 #ifde‡
__REDIRECT


168 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

169 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

171 
	#¸ót
 
¸ót64


	)

174 #ifde‡
__USE_LARGEFILE64


175 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

178 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

179 && !
deföed
 
__USE_POSIX
))

188 
	#F_ULOCK
 0

	)

189 
	#F_LOCK
 1

	)

190 
	#F_TLOCK
 2

	)

191 
	#F_TEST
 3

	)

193 #i‚de‡
__USE_FILE_OFFSET64


194 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

196 #ifde‡
__REDIRECT


197 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

199 
	#lockf
 
lockf64


	)

202 #ifde‡
__USE_LARGEFILE64


203 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

207 #ifde‡
__USE_XOPEN2K


210 #i‚de‡
__USE_FILE_OFFSET64


211 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

212 
__advi£
Ë
__THROW
;

214 #ifde‡
__REDIRECT_NTH


215 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

216 
__off64_t
 
__Àn
, 
__advi£
),

217 
posix_Ádvi£64
);

219 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

222 #ifde‡
__USE_LARGEFILE64


223 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

224 
__advi£
Ë
__THROW
;

232 #i‚de‡
__USE_FILE_OFFSET64


233 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

235 #ifde‡
__REDIRECT


236 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

237 
__off64_t
 
__Àn
),

238 
posix_ÁŒoˇã64
);

240 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

243 #ifde‡
__USE_LARGEFILE64


244 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

250 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
 \

251 && 
deföed
 
__va_¨g_∑ck_Àn


252 
	~<bôs/f˙é2.h
>

255 
__END_DECLS


	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
);

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/grp.h

24 #i‚def 
_GRP_H


25 
	#_GRP_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

33 
	#__√ed_size_t


	)

34 
	~<°ddef.h
>

38 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
Ë&& !deföed 
__gid_t_deföed


39 
__gid_t
 
	tgid_t
;

40 
	#__gid_t_deföed


	)

44 
	sgroup


46 *
	mgr_«me
;

47 *
	mgr_∑sswd
;

48 
__gid_t
 
	mgr_gid
;

49 **
	mgr_mem
;

53 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_GNU


54 
	#__√ed_FILE


	)

55 
	~<°dio.h
>

59 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


64 
£tgª¡
 ();

67 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

68 || 
deföed
 
__USE_XOPEN2K8


73 
ídgª¡
 ();

79 
group
 *
gëgª¡
 ();

82 #ifdef 
__USE_SVID


89 
group
 *
fgëgª¡
 (
FILE
 *
__°ªam
);

92 #ifde‡
__USE_GNU


99 
putgª¡
 (
__c⁄°
 
group
 *
__ª°ri˘
 
__p
,

100 
FILE
 *
__ª°ri˘
 
__f
);

107 
group
 *
gëgrgid
 (
__gid_t
 
__gid
);

113 
group
 *
gëg∫am
 (
__c⁄°
 *
__«me
);

115 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


117 #ifde‡
__USE_MISC


120 
	#NSS_BUFLEN_GROUP
 1024

	)

136 #ifde‡
__USE_GNU


137 
gëgª¡_r
 (
group
 *
__ª°ri˘
 
__ªsu…buf
,

138 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

139 
group
 **
__ª°ri˘
 
__ªsu…
);

146 
gëgrgid_r
 (
__gid_t
 
__gid
, 
group
 *
__ª°ri˘
 
__ªsu…buf
,

147 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

148 
group
 **
__ª°ri˘
 
__ªsu…
);

154 
gëg∫am_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

155 
group
 *
__ª°ri˘
 
__ªsu…buf
,

156 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

157 
group
 **
__ª°ri˘
 
__ªsu…
);

159 #ifdef 
__USE_SVID


167 
fgëgª¡_r
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

168 
group
 *
__ª°ri˘
 
__ªsu…buf
,

169 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

170 
group
 **
__ª°ri˘
 
__ªsu…
);

176 #ifdef 
__USE_BSD


178 
	#__√ed_size_t


	)

179 
	~<°ddef.h
>

182 
	$£tgroups
 (
size_t
 
__n
, 
__c⁄°
 
__gid_t
 *
__groups
Ë
__THROW
;

192 
	`gëgrou∂i°
 (
__c⁄°
 *
__u£r
, 
__gid_t
 
__group
,

193 
__gid_t
 *
__groups
, *
__ngroups
);

203 
	`öôgroups
 (
__c⁄°
 *
__u£r
, 
__gid_t
 
__group
);

207 
__END_DECLS


	@/usr/include/limits.h

24 #i‚de‡
_LIBC_LIMITS_H_


25 
	#_LIBC_LIMITS_H_
 1

	)

27 
	~<„©uªs.h
>

33 
	#MB_LEN_MAX
 16

	)

38 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

43 #i‚de‡
_LIMITS_H


44 
	#_LIMITS_H
 1

	)

46 
	~<bôs/w‹dsize.h
>

55 
	#CHAR_BIT
 8

	)

58 
	#SCHAR_MIN
 (-128)

	)

59 
	#SCHAR_MAX
 127

	)

62 
	#UCHAR_MAX
 255

	)

65 #ifde‡
__CHAR_UNSIGNED__


66 
	#CHAR_MIN
 0

	)

67 
	#CHAR_MAX
 
UCHAR_MAX


	)

69 
	#CHAR_MIN
 
SCHAR_MIN


	)

70 
	#CHAR_MAX
 
SCHAR_MAX


	)

74 
	#SHRT_MIN
 (-32768)

	)

75 
	#SHRT_MAX
 32767

	)

78 
	#USHRT_MAX
 65535

	)

81 
	#INT_MIN
 (-
INT_MAX
 - 1)

	)

82 
	#INT_MAX
 2147483647

	)

85 
	#UINT_MAX
 4294967295U

	)

88 #i‡
__WORDSIZE
 == 64

89 
	#LONG_MAX
 9223372036854775807L

	)

91 
	#LONG_MAX
 2147483647L

	)

93 
	#LONG_MIN
 (-
LONG_MAX
 - 1L)

	)

96 #i‡
__WORDSIZE
 == 64

97 
	#ULONG_MAX
 18446744073709551615UL

	)

99 
	#ULONG_MAX
 4294967295UL

	)

102 #ifde‡
__USE_ISOC99


105 
	#LLONG_MAX
 9223372036854775807LL

	)

106 
	#LLONG_MIN
 (-
LLONG_MAX
 - 1LL)

	)

109 
	#ULLONG_MAX
 18446744073709551615ULL

	)

123 #i‡
deföed
 
__GNUC__
 && !deföed 
_GCC_LIMITS_H_


125 #ö˛ude_√xà<
limôs
.
h
>

131 #i‡
deföed
 
__USE_ISOC99
 && deföed 
__GNUC__


132 #i‚de‡
LLONG_MIN


133 
	#LLONG_MIN
 (-
LLONG_MAX
-1)

	)

135 #i‚de‡
LLONG_MAX


136 
	#LLONG_MAX
 
__LONG_LONG_MAX__


	)

138 #i‚de‡
ULLONG_MAX


139 
	#ULLONG_MAX
 (
LLONG_MAX
 * 2ULL + 1)

	)

143 #ifdef 
__USE_POSIX


145 
	~<bôs/posix1_lim.h
>

148 #ifdef 
__USE_POSIX2


149 
	~<bôs/posix2_lim.h
>

152 #ifdef 
__USE_XOPEN


153 
	~<bôs/x›í_lim.h
>

	@/usr/include/netdb.h

23 #i‚def 
_NETDB_H


24 
	#_NETDB_H
 1

	)

26 
	~<„©uªs.h
>

28 
	~<√töë/ö.h
>

29 
	~<°döt.h
>

30 #ifde‡
__USE_MISC


33 
	~<Ωc/√tdb.h
>

36 #ifde‡
__USE_GNU


37 
	#__√ed_sigevít_t


	)

38 
	~<bôs/sigöfo.h
>

39 
	#__√ed_time•ec


	)

40 
	~<time.h
>

43 
	~<bôs/√tdb.h
>

46 
	#_PATH_HEQUIV
 "/ëc/ho°s.equiv"

	)

47 
	#_PATH_HOSTS
 "/ëc/ho°s"

	)

48 
	#_PATH_NETWORKS
 "/ëc/√tw‹ks"

	)

49 
	#_PATH_NSSWITCH_CONF
 "/ëc/nsswôch.c⁄f"

	)

50 
	#_PATH_PROTOCOLS
 "/ëc/¥Ÿocﬁs"

	)

51 
	#_PATH_SERVICES
 "/ëc/£rvi˚s"

	)

54 
	g__BEGIN_DECLS


56 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


59 
	#h_î∫o
 (*
	`__h_î∫o_loˇti⁄
 ())

	)

62 *
	$__h_î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

66 
	#HOST_NOT_FOUND
 1

	)

67 
	#TRY_AGAIN
 2

	)

69 
	#NO_RECOVERY
 3

	)

71 
	#NO_DATA
 4

	)

74 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


75 
	#NETDB_INTERNAL
 -1

	)

76 
	#NETDB_SUCCESS
 0

	)

77 
	#NO_ADDRESS
 
NO_DATA


	)

80 #ifde‡
__USE_XOPEN2K


82 
	#IPPORT_RESERVED
 1024

	)

85 #ifde‡
__USE_GNU


87 
	#SCOPE_DELIMITER
 '%'

	)

90 #ifde‡
__USE_MISC


93 
	$hîr‹
 (
__c⁄°
 *
__°r
Ë
__THROW
;

96 
__c⁄°
 *
	$h°ªº‹
 (
__îr_num
Ë
__THROW
;

101 
	sho°ít


103 *
h_«me
;

104 **
h_Æü£s
;

105 
h_addπy≥
;

106 
h_Àngth
;

107 **
h_addr_li°
;

108 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


109 
	#h_addr
 
h_addr_li°
[0]

	)

118 
	`£tho°ít
 (
__°ay_›í
);

124 
	`ídho°ít
 ();

131 
ho°ít
 *
	`gëho°ít
 ();

138 
ho°ít
 *
	`gëho°byaddr
 (
__c⁄°
 *
__addr
, 
__sockÀn_t
 
__Àn
,

139 
__ty≥
);

145 
ho°ít
 *
	`gëho°by«me
 (
__c⁄°
 *
__«me
);

147 #ifde‡
__USE_MISC


156 
ho°ít
 *
	`gëho°by«me2
 (
__c⁄°
 *
__«me
, 
__af
);

168 
	`gëho°ít_r
 (
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

169 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

170 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

171 *
__ª°ri˘
 
__h_î∫›
);

173 
	`gëho°byaddr_r
 (
__c⁄°
 *
__ª°ri˘
 
__addr
, 
__sockÀn_t
 
__Àn
,

174 
__ty≥
,

175 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

176 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

177 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

178 *
__ª°ri˘
 
__h_î∫›
);

180 
	`gëho°by«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

181 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

182 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

183 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

184 *
__ª°ri˘
 
__h_î∫›
);

186 
	`gëho°by«me2_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, 
__af
,

187 
ho°ít
 *
__ª°ri˘
 
__ªsu…_buf
,

188 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

189 
ho°ít
 **
__ª°ri˘
 
__ªsu…
,

190 *
__ª°ri˘
 
__h_î∫›
);

199 
	`£äëít
 (
__°ay_›í
);

205 
	`íd√ã¡
 ();

212 
√ã¡
 *
	`gë√ã¡
 ();

219 
√ã¡
 *
	`gë√tbyaddr
 (
uöt32_t
 
__√t
, 
__ty≥
);

225 
√ã¡
 *
	`gë√tby«me
 (
__c⁄°
 *
__«me
);

227 #ifdef 
__USE_MISC


238 
	`gë√ã¡_r
 (
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

239 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

240 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

241 *
__ª°ri˘
 
__h_î∫›
);

243 
	`gë√tbyaddr_r
 (
uöt32_t
 
__√t
, 
__ty≥
,

244 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

245 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

246 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

247 *
__ª°ri˘
 
__h_î∫›
);

249 
	`gë√tby«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

250 
√ã¡
 *
__ª°ri˘
 
__ªsu…_buf
,

251 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

252 
√ã¡
 **
__ª°ri˘
 
__ªsu…
,

253 *
__ª°ri˘
 
__h_î∫›
);

258 
	s£rvít


260 *
s_«me
;

261 **
s_Æü£s
;

262 
s_p‹t
;

263 *
s_¥Ÿo
;

271 
	`£t£rvít
 (
__°ay_›í
);

277 
	`íd£rvít
 ();

284 
£rvít
 *
	`gë£rvít
 ();

291 
£rvít
 *
	`gë£rvby«me
 (
__c⁄°
 *
__«me
,

292 
__c⁄°
 *
__¥Ÿo
);

299 
£rvít
 *
	`gë£rvbyp‹t
 (
__p‹t
, 
__c⁄°
 *
__¥Ÿo
);

302 #ifdef 
__USE_MISC


310 
	`gë£rvít_r
 (
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

311 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

312 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

314 
	`gë£rvby«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

315 
__c⁄°
 *
__ª°ri˘
 
__¥Ÿo
,

316 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

317 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

318 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

320 
	`gë£rvbyp‹t_r
 (
__p‹t
, 
__c⁄°
 *
__ª°ri˘
 
__¥Ÿo
,

321 
£rvít
 *
__ª°ri˘
 
__ªsu…_buf
,

322 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

323 
£rvít
 **
__ª°ri˘
 
__ªsu…
);

328 
	s¥Ÿ€¡


330 *
p_«me
;

331 **
p_Æü£s
;

332 
p_¥Ÿo
;

340 
	`£çrŸ€¡
 (
__°ay_›í
);

346 
	`íd¥Ÿ€¡
 ();

353 
¥Ÿ€¡
 *
	`gë¥Ÿ€¡
 ();

359 
¥Ÿ€¡
 *
	`gë¥Ÿoby«me
 (
__c⁄°
 *
__«me
);

365 
¥Ÿ€¡
 *
	`gë¥Ÿobynumbî
 (
__¥Ÿo
);

368 #ifdef 
__USE_MISC


376 
	`gë¥Ÿ€¡_r
 (
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

377 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

378 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

380 
	`gë¥Ÿoby«me_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

381 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

382 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

383 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

385 
	`gë¥Ÿobynumbî_r
 (
__¥Ÿo
,

386 
¥Ÿ€¡
 *
__ª°ri˘
 
__ªsu…_buf
,

387 *
__ª°ri˘
 
__buf
, 
size_t
 
__buÊí
,

388 
¥Ÿ€¡
 **
__ª°ri˘
 
__ªsu…
);

397 
	`£äëgª¡
 (
__c⁄°
 *
__√tgroup
);

405 
	`íd√tgª¡
 ();

414 
	`gë√tgª¡
 (**
__ª°ri˘
 
__ho°p
,

415 **
__ª°ri˘
 
__u£Ω
,

416 **
__ª°ri˘
 
__domaöp
);

425 
	`ö√tgr
 (
__c⁄°
 *
__√tgroup
, __c⁄° *
__ho°
,

426 
__c⁄°
 *
__u£r
, __c⁄° *
__domaö
);

434 
	`gë√tgª¡_r
 (**
__ª°ri˘
 
__ho°p
,

435 **
__ª°ri˘
 
__u£Ω
,

436 **
__ª°ri˘
 
__domaöp
,

437 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
);

441 #ifde‡
__USE_BSD


453 
	`rcmd
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

454 
__c⁄°
 *
__ª°ri˘
 
__locu£r
,

455 
__c⁄°
 *
__ª°ri˘
 
__ªmu£r
,

456 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

465 
	`rcmd_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

466 
__c⁄°
 *
__ª°ri˘
 
__locu£r
,

467 
__c⁄°
 *
__ª°ri˘
 
__ªmu£r
,

468 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

469 
ß_Ámûy_t
 
__af
);

481 
	`ªxec
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

482 
__c⁄°
 *
__ª°ri˘
 
__«me
,

483 
__c⁄°
 *
__ª°ri˘
 
__∑ss
,

484 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
);

493 
	`ªxec_af
 (**
__ª°ri˘
 
__aho°
, 
__Ω‹t
,

494 
__c⁄°
 *
__ª°ri˘
 
__«me
,

495 
__c⁄°
 *
__ª°ri˘
 
__∑ss
,

496 
__c⁄°
 *
__ª°ri˘
 
__cmd
, *__ª°ri˘ 
__fd2p
,

497 
ß_Ámûy_t
 
__af
);

507 
	`ru£rok
 (
__c⁄°
 *
__rho°
, 
__su£r
,

508 
__c⁄°
 *
__ªmu£r
, __c⁄° *
__locu£r
);

517 
	`ru£rok_af
 (
__c⁄°
 *
__rho°
, 
__su£r
,

518 
__c⁄°
 *
__ªmu£r
, __c⁄° *
__locu£r
,

519 
ß_Ámûy_t
 
__af
);

530 
	`úu£rok
 (
uöt32_t
 
__øddr
, 
__su£r
,

531 
__c⁄°
 *
__ªmu£r
, __c⁄° *
__locu£r
);

541 
	`úu£rok_af
 (
__c⁄°
 *
__øddr
, 
__su£r
,

542 
__c⁄°
 *
__ªmu£r
, __c⁄° *
__locu£r
,

543 
ß_Ámûy_t
 
__af
);

553 
	`ºesvp‹t
 (*
__Æp‹t
);

562 
	`ºesvp‹t_af
 (*
__Æp‹t
, 
ß_Ámûy_t
 
__af
);

567 #ifdef 
__USE_POSIX


569 
	saddröfo


571 
ai_Êags
;

572 
ai_Ámûy
;

573 
ai_sockty≥
;

574 
ai_¥Ÿocﬁ
;

575 
sockÀn_t
 
ai_addæí
;

576 
sockaddr
 *
ai_addr
;

577 *
ai_ˇn⁄«me
;

578 
addröfo
 *
ai_√xt
;

581 #ifde‡
__USE_GNU


583 
	sgaicb


585 c⁄° *
¨_«me
;

586 c⁄° *
¨_£rvi˚
;

587 c⁄° 
addröfo
 *
¨_ªque°
;

588 
addröfo
 *
¨_ªsu…
;

590 
__ªtu∫
;

591 
__unu£d
[5];

595 
	#GAI_WAIT
 0

	)

596 
	#GAI_NOWAIT
 1

	)

600 
	#AI_PASSIVE
 0x0001

	)

601 
	#AI_CANONNAME
 0x0002

	)

602 
	#AI_NUMERICHOST
 0x0004

	)

603 
	#AI_V4MAPPED
 0x0008

	)

604 
	#AI_ALL
 0x0010

	)

605 
	#AI_ADDRCONFIG
 0x0020

	)

607 #ifde‡
__USE_GNU


608 
	#AI_IDN
 0x0040

	)

611 
	#AI_CANONIDN
 0x0080

	)

612 
	#AI_IDN_ALLOW_UNASSIGNED
 0x0100

	)

614 
	#AI_IDN_USE_STD3_ASCII_RULES
 0x0200

	)

617 
	#AI_NUMERICSERV
 0x0400

	)

620 
	#EAI_BADFLAGS
 -1

	)

621 
	#EAI_NONAME
 -2

	)

622 
	#EAI_AGAIN
 -3

	)

623 
	#EAI_FAIL
 -4

	)

624 
	#EAI_FAMILY
 -6

	)

625 
	#EAI_SOCKTYPE
 -7

	)

626 
	#EAI_SERVICE
 -8

	)

627 
	#EAI_MEMORY
 -10

	)

628 
	#EAI_SYSTEM
 -11

	)

629 
	#EAI_OVERFLOW
 -12

	)

630 #ifde‡
__USE_GNU


631 
	#EAI_NODATA
 -5

	)

632 
	#EAI_ADDRFAMILY
 -9

	)

633 
	#EAI_INPROGRESS
 -100

	)

634 
	#EAI_CANCELED
 -101

	)

635 
	#EAI_NOTCANCELED
 -102

	)

636 
	#EAI_ALLDONE
 -103

	)

637 
	#EAI_INTR
 -104

	)

638 
	#EAI_IDN_ENCODE
 -105

	)

641 #ifde‡
__USE_MISC


642 
	#NI_MAXHOST
 1025

	)

643 
	#NI_MAXSERV
 32

	)

646 
	#NI_NUMERICHOST
 1

	)

647 
	#NI_NUMERICSERV
 2

	)

648 
	#NI_NOFQDN
 4

	)

649 
	#NI_NAMEREQD
 8

	)

650 
	#NI_DGRAM
 16

	)

651 #ifde‡
__USE_GNU


652 
	#NI_IDN
 32

	)

653 
	#NI_IDN_ALLOW_UNASSIGNED
 64

	)

655 
	#NI_IDN_USE_STD3_ASCII_RULES
 128

	)

664 
	`gëaddröfo
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

665 
__c⁄°
 *
__ª°ri˘
 
__£rvi˚
,

666 
__c⁄°
 
addröfo
 *
__ª°ri˘
 
__ªq
,

667 
addröfo
 **
__ª°ri˘
 
__∑i
);

670 
	$‰ìaddröfo
 (
addröfo
 *
__ai
Ë
__THROW
;

673 
__c⁄°
 *
	$gai_°ªº‹
 (
__ecode
Ë
__THROW
;

679 
	`gë«meöfo
 (
__c⁄°
 
sockaddr
 *
__ª°ri˘
 
__ß
,

680 
sockÀn_t
 
__ßÀn
, *
__ª°ri˘
 
__ho°
,

681 
sockÀn_t
 
__ho°Àn
, *
__ª°ri˘
 
__£rv
,

682 
sockÀn_t
 
__£rvÀn
, 
__Êags
);

685 #ifde‡
__USE_GNU


694 
	`gëaddröfo_a
 (
__mode
, 
gaicb
 *
__li°
[
__ª°ri˘_¨r
],

695 
__ít
, 
sigevít
 *
__ª°ri˘
 
__sig
);

705 
	`gai_su•íd
 (
__c⁄°
 
gaicb
 *__c⁄° 
__li°
[], 
__ít
,

706 
__c⁄°
 
time•ec
 *
__timeout
);

709 
	$gai_îr‹
 (
gaicb
 *
__ªq
Ë
__THROW
;

712 
	$gai_ˇn˚l
 (
gaicb
 *
__gaicbp
Ë
__THROW
;

715 
__END_DECLS


	@/usr/include/netinet/in.h

20 #i‚def 
_NETINET_IN_H


21 
	#_NETINET_IN_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<°döt.h
>

25 
	~<sys/sockë.h
>

26 
	~<bôs/ty≥s.h
>

29 
__BEGIN_DECLS


34 
	mIPPROTO_IP
 = 0,

35 
	#IPPROTO_IP
 
IPPROTO_IP


	)

36 
	mIPPROTO_HOPOPTS
 = 0,

37 
	#IPPROTO_HOPOPTS
 
IPPROTO_HOPOPTS


	)

38 
	mIPPROTO_ICMP
 = 1,

39 
	#IPPROTO_ICMP
 
IPPROTO_ICMP


	)

40 
	mIPPROTO_IGMP
 = 2,

41 
	#IPPROTO_IGMP
 
IPPROTO_IGMP


	)

42 
	mIPPROTO_IPIP
 = 4,

43 
	#IPPROTO_IPIP
 
IPPROTO_IPIP


	)

44 
	mIPPROTO_TCP
 = 6,

45 
	#IPPROTO_TCP
 
IPPROTO_TCP


	)

46 
	mIPPROTO_EGP
 = 8,

47 
	#IPPROTO_EGP
 
IPPROTO_EGP


	)

48 
	mIPPROTO_PUP
 = 12,

49 
	#IPPROTO_PUP
 
IPPROTO_PUP


	)

50 
	mIPPROTO_UDP
 = 17,

51 
	#IPPROTO_UDP
 
IPPROTO_UDP


	)

52 
	mIPPROTO_IDP
 = 22,

53 
	#IPPROTO_IDP
 
IPPROTO_IDP


	)

54 
	mIPPROTO_TP
 = 29,

55 
	#IPPROTO_TP
 
IPPROTO_TP


	)

56 
	mIPPROTO_DCCP
 = 33,

57 
	#IPPROTO_DCCP
 
IPPROTO_DCCP


	)

58 
	mIPPROTO_IPV6
 = 41,

59 
	#IPPROTO_IPV6
 
IPPROTO_IPV6


	)

60 
	mIPPROTO_ROUTING
 = 43,

61 
	#IPPROTO_ROUTING
 
IPPROTO_ROUTING


	)

62 
	mIPPROTO_FRAGMENT
 = 44,

63 
	#IPPROTO_FRAGMENT
 
IPPROTO_FRAGMENT


	)

64 
	mIPPROTO_RSVP
 = 46,

65 
	#IPPROTO_RSVP
 
IPPROTO_RSVP


	)

66 
	mIPPROTO_GRE
 = 47,

67 
	#IPPROTO_GRE
 
IPPROTO_GRE


	)

68 
	mIPPROTO_ESP
 = 50,

69 
	#IPPROTO_ESP
 
IPPROTO_ESP


	)

70 
	mIPPROTO_AH
 = 51,

71 
	#IPPROTO_AH
 
IPPROTO_AH


	)

72 
	mIPPROTO_ICMPV6
 = 58,

73 
	#IPPROTO_ICMPV6
 
IPPROTO_ICMPV6


	)

74 
	mIPPROTO_NONE
 = 59,

75 
	#IPPROTO_NONE
 
IPPROTO_NONE


	)

76 
	mIPPROTO_DSTOPTS
 = 60,

77 
	#IPPROTO_DSTOPTS
 
IPPROTO_DSTOPTS


	)

78 
	mIPPROTO_MTP
 = 92,

79 
	#IPPROTO_MTP
 
IPPROTO_MTP


	)

80 
	mIPPROTO_ENCAP
 = 98,

81 
	#IPPROTO_ENCAP
 
IPPROTO_ENCAP


	)

82 
	mIPPROTO_PIM
 = 103,

83 
	#IPPROTO_PIM
 
IPPROTO_PIM


	)

84 
	mIPPROTO_COMP
 = 108,

85 
	#IPPROTO_COMP
 
IPPROTO_COMP


	)

86 
	mIPPROTO_SCTP
 = 132,

87 
	#IPPROTO_SCTP
 
IPPROTO_SCTP


	)

88 
	mIPPROTO_UDPLITE
 = 136,

89 
	#IPPROTO_UDPLITE
 
IPPROTO_UDPLITE


	)

90 
	mIPPROTO_RAW
 = 255,

91 
	#IPPROTO_RAW
 
IPPROTO_RAW


	)

92 
	mIPPROTO_MAX


97 
uöt16_t
 
	tö_p‹t_t
;

102 
	mIPPORT_ECHO
 = 7,

103 
	mIPPORT_DISCARD
 = 9,

104 
	mIPPORT_SYSTAT
 = 11,

105 
	mIPPORT_DAYTIME
 = 13,

106 
	mIPPORT_NETSTAT
 = 15,

107 
	mIPPORT_FTP
 = 21,

108 
	mIPPORT_TELNET
 = 23,

109 
	mIPPORT_SMTP
 = 25,

110 
	mIPPORT_TIMESERVER
 = 37,

111 
	mIPPORT_NAMESERVER
 = 42,

112 
	mIPPORT_WHOIS
 = 43,

113 
	mIPPORT_MTP
 = 57,

115 
	mIPPORT_TFTP
 = 69,

116 
	mIPPORT_RJE
 = 77,

117 
	mIPPORT_FINGER
 = 79,

118 
	mIPPORT_TTYLINK
 = 87,

119 
	mIPPORT_SUPDUP
 = 95,

122 
	mIPPORT_EXECSERVER
 = 512,

123 
	mIPPORT_LOGINSERVER
 = 513,

124 
	mIPPORT_CMDSERVER
 = 514,

125 
	mIPPORT_EFSSERVER
 = 520,

128 
	mIPPORT_BIFFUDP
 = 512,

129 
	mIPPORT_WHOSERVER
 = 513,

130 
	mIPPORT_ROUTESERVER
 = 520,

133 
	mIPPORT_RESERVED
 = 1024,

136 
	mIPPORT_USERRESERVED
 = 5000

141 
uöt32_t
 
	tö_addr_t
;

142 
	sö_addr


144 
ö_addr_t
 
	ms_addr
;

153 
	#IN_CLASSA
(
a
Ë((((
ö_addr_t
)◊)Ë& 0x80000000Ë=0)

	)

154 
	#IN_CLASSA_NET
 0xff000000

	)

155 
	#IN_CLASSA_NSHIFT
 24

	)

156 
	#IN_CLASSA_HOST
 (0xfffffff‡& ~
IN_CLASSA_NET
)

	)

157 
	#IN_CLASSA_MAX
 128

	)

159 
	#IN_CLASSB
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xc0000000Ë=0x80000000)

	)

160 
	#IN_CLASSB_NET
 0xffff0000

	)

161 
	#IN_CLASSB_NSHIFT
 16

	)

162 
	#IN_CLASSB_HOST
 (0xfffffff‡& ~
IN_CLASSB_NET
)

	)

163 
	#IN_CLASSB_MAX
 65536

	)

165 
	#IN_CLASSC
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xc0000000)

	)

166 
	#IN_CLASSC_NET
 0xffffff00

	)

167 
	#IN_CLASSC_NSHIFT
 8

	)

168 
	#IN_CLASSC_HOST
 (0xfffffff‡& ~
IN_CLASSC_NET
)

	)

170 
	#IN_CLASSD
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xe0000000)

	)

171 
	#IN_MULTICAST
(
a
Ë
	`IN_CLASSD
◊)

	)

173 
	#IN_EXPERIMENTAL
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xe0000000Ë=0xe0000000)

	)

174 
	#IN_BADCLASS
(
a
Ë((((
ö_addr_t
)◊)Ë& 0xf0000000Ë=0xf0000000)

	)

177 
	#INADDR_ANY
 ((
ö_addr_t
Ë0x00000000)

	)

179 
	#INADDR_BROADCAST
 ((
ö_addr_t
Ë0xffffffff)

	)

181 
	#INADDR_NONE
 ((
ö_addr_t
Ë0xffffffff)

	)

184 
	#IN_LOOPBACKNET
 127

	)

186 #i‚de‡
INADDR_LOOPBACK


187 
	#INADDR_LOOPBACK
 ((
ö_addr_t
Ë0x7f000001Ë

	)

191 
	#INADDR_UNSPEC_GROUP
 ((
ö_addr_t
Ë0xe0000000Ë

	)

192 
	#INADDR_ALLHOSTS_GROUP
 ((
ö_addr_t
Ë0xe0000001Ë

	)

193 
	#INADDR_ALLRTRS_GROUP
 ((
ö_addr_t
Ë0xe0000002Ë

	)

194 
	#INADDR_MAX_LOCAL_GROUP
 ((
ö_addr_t
Ë0xe00000ffË

	)

198 
	sö6_addr


202 
uöt8_t
 
	m__u6_addr8
[16];

203 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


204 
uöt16_t
 
	m__u6_addr16
[8];

205 
uöt32_t
 
	m__u6_addr32
[4];

207 } 
	m__ö6_u
;

208 
	#s6_addr
 
__ö6_u
.
__u6_addr8


	)

209 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


210 
	#s6_addr16
 
__ö6_u
.
__u6_addr16


	)

211 
	#s6_addr32
 
__ö6_u
.
__u6_addr32


	)

215 c⁄° 
ö6_addr
 
ö6addr_™y
;

216 c⁄° 
ö6_addr
 
ö6addr_lo›back
;

217 
	#IN6ADDR_ANY_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } } }

	)

218 
	#IN6ADDR_LOOPBACK_INIT
 { { { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1 } } }

	)

220 
	#INET_ADDRSTRLEN
 16

	)

221 
	#INET6_ADDRSTRLEN
 46

	)

225 
	ssockaddr_ö


227 
__SOCKADDR_COMMON
 (
sö_
);

228 
ö_p‹t_t
 
	msö_p‹t
;

229 
ö_addr
 
	msö_addr
;

232 
	msö_zîo
[ (
sockaddr
) -

233 
__SOCKADDR_COMMON_SIZE
 -

234  (
ö_p‹t_t
) -

235  (
ö_addr
)];

239 
	ssockaddr_ö6


241 
__SOCKADDR_COMMON
 (
sö6_
);

242 
ö_p‹t_t
 
	msö6_p‹t
;

243 
uöt32_t
 
	msö6_Êowöfo
;

244 
ö6_addr
 
	msö6_addr
;

245 
uöt32_t
 
	msö6_sc›e_id
;

249 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


251 
	sù_mªq


254 
ö_addr
 
	mimr_mu…üddr
;

257 
ö_addr
 
	mimr_öãrÁ˚
;

260 
	sù_mªq_sour˚


263 
ö_addr
 
	mimr_mu…üddr
;

266 
ö_addr
 
	mimr_öãrÁ˚
;

269 
ö_addr
 
	mimr_sour˚addr
;

275 
	sùv6_mªq


278 
ö6_addr
 
	mùv6mr_mu…üddr
;

281 
	mùv6mr_öãrÁ˚
;

285 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


287 
	sgroup_ªq


290 
uöt32_t
 
	mgr_öãrÁ˚
;

293 
sockaddr_°‹age
 
	mgr_group
;

296 
	sgroup_sour˚_ªq


299 
uöt32_t
 
	mg§_öãrÁ˚
;

302 
sockaddr_°‹age
 
	mg§_group
;

305 
sockaddr_°‹age
 
	mg§_sour˚
;

310 
	sù_msfûãr


313 
ö_addr
 
	mimsf_mu…üddr
;

316 
ö_addr
 
	mimsf_öãrÁ˚
;

319 
uöt32_t
 
	mimsf_fmode
;

322 
uöt32_t
 
	mimsf_num§c
;

324 
ö_addr
 
	mimsf_¶i°
[1];

327 
	#IP_MSFILTER_SIZE
(
num§c
Ë( (
ù_msfûãr
) \

328 -  (
ö_addr
) \

329 + (
num§c
Ë*  (
ö_addr
))

	)

331 
	sgroup_fûãr


334 
uöt32_t
 
	mgf_öãrÁ˚
;

337 
sockaddr_°‹age
 
	mgf_group
;

340 
uöt32_t
 
	mgf_fmode
;

343 
uöt32_t
 
	mgf_num§c
;

345 
sockaddr_°‹age
 
	mgf_¶i°
[1];

348 
	#GROUP_FILTER_SIZE
(
num§c
Ë( (
group_fûãr
) \

349 -  (
sockaddr_°‹age
) \

350 + ((
num§c
) \

351 *  (
sockaddr_°‹age
)))

	)

356 
	~<bôs/ö.h
>

365 
uöt32_t
 
	$¡ohl
 (
uöt32_t
 
__√é⁄g
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

366 
uöt16_t
 
	$¡ohs
 (
uöt16_t
 
__√tsh‹t
)

367 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

368 
uöt32_t
 
	$ht⁄l
 (
uöt32_t
 
__ho°l⁄g
)

369 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

370 
uöt16_t
 
	$ht⁄s
 (
uöt16_t
 
__ho°sh‹t
)

371 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

373 
	~<ídün.h
>

376 
	~<bôs/byãsw≠.h
>

378 #ifde‡
__OPTIMIZE__


382 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


385 
	#¡ohl
(
x
Ë(x)

	)

386 
	#¡ohs
(
x
Ë(x)

	)

387 
	#ht⁄l
(
x
Ë(x)

	)

388 
	#ht⁄s
(
x
Ë(x)

	)

390 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


391 
	#¡ohl
(
x
Ë
	`__bsw≠_32
 (x)

	)

392 
	#¡ohs
(
x
Ë
	`__bsw≠_16
 (x)

	)

393 
	#ht⁄l
(
x
Ë
	`__bsw≠_32
 (x)

	)

394 
	#ht⁄s
(
x
Ë
	`__bsw≠_16
 (x)

	)

399 
	#IN6_IS_ADDR_UNSPECIFIED
(
a
) \

400 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

401 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

402 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

403 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =0)

	)

405 
	#IN6_IS_ADDR_LOOPBACK
(
a
) \

406 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0 \

407 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0 \

408 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0 \

409 && ((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =
	`ht⁄l
 (1))

	)

411 
	#IN6_IS_ADDR_MULTICAST
(
a
Ë(((
__c⁄°
 
uöt8_t
 *Ë◊))[0] =0xff)

	)

413 
	#IN6_IS_ADDR_LINKLOCAL
(
a
) \

414 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

415 =
	`ht⁄l
 (0x„800000))

	)

417 
	#IN6_IS_ADDR_SITELOCAL
(
a
) \

418 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] & 
	`ht⁄l
 (0xffc00000)) \

419 =
	`ht⁄l
 (0x„c00000))

	)

421 
	#IN6_IS_ADDR_V4MAPPED
(
a
) \

422 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

423 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

424 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =
	`ht⁄l
 (0xffff)))

	)

426 
	#IN6_IS_ADDR_V4COMPAT
(
a
) \

427 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] == 0) \

428 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] == 0) \

429 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] == 0) \

430 && (
	`¡ohl
 (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3]Ë> 1))

	)

432 
	#IN6_ARE_ADDR_EQUAL
(
a
,
b
) \

433 ((((
__c⁄°
 
uöt32_t
 *Ë(
a
))[0] =((__c⁄° uöt32_à*Ë(
b
))[0]) \

434 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[1] =((__c⁄° uöt32_à*Ë(
b
))[1]) \

435 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[2] =((__c⁄° uöt32_à*Ë(
b
))[2]) \

436 && (((
__c⁄°
 
uöt32_t
 *Ë(
a
))[3] =((__c⁄° uöt32_à*Ë(
b
))[3]))

	)

438 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_GNU


440 
	$bödªsvp‹t
 (
__sockfd
, 
sockaddr_ö
 *
__sock_ö
Ë
__THROW
;

443 
	$bödªsvp‹t6
 (
__sockfd
, 
sockaddr_ö6
 *
__sock_ö
)

444 
__THROW
;

448 
	#IN6_IS_ADDR_MC_NODELOCAL
(
a
) \

449 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

450 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x1))

	)

452 
	#IN6_IS_ADDR_MC_LINKLOCAL
(
a
) \

453 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

454 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x2))

	)

456 
	#IN6_IS_ADDR_MC_SITELOCAL
(
a
) \

457 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

458 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x5))

	)

460 
	#IN6_IS_ADDR_MC_ORGLOCAL
(
a
) \

461 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

462 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0x8))

	)

464 
	#IN6_IS_ADDR_MC_GLOBAL
(
a
) \

465 (
	`IN6_IS_ADDR_MULTICAST
(
a
) \

466 && ((((
__c⁄°
 
uöt8_t
 *Ë(
a
))[1] & 0xfË=0xe))

	)

469 #ifde‡
__USE_GNU


471 
	sö6_pktöfo


473 
ö6_addr
 
ùi6_addr
;

474 
ùi6_ifödex
;

478 
	sù6_mtuöfo


480 
sockaddr_ö6
 
ù6m_addr
;

481 
uöt32_t
 
ù6m_mtu
;

486 
	$öë6_›ti⁄_•a˚
 (
__nbyãs
)

487 
__THROW
 
__©åibuã_dïªˇãd__
;

488 
	$öë6_›ti⁄_öô
 (*
__bp
, 
cmsghdr
 **
__cmsgp
,

489 
__ty≥
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

490 
	$öë6_›ti⁄_≠≥nd
 (
cmsghdr
 *
__cmsg
,

491 
__c⁄°
 
uöt8_t
 *
__ty≥p
, 
__mu…x
,

492 
__∂usy
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

493 
uöt8_t
 *
	$öë6_›ti⁄_Æloc
 (
cmsghdr
 *
__cmsg
, 
__d©Æí
,

494 
__mu…x
, 
__∂usy
)

495 
__THROW
 
__©åibuã_dïªˇãd__
;

496 
	$öë6_›ti⁄_√xt
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

497 
uöt8_t
 **
__çåp
)

498 
__THROW
 
__©åibuã_dïªˇãd__
;

499 
	$öë6_›ti⁄_föd
 (
__c⁄°
 
cmsghdr
 *
__cmsg
,

500 
uöt8_t
 **
__çåp
, 
__ty≥
)

501 
__THROW
 
__©åibuã_dïªˇãd__
;

505 
	$öë6_›t_öô
 (*
__extbuf
, 
sockÀn_t
 
__exéí
Ë
__THROW
;

506 
	$öë6_›t_≠≥nd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

507 
uöt8_t
 
__ty≥
, 
sockÀn_t
 
__Àn
, uöt8_à
__Æign
,

508 **
__d©abuÂ
Ë
__THROW
;

509 
	$öë6_›t_föish
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
)

510 
__THROW
;

511 
	$öë6_›t_£t_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

512 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

513 
	$öë6_›t_√xt
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

514 
uöt8_t
 *
__ty≥p
, 
sockÀn_t
 *
__À≈
,

515 **
__d©abuÂ
Ë
__THROW
;

516 
	$öë6_›t_föd
 (*
__extbuf
, 
sockÀn_t
 
__exéí
, 
__off£t
,

517 
uöt8_t
 
__ty≥
, 
sockÀn_t
 *
__À≈
,

518 **
__d©abuÂ
Ë
__THROW
;

519 
	$öë6_›t_gë_vÆ
 (*
__d©abuf
, 
__off£t
, *
__vÆ
,

520 
sockÀn_t
 
__vÆÀn
Ë
__THROW
;

524 
sockÀn_t
 
	$öë6_πh_•a˚
 (
__ty≥
, 
__£gmíts
Ë
__THROW
;

525 *
	$öë6_πh_öô
 (*
__bp
, 
sockÀn_t
 
__bp_Àn
, 
__ty≥
,

526 
__£gmíts
Ë
__THROW
;

527 
	$öë6_πh_add
 (*
__bp
, 
__c⁄°
 
ö6_addr
 *
__addr
Ë
__THROW
;

528 
	$öë6_πh_ªvî£
 (
__c⁄°
 *
__ö
, *
__out
Ë
__THROW
;

529 
	$öë6_πh_£gmíts
 (
__c⁄°
 *
__bp
Ë
__THROW
;

530 
ö6_addr
 *
	$öë6_πh_gëaddr
 (
__c⁄°
 *
__bp
, 
__ödex
)

531 
__THROW
;

537 
	$gëùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

538 
ö_addr
 
__group
, 
uöt32_t
 *
__fmode
,

539 
uöt32_t
 *
__num§c
, 
ö_addr
 *
__¶i°
)

540 
__THROW
;

543 
	$£tùv4sour˚fûãr
 (
__s
, 
ö_addr
 
__öãrÁ˚_addr
,

544 
ö_addr
 
__group
, 
uöt32_t
 
__fmode
,

545 
uöt32_t
 
__num§c
,

546 
__c⁄°
 
ö_addr
 *
__¶i°
)

547 
__THROW
;

551 
	$gësour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

552 
__c⁄°
 
sockaddr
 *
__group
,

553 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 *
__fmode
,

554 
uöt32_t
 *
__num§c
,

555 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

558 
	$£tsour˚fûãr
 (
__s
, 
uöt32_t
 
__öãrÁ˚_addr
,

559 
__c⁄°
 
sockaddr
 *
__group
,

560 
sockÀn_t
 
__grou∂í
, 
uöt32_t
 
__fmode
,

561 
uöt32_t
 
__num§c
,

562 
__c⁄°
 
sockaddr_°‹age
 *
__¶i°
Ë
__THROW
;

565 
__END_DECLS


	@/usr/include/pwd.h

23 #i‚def 
_PWD_H


24 
	#_PWD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 
	#__√ed_size_t


	)

33 
	~<°ddef.h
>

35 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


38 #i‚de‡
__gid_t_deföed


39 
__gid_t
 
	tgid_t
;

40 
	#__gid_t_deföed


	)

43 #i‚de‡
__uid_t_deföed


44 
__uid_t
 
	tuid_t
;

45 
	#__uid_t_deföed


	)

50 
	s∑sswd


52 *
	mpw_«me
;

53 *
	mpw_∑sswd
;

54 
__uid_t
 
	mpw_uid
;

55 
__gid_t
 
	mpw_gid
;

56 *
	mpw_gecos
;

57 *
	mpw_dú
;

58 *
	mpw_shñl
;

62 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_GNU


63 
	#__√ed_FILE


	)

64 
	~<°dio.h
>

68 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


73 
£çwít
 ();

79 
ídpwít
 ();

85 
∑sswd
 *
gëpwít
 ();

88 #ifdef 
__USE_SVID


95 
∑sswd
 *
fgëpwít
 (
FILE
 *
__°ªam
);

103 
puçwít
 (
__c⁄°
 
∑sswd
 *
__ª°ri˘
 
__p
,

104 
FILE
 *
__ª°ri˘
 
__f
);

111 
∑sswd
 *
gëpwuid
 (
__uid_t
 
__uid
);

117 
∑sswd
 *
gëpw«m
 (
__c⁄°
 *
__«me
);

119 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


121 #ifde‡
__USE_MISC


124 
	#NSS_BUFLEN_PASSWD
 1024

	)

135 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


140 
gëpwít_r
 (
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

141 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

142 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

145 
gëpwuid_r
 (
__uid_t
 
__uid
,

146 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

147 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

148 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

150 
gëpw«m_r
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

151 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

152 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

153 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

156 #ifdef 
__USE_SVID


164 
fgëpwít_r
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

165 
∑sswd
 *
__ª°ri˘
 
__ªsu…buf
,

166 *
__ª°ri˘
 
__buf„r
, 
size_t
 
__buÊí
,

167 
∑sswd
 **
__ª°ri˘
 
__ªsu…
);

172 #ifde‡
__USE_GNU


181 
gëpw
 (
__uid_t
 
__uid
, *
__buf„r
);

184 
	g__END_DECLS


	@/usr/include/signal.h

23 #i‚def 
_SIGNAL_H


25 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


26 
	#_SIGNAL_H


	)

29 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


33 
	~<bôs/sig£t.h
>

37 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


38 #i‚de‡
__sig_©omic_t_deföed


39 
	#__sig_©omic_t_deföed


	)

40 
__BEGIN_NAMESPACE_STD


41 
__sig_©omic_t
 
	tsig_©omic_t
;

42 
	g__END_NAMESPACE_STD


44 #unde‡
__√ed_sig_©omic_t


47 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

48 #i‚de‡
__sig£t_t_deföed


49 
	#__sig£t_t_deföed


	)

50 
__sig£t_t
 
	tsig£t_t
;

52 #unde‡
__√ed_sig£t_t


55 #ifde‡
_SIGNAL_H


57 
	~<bôs/ty≥s.h
>

58 
	~<bôs/signum.h
>

60 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


61 #i‚de‡
__pid_t_deföed


62 
__pid_t
 
	tpid_t
;

63 
	#__pid_t_deföed


	)

65 #ifde‡
__USE_XOPEN


67 #i‚de‡
__uid_t_deföed


68 
__uid_t
 
	tuid_t
;

69 
	#__uid_t_deföed


	)

73 #ifde‡
__USE_POSIX199309


75 
	#__√ed_time•ec


	)

76 
	~<time.h
>

79 
	~<bôs/sigöfo.h
>

84 (*
	t__sigh™dÀr_t
) ();

89 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

90 
__THROW
;

91 #ifde‡
__USE_GNU


92 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

93 
__THROW
;

99 
__BEGIN_NAMESPACE_STD


100 #ifde‡
__USE_BSD


101 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

102 
__THROW
;

105 #ifde‡
__REDIRECT_NTH


106 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

107 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

108 
__sysv_sig«l
);

110 
	#sig«l
 
__sysv_sig«l


	)

113 
__END_NAMESPACE_STD


115 #ifde‡
__USE_XOPEN


118 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

119 
__THROW
;

125 #ifde‡
__USE_POSIX


126 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

129 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


133 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

136 
__BEGIN_NAMESPACE_STD


138 
	$øi£
 (
__sig
Ë
__THROW
;

139 
__END_NAMESPACE_STD


141 #ifde‡
__USE_SVID


143 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

144 
__THROW
;

145 
	$gsig«l
 (
__sig
Ë
__THROW
;

148 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


150 
	`psig«l
 (
__sig
, 
__c⁄°
 *
__s
);

153 #ifde‡
__USE_XOPEN2K


155 
	`psigöfo
 (
__c⁄°
 
sigöfo_t
 *
__pöfo
, __c⁄° *
__s
);

168 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

170 #ifde‡
__FAVOR_BSD


173 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

175 #ifde‡
__USE_XOPEN


176 #ifde‡
__GNUC__


177 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

180 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

186 #ifde‡
__USE_BSD


193 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

196 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

199 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

202 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

206 #ifde‡
__USE_MISC


207 
	#NSIG
 
_NSIG


	)

210 #ifde‡
__USE_GNU


211 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

215 #ifde‡
__USE_BSD


216 
__sigh™dÀr_t
 
	tsig_t
;

219 #ifde‡
__USE_POSIX


222 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

225 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

231 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

234 
	$sigismembî
 (
__c⁄°
 
sig£t_t
 *
__£t
, 
__signo
)

235 
__THROW
 
	`__n⁄nuŒ
 ((1));

237 #ifde‡
__USE_GNU


239 
	$sigi£m±y£t
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

242 
	$sig™d£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

243 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

246 
	$sig‹£t
 (
sig£t_t
 *
__£t
, 
__c⁄°
 sig£t_à*
__À·
,

247 
__c⁄°
 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

252 
	~<bôs/siga˘i⁄.h
>

255 
	$sig¥ocmask
 (
__how
, 
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

256 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

263 
	$sigsu•íd
 (
__c⁄°
 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

266 
	$siga˘i⁄
 (
__sig
, 
__c⁄°
 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

267 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

270 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

277 
	$sigwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

278 
	`__n⁄nuŒ
 ((1, 2));

280 #ifde‡
__USE_POSIX199309


285 
	$sigwaôöfo
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

286 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

293 
	$sigtimedwaô
 (
__c⁄°
 
sig£t_t
 *
__ª°ri˘
 
__£t
,

294 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

295 
__c⁄°
 
time•ec
 *
__ª°ri˘
 
__timeout
)

296 
	`__n⁄nuŒ
 ((1));

300 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, 
__c⁄°
 
sigvÆ
 
__vÆ
)

301 
__THROW
;

306 #ifde‡
__USE_BSD


310 
__c⁄°
 *__c⁄° 
_sys_sigli°
[
_NSIG
];

311 
__c⁄°
 *__c⁄° 
sys_sigli°
[
_NSIG
];

314 
	ssigvec


316 
__sigh™dÀr_t
 
sv_h™dÀr
;

317 
sv_mask
;

319 
sv_Êags
;

320 
	#sv_⁄°ack
 
sv_Êags


	)

324 
	#SV_ONSTACK
 (1 << 0)

	)

325 
	#SV_INTERRUPT
 (1 << 1)

	)

326 
	#SV_RESETHAND
 (1 << 2)

	)

334 
	$sigvec
 (
__sig
, 
__c⁄°
 
sigvec
 *
__vec
,

335 
sigvec
 *
__ovec
Ë
__THROW
;

339 
	~<bôs/sigc⁄ãxt.h
>

342 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

347 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


348 
	#__√ed_size_t


	)

349 
	~<°ddef.h
>

354 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

356 
	~<bôs/sig°ack.h
>

357 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


359 
	~<sys/uc⁄ãxt.h
>

365 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

366 
__THROW
 
__©åibuã_dïªˇãd__
;

370 
	$sigÆt°ack
 (
__c⁄°
 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

371 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

375 #ifde‡
__USE_XOPEN_EXTENDED


379 
	$sighﬁd
 (
__sig
Ë
__THROW
;

382 
	$sigªl£
 (
__sig
Ë
__THROW
;

385 
	$sigign‹e
 (
__sig
Ë
__THROW
;

388 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

391 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


394 
	~<bôs/±hªadty≥s.h
>

395 
	~<bôs/sigthªad.h
>

402 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

404 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

408 
__END_DECLS


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

88 #ifde‡
__USE_XOPEN2K8


89 #i‚de‡
__off_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__off_t
 
	toff_t
;

93 
__off64_t
 
	toff_t
;

95 
	#__off_t_deföed


	)

97 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


98 
__off64_t
 
	toff64_t
;

99 
	#__off64_t_deföed


	)

102 #i‚de‡
__ssize_t_deföed


103 
__ssize_t
 
	tssize_t
;

104 
	#__ssize_t_deföed


	)

109 
__BEGIN_NAMESPACE_STD


110 #i‚de‡
__USE_FILE_OFFSET64


111 
_G_Âos_t
 
	tÂos_t
;

113 
_G_Âos64_t
 
	tÂos_t
;

115 
__END_NAMESPACE_STD


116 #ifde‡
__USE_LARGEFILE64


117 
_G_Âos64_t
 
	tÂos64_t
;

121 
	#_IOFBF
 0

	)

122 
	#_IOLBF
 1

	)

123 
	#_IONBF
 2

	)

127 #i‚de‡
BUFSIZ


128 
	#BUFSIZ
 
_IO_BUFSIZ


	)

134 #i‚de‡
EOF


135 
	#EOF
 (-1)

	)

141 
	#SEEK_SET
 0

	)

142 
	#SEEK_CUR
 1

	)

143 
	#SEEK_END
 2

	)

146 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


148 
	#P_tmpdú
 "/tmp"

	)

161 
	~<bôs/°dio_lim.h
>

165 
_IO_FILE
 *
°dö
;

166 
_IO_FILE
 *
°dout
;

167 
_IO_FILE
 *
°dîr
;

169 
	#°dö
 
°dö


	)

170 
	#°dout
 
°dout


	)

171 
	#°dîr
 
°dîr


	)

173 
__BEGIN_NAMESPACE_STD


175 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

177 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

178 
__END_NAMESPACE_STD


180 #ifde‡
__USE_ATFILE


182 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

183 
__c⁄°
 *
__√w
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


191 #i‚de‡
__USE_FILE_OFFSET64


192 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

194 #ifde‡
__REDIRECT


195 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

197 
	#tmpfûe
 
tmpfûe64


	)

201 #ifde‡
__USE_LARGEFILE64


202 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

206 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

207 
__END_NAMESPACE_STD


209 #ifde‡
__USE_MISC


212 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

216 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


224 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

225 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

229 
__BEGIN_NAMESPACE_STD


234 
	`f˛o£
 (
FILE
 *
__°ªam
);

239 
	`fÊush
 (
FILE
 *
__°ªam
);

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_MISC


249 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

252 #ifde‡
__USE_GNU


259 
	`f˛o£Æl
 ();

263 
__BEGIN_NAMESPACE_STD


264 #i‚de‡
__USE_FILE_OFFSET64


269 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

270 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

275 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

276 
__c⁄°
 *
__ª°ri˘
 
__modes
,

277 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

279 #ifde‡
__REDIRECT


280 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

281 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

282 
__wur
;

283 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

284 
__c⁄°
 *
__ª°ri˘
 
__modes
,

285 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

286 
__wur
;

288 
	#f›í
 
f›í64


	)

289 
	#‰e›í
 
‰e›í64


	)

292 
__END_NAMESPACE_STD


293 #ifde‡
__USE_LARGEFILE64


294 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

295 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

296 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

297 
__c⁄°
 *
__ª°ri˘
 
__modes
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

301 #ifdef 
__USE_POSIX


303 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

306 #ifdef 
__USE_GNU


309 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

310 
__c⁄°
 *
__ª°ri˘
 
__modes
,

311 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

314 #ifde‡
__USE_XOPEN2K8


316 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

317 
__THROW
 
__wur
;

322 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

326 
__BEGIN_NAMESPACE_STD


329 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

333 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

334 
__modes
, 
size_t
 
__n
Ë
__THROW
;

335 
__END_NAMESPACE_STD


337 #ifdef 
__USE_BSD


340 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

341 
size_t
 
__size
Ë
__THROW
;

344 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

348 
__BEGIN_NAMESPACE_STD


353 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

354 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

359 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

361 
	$•rötf
 (*
__ª°ri˘
 
__s
,

362 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

368 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

369 
_G_va_li°
 
__¨g
);

374 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

376 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

377 
_G_va_li°
 
__¨g
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


381 
__BEGIN_NAMESPACE_C99


383 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

384 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

385 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

387 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

388 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

389 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

390 
__END_NAMESPACE_C99


393 #ifde‡
__USE_GNU


396 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

397 
_G_va_li°
 
__¨g
)

398 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

399 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

400 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

401 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

402 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

403 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

404 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

407 #ifde‡
__USE_XOPEN2K8


414 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

415 
_G_va_li°
 
__¨g
)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

417 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

418 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

422 
__BEGIN_NAMESPACE_STD


427 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

428 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

435 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

436 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

438 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

439 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

440 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

441 #ifde‡
__REDIRECT


445 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

446 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_fsˇnf
Ë
__wur
;

448 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

449 
__isoc99_sˇnf
Ë
__wur
;

450 
	`__REDIRECT_NTH
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

451 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

452 
__isoc99_ssˇnf
);

454 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

455 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

456 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

457 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

458 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

459 
	#fsˇnf
 
__isoc99_fsˇnf


	)

460 
	#sˇnf
 
__isoc99_sˇnf


	)

461 
	#ssˇnf
 
__isoc99_ssˇnf


	)

465 
__END_NAMESPACE_STD


467 #ifdef 
__USE_ISOC99


468 
__BEGIN_NAMESPACE_C99


473 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

474 
_G_va_li°
 
__¨g
)

475 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

481 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

482 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

485 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

486 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

487 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

489 #i‡!
deföed
 
__USE_GNU
 \

490 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

491 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

492 #ifde‡
__REDIRECT


496 
	`__REDIRECT
 (
vfsˇnf
,

497 (
FILE
 *
__ª°ri˘
 
__s
,

498 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

499 
__isoc99_vfsˇnf
)

500 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

501 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

502 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

503 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

504 
	`__REDIRECT_NTH
 (
vssˇnf
,

505 (
__c⁄°
 *
__ª°ri˘
 
__s
,

506 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

507 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

508 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

510 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

511 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

514 
_G_va_li°
 
__¨g
Ë
__wur
;

515 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

516 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

517 
_G_va_li°
 
__¨g
Ë
__THROW
;

518 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

519 
	#vsˇnf
 
__isoc99_vsˇnf


	)

520 
	#vssˇnf
 
__isoc99_vssˇnf


	)

524 
__END_NAMESPACE_C99


528 
__BEGIN_NAMESPACE_STD


533 
	`fgëc
 (
FILE
 *
__°ªam
);

534 
	`gëc
 (
FILE
 *
__°ªam
);

540 
	`gëch¨
 ();

541 
__END_NAMESPACE_STD


545 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

547 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


552 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

553 
	`gëch¨_u∆ocked
 ();

556 #ifde‡
__USE_MISC


563 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

567 
__BEGIN_NAMESPACE_STD


575 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

576 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

582 
	`putch¨
 (
__c
);

583 
__END_NAMESPACE_STD


587 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

589 #ifde‡
__USE_MISC


596 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

599 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


604 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

605 
	`putch¨_u∆ocked
 (
__c
);

609 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

610 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

612 
	`gëw
 (
FILE
 *
__°ªam
);

615 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

619 
__BEGIN_NAMESPACE_STD


624 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

625 
__wur
;

632 *
	$gës
 (*
__s
Ë
__wur
;

633 
__END_NAMESPACE_STD


635 #ifde‡
__USE_GNU


642 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

643 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

647 #ifdef 
__USE_XOPEN2K8


658 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

659 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

660 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

661 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

662 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

663 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

671 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

672 
size_t
 *
__ª°ri˘
 
__n
,

673 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

677 
__BEGIN_NAMESPACE_STD


682 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

688 
	`puts
 (
__c⁄°
 *
__s
);

695 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

702 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

703 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

708 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

709 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

710 
__END_NAMESPACE_STD


712 #ifde‡
__USE_GNU


719 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

720 
FILE
 *
__ª°ri˘
 
__°ªam
);

723 #ifde‡
__USE_MISC


730 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

731 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

732 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

733 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

737 
__BEGIN_NAMESPACE_STD


742 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

747 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

752 
	`ªwöd
 (
FILE
 *
__°ªam
);

753 
__END_NAMESPACE_STD


760 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


761 #i‚de‡
__USE_FILE_OFFSET64


766 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

771 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

773 #ifde‡
__REDIRECT


774 
	`__REDIRECT
 (
f£eko
,

775 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

776 
f£eko64
);

777 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

779 
	#f£eko
 
f£eko64


	)

780 
	#·ñlo
 
·ñlo64


	)

785 
__BEGIN_NAMESPACE_STD


786 #i‚de‡
__USE_FILE_OFFSET64


791 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

796 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

798 #ifde‡
__REDIRECT


799 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

800 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

801 
	`__REDIRECT
 (
f£ços
,

802 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

804 
	#fgëpos
 
fgëpos64


	)

805 
	#f£ços
 
f£ços64


	)

808 
__END_NAMESPACE_STD


810 #ifde‡
__USE_LARGEFILE64


811 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

812 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

813 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

814 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

817 
__BEGIN_NAMESPACE_STD


819 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

821 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

823 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

824 
__END_NAMESPACE_STD


826 #ifde‡
__USE_MISC


828 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

829 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 
__BEGIN_NAMESPACE_STD


839 
	`≥º‹
 (
__c⁄°
 *
__s
);

840 
__END_NAMESPACE_STD


846 
	~<bôs/sys_îæi°.h
>

849 #ifdef 
__USE_POSIX


851 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

854 #ifde‡
__USE_MISC


856 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

860 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

861 
deföed
 
__USE_MISC
)

866 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

872 
	`p˛o£
 (
FILE
 *
__°ªam
);

876 #ifdef 
__USE_POSIX


878 *
	$˘îmid
 (*
__s
Ë
__THROW
;

882 #ifde‡
__USE_XOPEN


884 *
	`cu£rid
 (*
__s
);

888 #ifdef 
__USE_GNU


889 
ob°ack
;

892 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

893 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

894 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

895 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

896 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

897 
_G_va_li°
 
__¨gs
)

898 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

902 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


906 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

910 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

913 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

916 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


920 
	#__√ed_gë›t


	)

921 
	~<gë›t.h
>

926 #ifde‡
__USE_EXTERN_INLINES


927 
	~<bôs/°dio.h
>

929 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


930 
	~<bôs/°dio2.h
>

932 #ifde‡
__LDBL_COMPAT


933 
	~<bôs/°dio-ldbl.h
>

936 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

501 || 
deföed
 
__USE_BSD


503 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

506 #ifde‡
__USE_XOPEN2K


508 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #ifde‡
__USE_GNU


524 #ifde‡
__˝lu•lus


525 "C++" 
	`©_quick_exô
 ((*
__func
) ())

526 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

528 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
__END_NAMESPACE_STD


533 #ifdef 
__USE_MISC


536 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

537 
__THROW
 
	`__n⁄nuŒ
 ((1));

540 
__BEGIN_NAMESPACE_STD


544 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

546 #ifde‡
__USE_GNU


552 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
__END_NAMESPACE_STD


556 #ifde‡
__USE_ISOC99


557 
__BEGIN_NAMESPACE_C99


560 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

561 
__END_NAMESPACE_C99


565 
__BEGIN_NAMESPACE_STD


567 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

568 
__END_NAMESPACE_STD


572 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

573 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

575 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


579 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


585 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

586 
__THROW
 
	`__n⁄nuŒ
 ((2));

589 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

592 #ifdef 
__USE_MISC


596 
	$˛óªnv
 (Ë
__THROW
;

600 #i‡
deföed
 
__USE_MISC
 \

601 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

761 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

762 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

763 #ifde‡
__USE_GNU


764 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

766 
	`__n⁄nuŒ
 ((1, 4));

771 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

773 
__END_NAMESPACE_STD


775 #ifde‡
__USE_ISOC99


776 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

777 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

781 
__BEGIN_NAMESPACE_STD


785 
div_t
 
	$div
 (
__numî
, 
__díom
)

786 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

788 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

789 
__END_NAMESPACE_STD


791 #ifde‡
__USE_ISOC99


792 
__BEGIN_NAMESPACE_C99


793 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

794 
__díom
)

795 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

796 
__END_NAMESPACE_C99


800 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

801 || 
deföed
 
__USE_SVID


808 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

815 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

820 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

821 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

824 #ifde‡
__USE_MISC


826 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

827 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

828 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

829 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

833 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

838 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

839 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

840 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

841 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

846 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

847 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

848 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

857 
__BEGIN_NAMESPACE_STD


860 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

863 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

864 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

867 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

871 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

872 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

874 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

875 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

876 
__THROW
;

877 
__END_NAMESPACE_STD


880 #ifde‡
__USE_SVID


885 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


896 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

897 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

898 **
__ª°ri˘
 
__vÆuï
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

903 #ifde‡
__USE_XOPEN


905 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

911 #ifde‡
__USE_XOPEN2KXSI


913 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

916 #ifde‡
__USE_XOPEN


921 
	$gø¡±
 (
__fd
Ë
__THROW
;

925 
	$u∆ock±
 (
__fd
Ë
__THROW
;

930 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

933 #ifde‡
__USE_GNU


937 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

938 
__THROW
 
	`__n⁄nuŒ
 ((2));

941 
	`gë±
 ();

944 #ifde‡
__USE_BSD


948 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

24 #i‚def 
_STRING_H


25 
	#_STRING_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 
__BEGIN_NAMESPACE_STD


44 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

45 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

46 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

50 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

51 
__END_NAMESPACE_STD


56 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


57 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

58 
__c
, 
size_t
 
__n
)

59 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

63 
__BEGIN_NAMESPACE_STD


65 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

68 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

72 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


75 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

76 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

80 #ifde‡
__OPTIMIZE__


81 
__exã∫_Æways_ölöe
 *

82 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


84  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

87 
__exã∫_Æways_ölöe
 
__c⁄°
 *

88 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


90  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

93 
	}
}

95 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

96 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

98 
__END_NAMESPACE_STD


100 #ifde‡
__USE_GNU


103 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


104 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

105 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

107 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

110 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

126 
__BEGIN_NAMESPACE_STD


128 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

131 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

132 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

133 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

139 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

140 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

147 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

153 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

154 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

155 
__THROW
 
	`__n⁄nuŒ
 ((2));

156 
__END_NAMESPACE_STD


158 #ifde‡
__USE_XOPEN2K8


162 
	~<xloˇÀ.h
>

165 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

166 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

168 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

169 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

172 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

173 || 
deföed
 
__USE_XOPEN2K8


175 *
	$°rdup
 (
__c⁄°
 *
__s
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

182 #i‡
deföed
 
__USE_XOPEN2K8


183 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

184 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

187 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


189 
	#°rdu∑
(
s
) \

190 (
__exãnsi⁄__
 \

192 
__c⁄°
 *
__ﬁd
 = (
s
); \

193 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

194 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

195 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

196 
	}
}))

	)

199 
	#°∫du∑
(
s
, 
n
) \

200 (
__exãnsi⁄__
 \

202 
__c⁄°
 *
__ﬁd
 = (
s
); \

203 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

204 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

205 
__√w
[
__Àn
] = '\0'; \

206 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

207 }))

	)

210 
	g__BEGIN_NAMESPACE_STD


212 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


215 *
°rchr
 (*
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

218 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

220 #ifde‡
__OPTIMIZE__


221 
__exã∫_Æways_ölöe
 *

222 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


224  
__buûtö_°rchr
 (
__s
, 
__c
);

227 
__exã∫_Æways_ölöe
 
__c⁄°
 *

228 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


230  
__buûtö_°rchr
 (
__s
, 
__c
);

235 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

236 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


242 *
	`°ºchr
 (*
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

245 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__OPTIMIZE__


248 
__exã∫_Æways_ölöe
 *

249 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


251  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

254 
__exã∫_Æways_ölöe
 
__c⁄°
 *

255 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


257  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

260 
	}
}

262 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

263 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_GNU


270 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


271 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

274 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

276 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

281 
__BEGIN_NAMESPACE_STD


284 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

289 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

291 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


294 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

297 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

299 #ifde‡
__OPTIMIZE__


300 
__exã∫_Æways_ölöe
 *

301 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


303  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

306 
__exã∫_Æways_ölöe
 
__c⁄°
 *

307 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


309  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

312 
	}
}

314 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

318 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


321 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

322 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

324 
__c⁄°
 *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 
__c⁄°
 *

335 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

370 
__c⁄°
 *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 
__c⁄°
 *

482 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 
__c⁄°
 *

510 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 #ifde‡
__GNUC__


530 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

531 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

536 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

541 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

544 #ifdef 
__USE_GNU


547 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

548 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

551 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

552 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

556 #ifdef 
__USE_BSD


559 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

560 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 #ifdef 
__USE_XOPEN2K8


566 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

569 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

580 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifdef 
__USE_GNU


586 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

587 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

590 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

595 #i‚de‡
ba£«me


600 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


601 "C++" *
	$ba£«me
 (*
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

604 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

606 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

612 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

613 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

614 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


634 
	~<bôs/°rög.h
>

637 
	~<bôs/°rög2.h
>

640 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


642 
	~<bôs/°rög3.h
>

646 
__END_DECLS


	@/usr/include/syslog.h

1 
	~<sys/sy¶og.h
>

	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


33 #ifde‡
__USE_XOPEN2K8


35 
	#_POSIX_VERSION
 200809L

	)

36 #ñi‡
deföed
 
__USE_XOPEN2K


38 
	#_POSIX_VERSION
 200112L

	)

39 #ñi‡
deföed
 
__USE_POSIX199506


41 
	#_POSIX_VERSION
 199506L

	)

42 #ñi‡
deföed
 
__USE_POSIX199309


44 
	#_POSIX_VERSION
 199309L

	)

47 
	#_POSIX_VERSION
 199009L

	)

53 #ifde‡
__USE_XOPEN2K8


54 
	#__POSIX2_THIS_VERSION
 200809L

	)

56 #ñi‡
deföed
 
__USE_XOPEN2K


58 
	#__POSIX2_THIS_VERSION
 200112L

	)

59 #ñi‡
deföed
 
__USE_POSIX199506


61 
	#__POSIX2_THIS_VERSION
 199506L

	)

64 
	#__POSIX2_THIS_VERSION
 199209L

	)

68 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

72 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

76 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

80 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

84 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

87 #ifde‡
__USE_XOPEN2K8


88 
	#_XOPEN_VERSION
 700

	)

89 #ñi‡
deföed
 
__USE_XOPEN2K


90 
	#_XOPEN_VERSION
 600

	)

91 #ñi‡
deföed
 
__USE_UNIX98


92 
	#_XOPEN_VERSION
 500

	)

94 
	#_XOPEN_VERSION
 4

	)

98 
	#_XOPEN_XCU_VERSION
 4

	)

101 
	#_XOPEN_XPG2
 1

	)

102 
	#_XOPEN_XPG3
 1

	)

103 
	#_XOPEN_XPG4
 1

	)

106 
	#_XOPEN_UNIX
 1

	)

109 
	#_XOPEN_CRYPT
 1

	)

113 
	#_XOPEN_ENH_I18N
 1

	)

116 
	#_XOPEN_LEGACY
 1

	)

203 
	~<bôs/posix_›t.h
>

206 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


207 
	~<bôs/ívú⁄míts.h
>

211 
	#STDIN_FILENO
 0

	)

212 
	#STDOUT_FILENO
 1

	)

213 
	#STDERR_FILENO
 2

	)

218 
	~<bôs/ty≥s.h
>

220 #i‚def 
__ssize_t_deföed


221 
__ssize_t
 
	tssize_t
;

222 
	#__ssize_t_deföed


	)

225 
	#__√ed_size_t


	)

226 
	#__√ed_NULL


	)

227 
	~<°ddef.h
>

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


232 #i‚de‡
__gid_t_deföed


233 
__gid_t
 
	tgid_t
;

234 
	#__gid_t_deföed


	)

237 #i‚de‡
__uid_t_deföed


238 
__uid_t
 
	tuid_t
;

239 
	#__uid_t_deföed


	)

242 #i‚de‡
__off_t_deföed


243 #i‚de‡
__USE_FILE_OFFSET64


244 
__off_t
 
	toff_t
;

246 
__off64_t
 
	toff_t
;

248 
	#__off_t_deföed


	)

250 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


251 
__off64_t
 
	toff64_t
;

252 
	#__off64_t_deföed


	)

255 #i‚de‡
__u£c⁄ds_t_deföed


256 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

257 
	#__u£c⁄ds_t_deföed


	)

260 #i‚de‡
__pid_t_deföed


261 
__pid_t
 
	tpid_t
;

262 
	#__pid_t_deföed


	)

266 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


267 #i‚de‡
__öçå_t_deföed


268 
__öçå_t
 
	töçå_t
;

269 
	#__öçå_t_deföed


	)

273 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


274 #i‚de‡
__sockÀn_t_deföed


275 
__sockÀn_t
 
	tsockÀn_t
;

276 
	#__sockÀn_t_deföed


	)

282 
	#R_OK
 4

	)

283 
	#W_OK
 2

	)

284 
	#X_OK
 1

	)

285 
	#F_OK
 0

	)

288 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_GNU


293 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

301 #ifde‡
__USE_ATFILE


305 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 #i‚def 
_STDIO_H


312 
	#SEEK_SET
 0

	)

313 
	#SEEK_CUR
 1

	)

314 
	#SEEK_END
 2

	)

317 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


319 
	#L_SET
 
SEEK_SET


	)

320 
	#L_INCR
 
SEEK_CUR


	)

321 
	#L_XTND
 
SEEK_END


	)

330 #i‚de‡
__USE_FILE_OFFSET64


331 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

333 #ifde‡
__REDIRECT_NTH


334 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

335 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

336 
l£ek64
);

338 
	#l£ek
 
l£ek64


	)

341 #ifde‡
__USE_LARGEFILE64


342 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

343 
__THROW
;

350 
	`˛o£
 (
__fd
);

357 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

363 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

365 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


366 #i‚de‡
__USE_FILE_OFFSET64


373 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

374 
__off_t
 
__off£t
Ë
__wur
;

381 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

382 
__off_t
 
__off£t
Ë
__wur
;

384 #ifde‡
__REDIRECT


385 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

386 
__off64_t
 
__off£t
),

387 
¥ód64
Ë
__wur
;

388 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

389 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

390 
pwrôe64
Ë
__wur
;

392 
	#¥ód
 
¥ód64


	)

393 
	#pwrôe
 
pwrôe64


	)

397 #ifde‡
__USE_LARGEFILE64


401 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

402 
__off64_t
 
__off£t
Ë
__wur
;

405 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

406 
__off64_t
 
__off£t
Ë
__wur
;

414 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

416 #ifde‡
__USE_GNU


419 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

429 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

441 
	`¶ìp
 (
__£c⁄ds
);

443 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

444 || 
deföed
 
__USE_BSD


449 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

450 
__THROW
;

457 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

466 
	`∑u£
 ();

470 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

471 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

473 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


475 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

480 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

481 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

485 #ifde‡
__USE_ATFILE


488 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

489 
__gid_t
 
__group
, 
__Êag
)

490 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

494 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

496 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


498 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

508 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

510 #ifdef 
__USE_GNU


514 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

517 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

518 || 
deföed
 
__USE_BSD


522 *
	$gëwd
 (*
__buf
)

523 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

528 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

531 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

533 #ifde‡
__USE_GNU


536 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

540 **
__ívú⁄
;

541 #ifde‡
__USE_GNU


542 **
ívú⁄
;

548 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

549 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

551 #ifde‡
__USE_XOPEN2K8


554 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

555 
__THROW
 
	`__n⁄nuŒ
 ((2));

560 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

565 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

566 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

570 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

571 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

575 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

576 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

581 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

582 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifde‡
__USE_GNU


587 
	$execv≥
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[],

588 *
__c⁄°
 
__ívp
[])

589 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

593 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


595 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

600 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

606 
	~<bôs/c⁄‚ame.h
>

609 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

610 
__THROW
 
	`__n⁄nuŒ
 ((1));

613 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

616 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

618 #ifdef 
__USE_POSIX2


620 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

625 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

628 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

632 #i‚de‡
__FAVOR_BSD


633 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

635 #ifde‡
__REDIRECT_NTH


636 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

638 
	#gëpgΩ
 
__gëpgid


	)

643 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

644 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


645 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

652 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

654 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


665 #i‚de‡
__FAVOR_BSD


669 
	$£çgΩ
 (Ë
__THROW
;

674 #ifde‡
__REDIRECT_NTH


675 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

677 
	#£çgΩ
 
£çgid


	)

686 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

688 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


690 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

694 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

697 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

700 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

703 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

708 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

710 #ifdef 
__USE_GNU


712 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

719 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
;

721 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


724 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
;

727 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


729 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
;

736 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
;

738 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


741 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
;

744 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


746 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
;

749 #ifde‡
__USE_GNU


752 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

753 
__THROW
;

757 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

758 
__THROW
;

762 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

763 
__THROW
;

767 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

768 
__THROW
;

775 
__pid_t
 
	$f‹k
 (Ë
__THROW
;

777 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

778 || 
deföed
 
__USE_BSD


783 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

789 *
	$ây«me
 (
__fd
Ë
__THROW
;

793 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

794 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

798 
	$ißây
 (
__fd
Ë
__THROW
;

800 #i‡
deföed
 
__USE_BSD
 \

801 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

804 
	$ây¶Ÿ
 (Ë
__THROW
;

809 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

810 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

812 #ifde‡
__USE_ATFILE


815 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

816 
__c⁄°
 *
__to
, 
__Êags
)

817 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

820 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


822 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

823 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

828 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

829 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

830 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

833 #ifde‡
__USE_ATFILE


835 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

836 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

839 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

840 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

841 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

845 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

847 #ifde‡
__USE_ATFILE


849 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

850 
__THROW
 
	`__n⁄nuŒ
 ((2));

854 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

858 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

861 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

868 *
	`gëlogö
 ();

869 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


876 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

879 #ifdef 
__USE_BSD


881 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

885 #ifdef 
__USE_POSIX2


889 
	#__√ed_gë›t


	)

890 
	~<gë›t.h
>

894 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


898 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

902 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

905 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

906 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

910 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

916 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

917 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

918 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

925 
	$vh™gup
 (Ë
__THROW
;

928 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

936 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

937 
size_t
 
__off£t
, 
__sˇÀ
)

938 
__THROW
 
	`__n⁄nuŒ
 ((1));

944 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

948 *
	$gëu£rshñl
 (Ë
__THROW
;

949 
	$ídu£rshñl
 (Ë
__THROW
;

950 
	$£tu£rshñl
 (Ë
__THROW
;

956 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

960 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

963 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

967 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

971 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


976 
	`fsync
 (
__fd
);

980 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


983 
	`gëho°id
 ();

986 
	$sync
 (Ë
__THROW
;

989 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


992 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

997 
	$gëdèbÀsize
 (Ë
__THROW
;

1003 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1006 #i‚de‡
__USE_FILE_OFFSET64


1007 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

1008 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1010 #ifde‡
__REDIRECT_NTH


1011 
	`__REDIRECT_NTH
 (
åunˇã
,

1012 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

1013 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1015 
	#åunˇã
 
åunˇã64


	)

1018 #ifde‡
__USE_LARGEFILE64


1019 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

1020 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1025 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1028 #i‚de‡
__USE_FILE_OFFSET64


1029 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1031 #ifde‡
__REDIRECT_NTH


1032 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1033 
·runˇã64
Ë
__wur
;

1035 
	#·runˇã
 
·runˇã64


	)

1038 #ifde‡
__USE_LARGEFILE64


1039 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1045 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1046 || 
deföed
 
__USE_MISC


1050 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1056 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1060 #ifde‡
__USE_MISC


1071 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1076 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1088 
	#F_ULOCK
 0

	)

1089 
	#F_LOCK
 1

	)

1090 
	#F_TLOCK
 2

	)

1091 
	#F_TEST
 3

	)

1093 #i‚de‡
__USE_FILE_OFFSET64


1094 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1096 #ifde‡
__REDIRECT


1097 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1098 
lockf64
Ë
__wur
;

1100 
	#lockf
 
lockf64


	)

1103 #ifde‡
__USE_LARGEFILE64


1104 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1109 #ifde‡
__USE_GNU


1114 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1115 (
__exãnsi⁄__
 \

1116 ({ 
__ªsu…
; \

1117 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1118 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1119 
__ªsu…
; 
	}
}))

	)

1122 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1125 
fd©async
 (
__fûdes
);

1131 #ifdef 
__USE_XOPEN


1133 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1138 
	$í¸y±
 (*
__libc_block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1145 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1146 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1152 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


1154 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1159 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1160 
	~<bôs/uni°d.h
>

1163 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

97 #unde‡
__USE_ISOC99


98 #unde‡
__USE_ISOC95


99 #unde‡
__USE_POSIX


100 #unde‡
__USE_POSIX2


101 #unde‡
__USE_POSIX199309


102 #unde‡
__USE_POSIX199506


103 #unde‡
__USE_XOPEN


104 #unde‡
__USE_XOPEN_EXTENDED


105 #unde‡
__USE_UNIX98


106 #unde‡
__USE_XOPEN2K


107 #unde‡
__USE_XOPEN2KXSI


108 #unde‡
__USE_XOPEN2K8


109 #unde‡
__USE_XOPEN2K8XSI


110 #unde‡
__USE_LARGEFILE


111 #unde‡
__USE_LARGEFILE64


112 #unde‡
__USE_FILE_OFFSET64


113 #unde‡
__USE_BSD


114 #unde‡
__USE_SVID


115 #unde‡
__USE_MISC


116 #unde‡
__USE_ATFILE


117 #unde‡
__USE_GNU


118 #unde‡
__USE_REENTRANT


119 #unde‡
__USE_FORTIFY_LEVEL


120 #unde‡
__FAVOR_BSD


121 #unde‡
__KERNEL_STRICT_NAMES


125 #i‚de‡
_LOOSE_KERNEL_NAMES


126 
	#__KERNEL_STRICT_NAMES


	)

130 
	#__USE_ANSI
 1

	)

139 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


140 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

141 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

143 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

148 #i‡
deföed
 
_BSD_SOURCE
 && \

149 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

150 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

151 
	#__FAVOR_BSD
 1

	)

155 #ifde‡
_GNU_SOURCE


156 #unde‡
_ISOC95_SOURCE


157 
	#_ISOC95_SOURCE
 1

	)

158 #unde‡
_ISOC99_SOURCE


159 
	#_ISOC99_SOURCE
 1

	)

160 #unde‡
_POSIX_SOURCE


161 
	#_POSIX_SOURCE
 1

	)

162 #unde‡
_POSIX_C_SOURCE


163 
	#_POSIX_C_SOURCE
 200809L

	)

164 #unde‡
_XOPEN_SOURCE


165 
	#_XOPEN_SOURCE
 700

	)

166 #unde‡
_XOPEN_SOURCE_EXTENDED


167 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

168 #unde‡
_LARGEFILE64_SOURCE


169 
	#_LARGEFILE64_SOURCE
 1

	)

170 #unde‡
_BSD_SOURCE


171 
	#_BSD_SOURCE
 1

	)

172 #unde‡
_SVID_SOURCE


173 
	#_SVID_SOURCE
 1

	)

174 #unde‡
_ATFILE_SOURCE


175 
	#_ATFILE_SOURCE
 1

	)

180 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

181 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

182 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

183 
	#_BSD_SOURCE
 1

	)

184 
	#_SVID_SOURCE
 1

	)

191 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

192 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

193 
	#__USE_ISOC99
 1

	)

197 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

198 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

199 
	#__USE_ISOC95
 1

	)

204 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

205 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

206 
	#_POSIX_SOURCE
 1

	)

207 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

208 
	#_POSIX_C_SOURCE
 2

	)

209 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

210 
	#_POSIX_C_SOURCE
 199506L

	)

211 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

212 
	#_POSIX_C_SOURCE
 200112L

	)

214 
	#_POSIX_C_SOURCE
 200809L

	)

216 
	#__USE_POSIX_IMPLICITLY
 1

	)

219 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


220 
	#__USE_POSIX
 1

	)

223 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


224 
	#__USE_POSIX2
 1

	)

227 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

228 
	#__USE_POSIX199309
 1

	)

231 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

232 
	#__USE_POSIX199506
 1

	)

235 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

236 
	#__USE_XOPEN2K
 1

	)

237 #unde‡
__USE_ISOC95


238 
	#__USE_ISOC95
 1

	)

239 #unde‡
__USE_ISOC99


240 
	#__USE_ISOC99
 1

	)

243 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

244 
	#__USE_XOPEN2K8
 1

	)

245 #unde‡
_ATFILE_SOURCE


246 
	#_ATFILE_SOURCE
 1

	)

249 #ifdef 
_XOPEN_SOURCE


250 
	#__USE_XOPEN
 1

	)

251 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

252 
	#__USE_XOPEN_EXTENDED
 1

	)

253 
	#__USE_UNIX98
 1

	)

254 #unde‡
_LARGEFILE_SOURCE


255 
	#_LARGEFILE_SOURCE
 1

	)

256 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

257 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

258 
	#__USE_XOPEN2K8
 1

	)

259 
	#__USE_XOPEN2K8XSI
 1

	)

261 
	#__USE_XOPEN2K
 1

	)

262 
	#__USE_XOPEN2KXSI
 1

	)

263 #unde‡
__USE_ISOC95


264 
	#__USE_ISOC95
 1

	)

265 #unde‡
__USE_ISOC99


266 
	#__USE_ISOC99
 1

	)

269 #ifde‡
_XOPEN_SOURCE_EXTENDED


270 
	#__USE_XOPEN_EXTENDED
 1

	)

275 #ifde‡
_LARGEFILE_SOURCE


276 
	#__USE_LARGEFILE
 1

	)

279 #ifde‡
_LARGEFILE64_SOURCE


280 
	#__USE_LARGEFILE64
 1

	)

283 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

284 
	#__USE_FILE_OFFSET64
 1

	)

287 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


288 
	#__USE_MISC
 1

	)

291 #ifdef 
_BSD_SOURCE


292 
	#__USE_BSD
 1

	)

295 #ifdef 
_SVID_SOURCE


296 
	#__USE_SVID
 1

	)

299 #ifdef 
_ATFILE_SOURCE


300 
	#__USE_ATFILE
 1

	)

303 #ifdef 
_GNU_SOURCE


304 
	#__USE_GNU
 1

	)

307 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


308 
	#__USE_REENTRANT
 1

	)

311 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

312 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

313 #i‡
_FORTIFY_SOURCE
 > 1

314 
	#__USE_FORTIFY_LEVEL
 2

	)

316 
	#__USE_FORTIFY_LEVEL
 1

	)

319 
	#__USE_FORTIFY_LEVEL
 0

	)

323 
	~<bôs/¥edefs.h
>

326 
	#__STDC_ISO_10646__
 200009L

	)

334 #unde‡
__GNU_LIBRARY__


335 
	#__GNU_LIBRARY__
 6

	)

339 
	#__GLIBC__
 2

	)

340 
	#__GLIBC_MINOR__
 13

	)

342 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

343 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

346 #i‡
deföed
 
__GNUC__
 \

347 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

348 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

349 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

350 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

354 #i‚de‡
__ASSEMBLER__


355 #i‚de‡
_SYS_CDEFS_H


356 
	~<sys/cdefs.h
>

361 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


362 
	#__USE_LARGEFILE
 1

	)

363 
	#__USE_LARGEFILE64
 1

	)

369 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

370 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

371 && 
deföed
 
	g__exã∫_ölöe


372 
	#__USE_EXTERN_INLINES
 1

	)

377 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

378 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

379 && 
deföed
 
	g__exã∫_ölöe


380 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

388 
	~<gnu/°ubs.h
>

	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

151 
	#_IO_SKIPWS
 01

	)

152 
	#_IO_LEFT
 02

	)

153 
	#_IO_RIGHT
 04

	)

154 
	#_IO_INTERNAL
 010

	)

155 
	#_IO_DEC
 020

	)

156 
	#_IO_OCT
 040

	)

157 
	#_IO_HEX
 0100

	)

158 
	#_IO_SHOWBASE
 0200

	)

159 
	#_IO_SHOWPOINT
 0400

	)

160 
	#_IO_UPPERCASE
 01000

	)

161 
	#_IO_SHOWPOS
 02000

	)

162 
	#_IO_SCIENTIFIC
 04000

	)

163 
	#_IO_FIXED
 010000

	)

164 
	#_IO_UNITBUF
 020000

	)

165 
	#_IO_STDIO
 040000

	)

166 
	#_IO_DONT_CLOSE
 0100000

	)

167 
	#_IO_BOOLALPHA
 0200000

	)

170 
_IO_jump_t
; 
	g_IO_FILE
;

173 #ifde‡
_IO_MTSAFE_IO


174 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

175 
	~<bôs/°dio-lock.h
>

180 
	t_IO_lock_t
;

186 
	s_IO_m¨kî
 {

187 
_IO_m¨kî
 *
	m_√xt
;

188 
_IO_FILE
 *
	m_sbuf
;

192 
	m_pos
;

194 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

195 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

196 
	mpublic
:

197 
°ªamm¨kî
(
°ªambuf
 *
sb
);

198 ~
°ªamm¨kî
();

199 
ßvög
(Ë{  
	m_•os
 == -2; }

200 
dñè
(
°ªamm¨kî
&);

201 
dñè
();

206 
	e__codecvt_ªsu…


208 
	m__codecvt_ok
,

209 
	m__codecvt_∑πül
,

210 
	m__codecvt_îr‹
,

211 
	m__codecvt_noc⁄v


214 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


217 
	s_IO_codecvt


219 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

220 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

221 
	m__mb°©e_t
 *,

222 c⁄° 
	mwch¨_t
 *,

223 c⁄° 
	mwch¨_t
 *,

224 c⁄° 
	mwch¨_t
 **, *,

226 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

227 
	m__mb°©e_t
 *, *,

229 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

230 
	m__mb°©e_t
 *,

232 c⁄° **, 
	mwch¨_t
 *,

233 
	mwch¨_t
 *, wchar_t **);

234 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

235 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

236 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

237 c⁄° *, c⁄° *, 
	m_IO_size_t
);

238 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

240 
_IO_ic⁄v_t
 
	m__cd_ö
;

241 
_IO_ic⁄v_t
 
	m__cd_out
;

245 
	s_IO_wide_d©a


247 
wch¨_t
 *
	m_IO_ªad_±r
;

248 
wch¨_t
 *
	m_IO_ªad_íd
;

249 
wch¨_t
 *
	m_IO_ªad_ba£
;

250 
wch¨_t
 *
	m_IO_wrôe_ba£
;

251 
wch¨_t
 *
	m_IO_wrôe_±r
;

252 
wch¨_t
 *
	m_IO_wrôe_íd
;

253 
wch¨_t
 *
	m_IO_buf_ba£
;

254 
wch¨_t
 *
	m_IO_buf_íd
;

256 
wch¨_t
 *
	m_IO_ßve_ba£
;

257 
wch¨_t
 *
	m_IO_backup_ba£
;

259 
wch¨_t
 *
	m_IO_ßve_íd
;

261 
__mb°©e_t
 
	m_IO_°©e
;

262 
__mb°©e_t
 
	m_IO_œ°_°©e
;

263 
_IO_codecvt
 
	m_codecvt
;

265 
wch¨_t
 
	m_sh‹tbuf
[1];

267 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

271 
	s_IO_FILE
 {

272 
	m_Êags
;

273 
	#_IO_fûe_Êags
 
_Êags


	)

277 * 
	m_IO_ªad_±r
;

278 * 
	m_IO_ªad_íd
;

279 * 
	m_IO_ªad_ba£
;

280 * 
	m_IO_wrôe_ba£
;

281 * 
	m_IO_wrôe_±r
;

282 * 
	m_IO_wrôe_íd
;

283 * 
	m_IO_buf_ba£
;

284 * 
	m_IO_buf_íd
;

286 *
	m_IO_ßve_ba£
;

287 *
	m_IO_backup_ba£
;

288 *
	m_IO_ßve_íd
;

290 
_IO_m¨kî
 *
	m_m¨kîs
;

292 
_IO_FILE
 *
	m_chaö
;

294 
	m_fûío
;

296 
	m_blksize
;

298 
	m_Êags2
;

300 
_IO_off_t
 
	m_ﬁd_off£t
;

302 
	#__HAVE_COLUMN


	)

304 
	m_cur_cﬁumn
;

305 sig√d 
	m_vèbÀ_off£t
;

306 
	m_sh‹tbuf
[1];

310 
_IO_lock_t
 *
	m_lock
;

311 #ifde‡
_IO_USE_OLD_IO_FILE


314 
	s_IO_FILE_com∂ëe


316 
_IO_FILE
 
	m_fûe
;

318 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

319 
_IO_off64_t
 
	m_off£t
;

320 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


322 
_IO_codecvt
 *
	m_codecvt
;

323 
_IO_wide_d©a
 *
	m_wide_d©a
;

324 
_IO_FILE
 *
	m_‰ìªs_li°
;

325 *
	m_‰ìªs_buf
;

326 
size_t
 
	m_‰ìªs_size
;

328 *
	m__∑d1
;

329 *
	m__∑d2
;

330 *
	m__∑d3
;

331 *
	m__∑d4
;

332 
size_t
 
	m__∑d5
;

334 
	m_mode
;

336 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

340 #i‚de‡
__˝lu•lus


341 
_IO_FILE
 
	t_IO_FILE
;

344 
	g_IO_FILE_∂us
;

346 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

347 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

349 #i‚de‡
_LIBC


350 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

351 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

352 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

354 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

355 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

356 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

364 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

372 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

373 
	tsize_t
 
	t__n
);

381 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

384 
	t__io_˛o£_‚
 (*
	t__cookõ
);

387 #ifde‡
_GNU_SOURCE


389 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

390 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

391 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

392 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

397 
__io_ªad_‚
 *
	mªad
;

398 
__io_wrôe_‚
 *
	mwrôe
;

399 
__io_£ek_‚
 *
	m£ek
;

400 
__io_˛o£_‚
 *
	m˛o£
;

401 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

402 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

404 
	g_IO_cookõ_fûe
;

407 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

408 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

412 #ifde‡
__˝lu•lus


416 
__undîÊow
 (
_IO_FILE
 *);

417 
__uÊow
 (
_IO_FILE
 *);

418 
__ovîÊow
 (
_IO_FILE
 *, );

419 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


420 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

421 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

422 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

425 #i‡ 
__GNUC__
 >= 3

426 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

431 
	#_IO_gëc_u∆ocked
(
_Â
) \

432 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

433 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

434 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

435 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

436 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

437 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

438 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

439 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

440 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

441 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

443 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


444 
	#_IO_gëwc_u∆ocked
(
_Â
) \

445 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

446 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

447 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

448 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

449 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

450 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

451 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

452 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

453 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

454 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

457 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

458 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

460 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

461 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

462 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

463 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

468 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

469 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

471 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

472 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

473 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 #ifde‡
_IO_MTSAFE_IO


476 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

477 
	#_IO_Êockfûe
(
_Â
) \

478 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

479 
	#_IO_fu∆ockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

482 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

483 
	#_IO_Êockfûe
(
_Â
Ë

	)

484 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

485 
	#_IO_·rylockfûe
(
_Â
Ë

	)

486 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

487 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

490 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

491 
_IO_va_li°
, *
__ª°ri˘
);

492 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

493 
_IO_va_li°
);

494 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

495 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

497 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

498 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

500 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

502 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


503 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

504 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

505 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

506 #i‡
__GNUC__
 >= 2

509 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


510 
	~<shlib-com∑t.h
>

511 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

512 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

513 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

514 c⁄° 
_IO_°dö_u£d
;

515 
wók_exã∫
 (
_IO_°dö_u£d
);

518 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


519 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

523 
	#_IO_fwide
(
__Â
, 
__mode
) \

524 ({ 
__ªsu…
 = (
__mode
); \

525 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

527 i‡((
__Â
)->
_mode
 == 0) \

529 (
__Â
)->
_mode
 = -1; \

530 
__ªsu…
 = (
__Â
)->
_mode
; \

532 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

533 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

535 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

536 
__ªsu…
; })

	)

539 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

540 
_IO_va_li°
, *
__ª°ri˘
);

541 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

542 
_IO_va_li°
);

543 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

544 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

547 #ifde‡
__LDBL_COMPAT


548 
	~<bôs/libio-ldbl.h
>

551 #ifde‡
__˝lu•lus


	@/usr/include/rpc/netdb.h

36 #i‚de‡
_RPC_NETDB_H


37 
	#_RPC_NETDB_H
 1

	)

39 
	~<„©uªs.h
>

41 
	#__√ed_size_t


	)

42 
	~<°ddef.h
>

44 
__BEGIN_DECLS


46 
	sΩ˚¡


48 *
	mr_«me
;

49 **
	mr_Æü£s
;

50 
	mr_numbî
;

53 
	$£åp˚¡
 (
__°ay›í
Ë
__THROW
;

54 
	$ídΩ˚¡
 (Ë
__THROW
;

55 
Ω˚¡
 *
	$gëΩcby«me
 (
__c⁄°
 *
__«me
Ë
__THROW
;

56 
Ω˚¡
 *
	$gëΩcbynumbî
 (
__numbî
Ë
__THROW
;

57 
Ω˚¡
 *
	$gëΩ˚¡
 (Ë
__THROW
;

59 #ifde‡
__USE_MISC


60 
	$gëΩcby«me_r
 (
__c⁄°
 *
__«me
, 
Ω˚¡
 *
__ªsu…_buf
,

61 *
__buf„r
, 
size_t
 
__buÊí
,

62 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

64 
	$gëΩcbynumbî_r
 (
__numbî
, 
Ω˚¡
 *
__ªsu…_buf
,

65 *
__buf„r
, 
size_t
 
__buÊí
,

66 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

68 
	$gëΩ˚¡_r
 (
Ω˚¡
 *
__ªsu…_buf
, *
__buf„r
,

69 
size_t
 
__buÊí
, 
Ω˚¡
 **
__ªsu…
Ë
__THROW
;

72 
__END_DECLS


	@/usr/include/stdint.h

23 #i‚de‡
_STDINT_H


24 
	#_STDINT_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/wch¨.h
>

28 
	~<bôs/w‹dsize.h
>

35 #i‚de‡
__öt8_t_deföed


36 
	#__öt8_t_deföed


	)

37 sig√d 
	töt8_t
;

38 
	töt16_t
;

39 
	töt32_t
;

40 #i‡
__WORDSIZE
 == 64

41 
	töt64_t
;

43 
__exãnsi⁄__


44 
	töt64_t
;

49 
	tuöt8_t
;

50 
	tuöt16_t
;

51 #i‚de‡
__uöt32_t_deföed


52 
	tuöt32_t
;

53 
	#__uöt32_t_deföed


	)

55 #i‡
__WORDSIZE
 == 64

56 
	tuöt64_t
;

58 
__exãnsi⁄__


59 
	tuöt64_t
;

66 sig√d 
	töt_Àa°8_t
;

67 
	töt_Àa°16_t
;

68 
	töt_Àa°32_t
;

69 #i‡
__WORDSIZE
 == 64

70 
	töt_Àa°64_t
;

72 
__exãnsi⁄__


73 
	töt_Àa°64_t
;

77 
	tuöt_Àa°8_t
;

78 
	tuöt_Àa°16_t
;

79 
	tuöt_Àa°32_t
;

80 #i‡
__WORDSIZE
 == 64

81 
	tuöt_Àa°64_t
;

83 
__exãnsi⁄__


84 
	tuöt_Àa°64_t
;

91 sig√d 
	töt_Á°8_t
;

92 #i‡
__WORDSIZE
 == 64

93 
	töt_Á°16_t
;

94 
	töt_Á°32_t
;

95 
	töt_Á°64_t
;

97 
	töt_Á°16_t
;

98 
	töt_Á°32_t
;

99 
__exãnsi⁄__


100 
	töt_Á°64_t
;

104 
	tuöt_Á°8_t
;

105 #i‡
__WORDSIZE
 == 64

106 
	tuöt_Á°16_t
;

107 
	tuöt_Á°32_t
;

108 
	tuöt_Á°64_t
;

110 
	tuöt_Á°16_t
;

111 
	tuöt_Á°32_t
;

112 
__exãnsi⁄__


113 
	tuöt_Á°64_t
;

118 #i‡
__WORDSIZE
 == 64

119 #i‚de‡
__öçå_t_deföed


120 
	töçå_t
;

121 
	#__öçå_t_deföed


	)

123 
	tuöçå_t
;

125 #i‚de‡
__öçå_t_deföed


126 
	töçå_t
;

127 
	#__öçå_t_deföed


	)

129 
	tuöçå_t
;

134 #i‡
__WORDSIZE
 == 64

135 
	tötmax_t
;

136 
	tuötmax_t
;

138 
__exãnsi⁄__


139 
	tötmax_t
;

140 
__exãnsi⁄__


141 
	tuötmax_t
;

147 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_LIMIT_MACROS


149 #i‡
__WORDSIZE
 == 64

150 
	#__INT64_C
(
c
Ë¯## 
L


	)

151 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

153 
	#__INT64_C
(
c
Ë¯## 
LL


	)

154 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

160 
	#INT8_MIN
 (-128)

	)

161 
	#INT16_MIN
 (-32767-1)

	)

162 
	#INT32_MIN
 (-2147483647-1)

	)

163 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

165 
	#INT8_MAX
 (127)

	)

166 
	#INT16_MAX
 (32767)

	)

167 
	#INT32_MAX
 (2147483647)

	)

168 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

171 
	#UINT8_MAX
 (255)

	)

172 
	#UINT16_MAX
 (65535)

	)

173 
	#UINT32_MAX
 (4294967295U)

	)

174 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

178 
	#INT_LEAST8_MIN
 (-128)

	)

179 
	#INT_LEAST16_MIN
 (-32767-1)

	)

180 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

181 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

183 
	#INT_LEAST8_MAX
 (127)

	)

184 
	#INT_LEAST16_MAX
 (32767)

	)

185 
	#INT_LEAST32_MAX
 (2147483647)

	)

186 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

189 
	#UINT_LEAST8_MAX
 (255)

	)

190 
	#UINT_LEAST16_MAX
 (65535)

	)

191 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

192 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

196 
	#INT_FAST8_MIN
 (-128)

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

199 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

201 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

202 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

204 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

206 
	#INT_FAST8_MAX
 (127)

	)

207 #i‡
__WORDSIZE
 == 64

208 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

209 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

211 
	#INT_FAST16_MAX
 (2147483647)

	)

212 
	#INT_FAST32_MAX
 (2147483647)

	)

214 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

217 
	#UINT_FAST8_MAX
 (255)

	)

218 #i‡
__WORDSIZE
 == 64

219 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

220 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

222 
	#UINT_FAST16_MAX
 (4294967295U)

	)

223 
	#UINT_FAST32_MAX
 (4294967295U)

	)

225 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

229 #i‡
__WORDSIZE
 == 64

230 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

231 
	#INTPTR_MAX
 (9223372036854775807L)

	)

232 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

234 
	#INTPTR_MIN
 (-2147483647-1)

	)

235 
	#INTPTR_MAX
 (2147483647)

	)

236 
	#UINTPTR_MAX
 (4294967295U)

	)

241 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

243 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

246 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

252 #i‡
__WORDSIZE
 == 64

253 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

254 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

256 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

257 
	#PTRDIFF_MAX
 (2147483647)

	)

261 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

262 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

265 #i‡
__WORDSIZE
 == 64

266 
	#SIZE_MAX
 (18446744073709551615UL)

	)

268 
	#SIZE_MAX
 (4294967295U)

	)

272 #i‚de‡
WCHAR_MIN


274 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

275 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

279 
	#WINT_MIN
 (0u)

	)

280 
	#WINT_MAX
 (4294967295u)

	)

287 #i‡!
deföed
 
__˝lu•lus
 || deföed 
__STDC_CONSTANT_MACROS


290 
	#INT8_C
(
c
Ë
	)
c

291 
	#INT16_C
(
c
Ë
	)
c

292 
	#INT32_C
(
c
Ë
	)
c

293 #i‡
__WORDSIZE
 == 64

294 
	#INT64_C
(
c
Ë¯## 
L


	)

296 
	#INT64_C
(
c
Ë¯## 
LL


	)

300 
	#UINT8_C
(
c
Ë
	)
c

301 
	#UINT16_C
(
c
Ë
	)
c

302 
	#UINT32_C
(
c
Ë¯## 
U


	)

303 #i‡
__WORDSIZE
 == 64

304 
	#UINT64_C
(
c
Ë¯## 
UL


	)

306 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

310 #i‡
__WORDSIZE
 == 64

311 
	#INTMAX_C
(
c
Ë¯## 
L


	)

312 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

314 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

315 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

72 
	t__c⁄°
 **, __const *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

86 
	t__c⁄°
 *,

87 
	t__c⁄°
 **,

88 
	t__c⁄°
 *, **,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

93 
	t__c⁄°
 *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 
__c⁄°
 *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

76 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

323 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

327 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

328 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

332 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

333 
__THROW
;

336 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

337 
__END_NAMESPACE_STD


339 #ifde‡
__USE_GNU


342 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

343 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

344 
__THROW
;

348 
__BEGIN_NAMESPACE_STD


351 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

355 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

359 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

363 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

364 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

365 
mb°©e_t
 *
__p
Ë
__THROW
;

368 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

369 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

372 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

373 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
__END_NAMESPACE_STD


378 #ifde‡
__USE_EXTERN_INLINES


384 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

385 
__exã∫_ölöe
 
wöt_t


386 
	`__NTH
 (
	$btowc
 (
__c
))

387 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

388 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

390 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

391 
__exã∫_ölöe
 

392 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

393 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

394 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

396 
__exã∫_ölöe
 
size_t


397 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

398 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

399 {  (
__ps
 !
NULL


400 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

403 
__BEGIN_NAMESPACE_STD


406 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

407 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

408 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

412 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

413 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

414 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

415 
__END_NAMESPACE_STD


418 #ifdef 
__USE_XOPEN2K8


421 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

422 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

423 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

427 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

428 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

429 
size_t
 
__nwc
, size_à
__Àn
,

430 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

435 #ifde‡
__USE_XOPEN


437 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

441 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

445 
__BEGIN_NAMESPACE_STD


448 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

449 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

450 
__END_NAMESPACE_STD


452 #ifde‡
__USE_ISOC99


453 
__BEGIN_NAMESPACE_C99


455 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

456 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

457 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
__END_NAMESPACE_C99


463 
__BEGIN_NAMESPACE_STD


466 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

467 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

471 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

473 
__THROW
;

474 
__END_NAMESPACE_STD


476 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

477 
__BEGIN_NAMESPACE_C99


480 
__exãnsi⁄__


481 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

482 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

483 
__THROW
;

487 
__exãnsi⁄__


488 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

489 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

490 
__ba£
Ë
__THROW
;

491 
__END_NAMESPACE_C99


494 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


497 
__exãnsi⁄__


498 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

499 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

500 
__THROW
;

504 
__exãnsi⁄__


505 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

506 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

507 
__ba£
Ë
__THROW
;

510 #ifde‡
__USE_GNU


524 
	~<xloˇÀ.h
>

528 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

529 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

530 
__loˇÀ_t
 
__loc
Ë
__THROW
;

532 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

533 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

534 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

536 
__exãnsi⁄__


537 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
)

545 
__THROW
;

547 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

549 
__THROW
;

551 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

552 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
;

555 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

556 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

557 
__loˇÀ_t
 
__loc
Ë
__THROW
;

562 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

563 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

567 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

568 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

569 
__THROW
;

575 #ifdef 
__USE_XOPEN2K8


578 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

581 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


582 
__BEGIN_NAMESPACE_STD


585 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

592 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

593 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

599 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

602 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

603 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
__THROW
 ;

610 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

611 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

612 
__gnuc_va_li°
 
__¨g
)

618 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

619 
__gnuc_va_li°
 
__¨g
)

623 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

624 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

625 
__gnuc_va_li°
 
__¨g
)

626 
__THROW
 ;

633 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

634 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

640 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

643 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

644 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
__THROW
 ;

647 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

648 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

649 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

650 #ifde‡
__REDIRECT


654 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

655 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

656 
__isoc99_fwsˇnf
)

658 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

659 
__isoc99_wsˇnf
)

661 
	`__REDIRECT_NTH
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

662 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

663 ...), 
__isoc99_swsˇnf
)

666 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

667 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

669 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

670 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

671 
__THROW
;

672 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

673 
	#wsˇnf
 
__isoc99_wsˇnf


	)

674 
	#swsˇnf
 
__isoc99_swsˇnf


	)

678 
__END_NAMESPACE_STD


681 #ifde‡
__USE_ISOC99


682 
__BEGIN_NAMESPACE_C99


687 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

688 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

689 
__gnuc_va_li°
 
__¨g
)

695 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

696 
__gnuc_va_li°
 
__¨g
)

699 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

700 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

702 
__THROW
 ;

704 #i‡!
deföed
 
__USE_GNU
 \

705 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

706 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

707 #ifde‡
__REDIRECT


708 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

709 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

710 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

712 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

713 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

715 
	`__REDIRECT_NTH
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

716 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

717 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

720 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

721 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
);

723 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

726 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

728 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

729 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

730 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

734 
__END_NAMESPACE_C99


738 
__BEGIN_NAMESPACE_STD


743 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

744 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

750 
wöt_t
 
	`gëwch¨
 ();

757 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

758 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

764 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

772 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

773 
__FILE
 *
__ª°ri˘
 
__°ªam
);

779 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

780 
__FILE
 *
__ª°ri˘
 
__°ªam
);

787 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

788 
__END_NAMESPACE_STD


791 #ifde‡
__USE_GNU


799 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

800 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

808 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

816 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

826 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

835 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

836 
__FILE
 *
__ª°ri˘
 
__°ªam
);

844 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

845 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
__BEGIN_NAMESPACE_C99


853 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

854 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

855 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

856 
__END_NAMESPACE_C99


858 #ifde‡
__USE_GNU


859 
	~<xloˇÀ.h
>

863 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

864 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

865 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

866 
__loˇÀ_t
 
__loc
Ë
__THROW
;

875 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


876 
	#__√ed_iswxxx


	)

877 
	~<w˘y≥.h
>

881 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


882 
	~<bôs/wch¨2.h
>

885 #ifde‡
__LDBL_COMPAT


886 
	~<bôs/wch¨-ldbl.h
>

889 
__END_DECLS


897 #unde‡
__√ed_mb°©e_t


898 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@
1
.
1
/usr/include
46
974
saned.c
scanimage.c
stiff.c
stiff.h
test.c
tstbackend.c
../include/_stdint.h
../include/lalloca.h
../include/md5.h
../include/sane/config.h
../include/sane/sane.h
../include/sane/sanei.h
../include/sane/sanei_auth.h
../include/sane/sanei_codec_bin.h
../include/sane/sanei_config.h
../include/sane/sanei_net.h
../include/sane/saneopts.h
/usr/include/arpa/inet.h
/usr/include/assert.h
/usr/include/ctype.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/getopt.h
/usr/include/grp.h
/usr/include/limits.h
/usr/include/netdb.h
/usr/include/netinet/in.h
/usr/include/pwd.h
/usr/include/signal.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/syslog.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/libio.h
/usr/include/rpc/netdb.h
/usr/include/stdint.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
